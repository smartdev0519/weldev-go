
=========== ./char_lit.go
char_lit.go:5: syntax error
char_lit.go:17: unknown escape sequence: \
char_lit.go:19: unknown escape sequence: "
BUG: known to fail incorrectly

=========== ./float_lit.go
float_lit.go:5: syntax error
float_lit.go:28: overflow in float constant
float_lit.go:56: overflow in float constant
float_lit.go:60: overflow in float constant
float_lit.go:64: overflow in float constant
BUG: known to fail incorrectly

=========== ./for.go
for.go:45: fatal error: optoas: no entry MOD-<int32>INT32
BUG: known to fail incorrectly

=========== ./func.go
main_f4: doasm: notfound from=75 to=10 (24)    IDIVL   $2,AX
main_f4: doasm: notfound from=75 to=10 (24)    IDIVL   $2,AX
main_f4: doasm: notfound from=75 to=10 (24)    IDIVL   $2,AX
BUG: known to fail incorrectly

=========== ./func1.go
BUG: known to succeed incorrectly

=========== ./hashmap.go
hashmap.go:46: fatal error: optoas: no entry LSH-<uint32>UINT32
BUG: known to fail incorrectly

=========== ./helloworld.go
hello, world

=========== ./if.go

=========== ./if1.go
BUG: known to succeed incorrectly

=========== ./int_lit.go
int_lit.go:5: syntax error
BUG: known to fail incorrectly

=========== ./iota.go

=========== ./literal.go

=========== ./sieve.go
sieve.go:8: fatal error: walktype: switch 1 unknown op SEND l(8)
BUG: known to fail incorrectly

=========== ./string_lit.go
string_lit.go:5: syntax error
string_lit.go:12: unknown escape sequence: \
BUG: known to fail incorrectly

=========== ./switch.go

=========== ./switch1.go
BUG: known to succeed incorrectly

=========== ./test0.go
test0.go:23: addtyp: renaming Point/<Point>{<x><int32>INT32;<y><int32>INT32;} to Point2/<Point2>FORW
test0.go:48: illegal types for operand
	(<float32>FLOAT32) AS (<int32>INT32)
test0.go:49: illegal types for operand
	(<float32>FLOAT32) AS (<int32>INT32)
test0.go:50: error in shape across assignment
test0.go:55: illegal types for operand
	(*<Point2>{}) CALLMETH (<Point2>{})
test0.go:54: function call must be single valued (0)
test0.go:54: illegal types for operand
	(<Point2>{}) AS ({})
BUG: known to fail incorrectly

=========== ./turing.go
Hello World!

=========== ken/for.go

=========== ken/interfun.go

=========== ken/intervar.go
 print 1 bio 2 file 3 -- abc

=========== ken/label.go
100

=========== ken/litfun.go

=========== ken/mfunc.go
ken/mfunc.go:13: function call must be single valued (2)
BUG: known to fail incorrectly

=========== ken/ptrfun.go

=========== ken/ptrvar.go

=========== ken/rob1.go

=========== ken/rob2.go
(hello hello (hello 12 34))

=========== ken/robfor.go
ken/robfor.go:45: fatal error: optoas: no entry MOD-<int32>INT32
BUG: known to fail incorrectly

=========== ken/robfunc.go
ken/robfunc.go:74: function call must be single valued (2)
ken/robfunc.go:79: function call must be single valued (2)
ken/robfunc.go:84: function call must be single valued (2)
BUG: known to fail incorrectly

=========== ken/robif.go

=========== ken/robiota.go

=========== ken/robliteral.go
assertion fail: sj1
assertion fail: sj2
BUG: known to fail incorrectly

=========== ken/robswitch.go

=========== ken/simparray.go

=========== ken/simpbool.go

=========== ken/simpconv.go

=========== ken/simpfun.go

=========== ken/simpprint.go
hello world

=========== ken/simpswitch.go
0out01out12out2aout34out4fiveout56out6aout78out89out9

=========== ken/simpvar.go

=========== ken/string.go
abcxyz-abcxyz-abcxyz-abcxyz-abcxyz-abcxyz-abcxyz

=========== ken/strvar.go

=========== bugs/bug001.go
BUG: known to succeed incorrectly

=========== bugs/bug002.go
BUG: known to succeed incorrectly

=========== bugs/bug003.go
bugs/bug003.go:6: switch statement must have case labels
bugs/bug003.go:6: fatal error: walkswitch: not case EMPTY

BUG: fatal error

=========== bugs/bug004.go
BUG: known to succeed incorrectly

=========== bugs/bug006.go
bugs/bug006.go:6: illegal combination of literals 0 0
bugs/bug006.go:6: expression must be a constant
bugs/bug006.go:6: expression must be a constant
bugs/bug006.go:6: expression must be a constant
bugs/bug006.go:6: expression must be a constant
bugs/bug006.go:6: expression must be a constant
bugs/bug006.go:6: expression must be a constant
bugs/bug006.go:6: expression must be a constant
bugs/bug006.go:6: expression must be a constant
bugs/bug006.go:6: expression must be a constant
bugs/bug006.go:6: fatal error: too many errors
BUG: known to fail incorrectly

=========== bugs/bug010.go
bugs/bug010.go:7: i undefined
bugs/bug010.go:8: illegal conversion of constant to 020({},<_o114>{},{})
bugs/bug010.go:9: error in shape across assignment
BUG: known to fail incorrectly

=========== bugs/bug014.go
bugs/bug014.go:6: non-oct character in escape sequence: '
bugs/bug014.go:6: non-oct character in escape sequence: '
bugs/bug014.go:7: non-oct character in escape sequence: '
bugs/bug014.go:8: non-hex character in escape sequence: '
bugs/bug014.go:9: non-hex character in escape sequence: '
BUG: errors caught but exit code should be non-zero

=========== bugs/bug015.go
BUG: known to succeed incorrectly

=========== bugs/bug016.go
bugs/bug016.go:7: fatal error: optoas: no entry LSH-<int32>INT32
BUG: fatal error

=========== bugs/bug022.go
bugs/bug022.go:8: illegal types for operand
	(*<string>*STRING) INDEXPTR (<int32>INT32)
bugs/bug022.go:8: illegal types for operand
	(<uint8>UINT8) AS 
BUG: known to fail incorrectly

=========== bugs/bug023.go
bugs/bug023.go:20: fatal error: naddr: const <Type>I{<TypeName>110(<_t117>{},<_o119>{},{});}
BUG: known to fail incorrectly

=========== bugs/bug024.go
bugs/bug024.go:8: unknown escape sequence: \
BUG: erroneous errors but compiles anyway

=========== bugs/bug025.go
bugs/bug025.go:7: fatal error: dumpexportvar: oname nil: Foo

BUG: known to fail incorrectly or at least with a bad message

=========== bugs/bug026.go
check: main_sigs_I: not defined
BUG: known to fail incorrectly

=========== bugs/bug027.go
bugs/bug027.go:50: illegal types for operand
	(<Element>I{}) CONV (<I>{})
bugs/bug027.go:50: illegal types for operand
	(<Element>I{}) CONV (<I>{})
BUG: known to fail incorrectly

=========== bugs/bug028.go
bugs/bug028.go:9: unreachable statements in a switch
BUG: known to fail incorrectly

=========== bugs/bug029.go
BUG: known to succeed incorrectly

=========== bugs/bug030.go
BUG: known to succeed incorrectly

=========== bugs/bug032.go
BUG: compilation succeeds incorrectly

=========== bugs/bug033.go
BUG: compilation succeeds incorrectly

=========== bugs/bug034.go
BUG: compilation succeeds incorrectly

=========== bugs/bug035.go
BUG: compilation succeeds incorrectly

=========== bugs/bug036.go
BUG: compilation succeeds incorrectly

=========== bugs/bug037.go
BUG: compilation succeeds incorrectly

=========== bugs/bug038.go
BUG: compilation succeeds incorrectly

=========== bugs/bug039.go
BUG: compilation succeeds incorrectly

=========== bugs/bug040.go
BUG: compilation succeeds incorrectly

=========== bugs/bug041.go
BUG: compilation succeeds incorrectly

=========== bugs/bug042.go
bugs/bug042.go:6: syntax error
BUG: compilation should succeed

=========== bugs/bug043.go
bugs/bug043.go:14: error in shape across assignment
bugs/bug043.go:17: error in shape across assignment
BUG: compilation should succeed

=========== bugs/bug044.go
bugs/bug044.go:23: error in shape across assignment
BUG: compilation should succeed

=========== fixedbugs/bug000.go

=========== fixedbugs/bug005.go

=========== fixedbugs/bug007.go
fixedbugs/bug007.go:7: addtyp: renaming Point/<Point>{<x><float32>FLOAT32;<y><float32>FLOAT32;} to Polar/<Polar>FORW

=========== fixedbugs/bug008.go

=========== fixedbugs/bug009.go

=========== fixedbugs/bug011.go

=========== fixedbugs/bug012.go

=========== fixedbugs/bug013.go

=========== fixedbugs/bug017.go

=========== fixedbugs/bug020.go

=========== fixedbugs/bug021.go

=========== fixedbugs/bug031.go
