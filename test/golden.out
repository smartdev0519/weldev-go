
=========== ./char_lit.go

=========== ./float_lit.go

=========== ./for.go

=========== ./func.go

=========== ./func1.go
BUG: known to succeed incorrectly

=========== ./hashmap.go

=========== ./helloworld.go
hello, world

=========== ./if.go

=========== ./if1.go

=========== ./int_lit.go

=========== ./iota.go

=========== ./literal.go

=========== ./nil.go

=========== ./sieve.go
sieve.go:8: fatal error: walktype: switch 1 unknown op SEND l(151)
BUG: known to fail incorrectly

=========== ./string_lit.go

=========== ./switch.go

=========== ./switch1.go

=========== ./test0.go
test0.go:48: illegal types for operand: AS
	(<float32>FLOAT32)
	(<int32>INT32)
test0.go:49: illegal types for operand: AS
	(<float32>FLOAT32)
	(<int32>INT32)
test0.go:50: error in shape across assignment
test0.go:47: illegal types for operand: CALLMETH
	(*<Point>{})
	(<Point>{<x><int32>INT32;<y><int32>INT32;<Point_Initialize>120({},{}){};<Point_Distance>101({},{}){};})
test0.go:47: illegal types for operand: AS
	(<Point>{<x><int32>INT32;<y><int32>INT32;<Point_Initialize>120({},{}){};<Point_Distance>101({},{}){};})
	({})
BUG: known to fail incorrectly

=========== ./turing.go
Hello World!

=========== ken/for.go

=========== ken/interfun.go

=========== ken/intervar.go
 print 1 bio 2 file 3 -- abc

=========== ken/label.go
100

=========== ken/litfun.go

=========== ken/mfunc.go

=========== ken/ptrfun.go

=========== ken/ptrvar.go

=========== ken/rob1.go

=========== ken/rob2.go
(defn foo (add 12 34))

=========== ken/robfor.go

=========== ken/robfunc.go

=========== ken/robif.go

=========== ken/robiota.go

=========== ken/robliteral.go

=========== ken/robswitch.go

=========== ken/simparray.go

=========== ken/simpbool.go

=========== ken/simpconv.go

=========== ken/simpfun.go

=========== ken/simpprint.go
hello world

=========== ken/simpswitch.go
0out01out12out2aout34out4fiveout56out6aout78out89out9

=========== ken/simpvar.go

=========== ken/string.go
abcxyz-abcxyz-abcxyz-abcxyz-abcxyz-abcxyz-abcxyz

=========== ken/strvar.go

=========== bugs/bug006.go
zero
 fail
BUG: known to fail incorrectly

=========== bugs/bug010.go
bugs/bug010.go:7: i undefined
bugs/bug010.go:8: illegal conversion of constant to 002({},{}){}
bugs/bug010.go:9: error in shape across assignment
BUG: known to fail incorrectly

=========== bugs/bug014.go
bugs/bug014.go:6: non-oct character in escape sequence: '
bugs/bug014.go:6: non-oct character in escape sequence: '
bugs/bug014.go:7: non-oct character in escape sequence: '
bugs/bug014.go:8: non-hex character in escape sequence: '
bugs/bug014.go:9: non-hex character in escape sequence: '
BUG: errors caught but exit code should be non-zero

=========== bugs/bug015.go
BUG: known to succeed incorrectly

=========== bugs/bug022.go
bugs/bug022.go:8: illegal types for operand: INDEXPTR
	(*<string>*STRING)
BUG: known to fail incorrectly

=========== bugs/bug023.go

=========== bugs/bug025.go
bugs/bug025.go:7: fatal error: dumpexportvar: oname nil: Foo

BUG: known to fail incorrectly or at least with a bad message

=========== bugs/bug026.go
check: main_sigs_I: not defined
BUG: known to fail incorrectly

=========== bugs/bug027.go
bugs/bug027.go:50: illegal types for operand: CONV
	(<Element>I{})
	(<I>{<val><int32>INT32;})
bugs/bug027.go:50: illegal types for operand: CONV
	(<Element>I{})
	(<I>{<val><int32>INT32;})
BUG: known to fail incorrectly

=========== bugs/bug029.go
BUG: known to succeed incorrectly

=========== bugs/bug030.go
BUG: known to succeed incorrectly

=========== bugs/bug032.go
BUG: compilation succeeds incorrectly

=========== bugs/bug033.go
BUG: compilation succeeds incorrectly

=========== bugs/bug034.go
BUG: compilation succeeds incorrectly

=========== bugs/bug035.go
BUG: compilation succeeds incorrectly

=========== bugs/bug036.go
BUG: compilation succeeds incorrectly

=========== bugs/bug037.go
BUG: compilation succeeds incorrectly

=========== bugs/bug038.go
BUG: compilation succeeds incorrectly

=========== bugs/bug039.go
BUG: compilation succeeds incorrectly

=========== bugs/bug040.go
BUG: compilation succeeds incorrectly

=========== bugs/bug041.go
BUG: compilation succeeds incorrectly

=========== bugs/bug042.go
bugs/bug042.go:6: syntax error
BUG: compilation should succeed

=========== bugs/bug043.go
bugs/bug043.go:14: error in shape across assignment
bugs/bug043.go:14: error in shape across assignment
BUG: compilation should succeed

=========== bugs/bug044.go
bugs/bug044.go:23: error in shape across assignment
BUG: compilation should succeed

=========== bugs/bug046.go
bugs/bug046.go:7: illegal <this> pointer
BUG: known to fail incorrectly

=========== bugs/bug047.go
bugs/bug047.go:13: illegal types for operand: CONV
	(<T>{<s><string>*STRING;<f><float32>FLOAT32;})
bugs/bug047.go:16: illegal types for operand: CONV
	(MAP[<int32>INT32]<int32>INT32)
bugs/bug047.go:13: illegal types for operand: CONV
	(<T>{<s><string>*STRING;<f><float32>FLOAT32;})
bugs/bug047.go:16: illegal types for operand: CONV
	(MAP[<int32>INT32]<int32>INT32)
BUG: known to fail incorrectly

=========== bugs/bug048.go
bugs/bug048.go:7: illegal types for operand: CONV
	(MAP[<int32>INT32]<int32>INT32)
bugs/bug048.go:8: syntax error
BUG: known to fail incorrectly

=========== bugs/bug049.go

=========== bugs/bug050.go
bugs/bug050.go:3: package statement must be first
sys.6:1 bugs/bug050.go:2: syntax error
BUG: segfault

=========== bugs/bug051.go
bugs/bug051.go:10: expression must be a constant
bugs/bug051.go:10: expression must be a constant
bugs/bug051.go:10: expression must be a constant
bugs/bug051.go:10: expression must be a constant
bugs/bug051.go:10: expression must be a constant
bugs/bug051.go:10: expression must be a constant
bugs/bug051.go:10: expression must be a constant
bugs/bug051.go:10: expression must be a constant
bugs/bug051.go:10: expression must be a constant
bugs/bug051.go:10: expression must be a constant
bugs/bug051.go:10: fatal error: too many errors
BUG: infinite loop in error reporting

=========== bugs/bug052.go
BUG: incorrect code for division

=========== bugs/bug053.go
bugs/bug053.go:6: syntax error
BUG: len should not be a keyword

=========== bugs/bug054.go
bugs/bug054.go:22: fatal error: agen: unknown op CALLMETH u(1) l(165) <Element>I{}
BUG: known to fail incorrectly

=========== bugs/bug055.go
bug055.go:1: fatal error: cant open: bug055.go
BUG: known to fail incorrectly

=========== fixedbugs/bug000.go

=========== fixedbugs/bug001.go

=========== fixedbugs/bug002.go

=========== fixedbugs/bug003.go

=========== fixedbugs/bug004.go

=========== fixedbugs/bug005.go

=========== fixedbugs/bug007.go

=========== fixedbugs/bug008.go

=========== fixedbugs/bug009.go

=========== fixedbugs/bug011.go

=========== fixedbugs/bug012.go

=========== fixedbugs/bug013.go

=========== fixedbugs/bug016.go

=========== fixedbugs/bug017.go

=========== fixedbugs/bug020.go

=========== fixedbugs/bug021.go

=========== fixedbugs/bug024.go

=========== fixedbugs/bug028.go

=========== fixedbugs/bug031.go

=========== fixedbugs/bug045.go
