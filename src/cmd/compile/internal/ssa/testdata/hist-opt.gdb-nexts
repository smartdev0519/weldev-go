  /usr/local/google/home/drchase/work/go/src/cmd/compile/internal/ssa/testdata/hist.go
35:	func main() {
35:	func main() {
36:		hist := make([]int, 100)
37:		var reader io.Reader = strings.NewReader(cannedInput) //gdb-dbg=(hist/A,cannedInput/A)
13:		"strings"
150:	func NewReader(s string) *Reader { return &Reader{s, 0, -1} }
38:		if len(os.Args) > 1 {
8:		"bufio"
84:			split:        ScanLines,
74:		MaxScanTokenSize = 64 * 1024
47:		for scanner.Scan() {
107:		return string(s.token)
49:			i, err := strconv.ParseInt(s, 10, 64)
50:			if err != nil { //gdb-dbg=(i)
54:			hist = ensure(int(i), hist)
55:			hist[int(i)]++
47:		for scanner.Scan() {
107:		return string(s.token)
49:			i, err := strconv.ParseInt(s, 10, 64)
50:			if err != nil { //gdb-dbg=(i)
54:			hist = ensure(int(i), hist)
55:			hist[int(i)]++
47:		for scanner.Scan() {
107:		return string(s.token)
49:			i, err := strconv.ParseInt(s, 10, 64)
50:			if err != nil { //gdb-dbg=(i)
54:			hist = ensure(int(i), hist)
55:			hist[int(i)]++
47:		for scanner.Scan() {
107:		return string(s.token)
49:			i, err := strconv.ParseInt(s, 10, 64)
50:			if err != nil { //gdb-dbg=(i)
54:			hist = ensure(int(i), hist)
55:			hist[int(i)]++
47:		for scanner.Scan() {
107:		return string(s.token)
49:			i, err := strconv.ParseInt(s, 10, 64)
50:			if err != nil { //gdb-dbg=(i)
54:			hist = ensure(int(i), hist)
55:			hist[int(i)]++
47:		for scanner.Scan() {
107:		return string(s.token)
49:			i, err := strconv.ParseInt(s, 10, 64)
50:			if err != nil { //gdb-dbg=(i)
54:			hist = ensure(int(i), hist)
55:			hist[int(i)]++
47:		for scanner.Scan() {
107:		return string(s.token)
49:			i, err := strconv.ParseInt(s, 10, 64)
50:			if err != nil { //gdb-dbg=(i)
54:			hist = ensure(int(i), hist)
55:			hist[int(i)]++
47:		for scanner.Scan() {
107:		return string(s.token)
49:			i, err := strconv.ParseInt(s, 10, 64)
50:			if err != nil { //gdb-dbg=(i)
54:			hist = ensure(int(i), hist)
55:			hist[int(i)]++
47:		for scanner.Scan() {
107:		return string(s.token)
49:			i, err := strconv.ParseInt(s, 10, 64)
50:			if err != nil { //gdb-dbg=(i)
54:			hist = ensure(int(i), hist)
55:			hist[int(i)]++
47:		for scanner.Scan() {
107:		return string(s.token)
49:			i, err := strconv.ParseInt(s, 10, 64)
50:			if err != nil { //gdb-dbg=(i)
54:			hist = ensure(int(i), hist)
55:			hist[int(i)]++
47:		for scanner.Scan() {
59:		for i, a := range hist {
60:			if a == 0 {
60:			if a == 0 {
65:			fmt.Fprintf(os.Stderr, "%d\t%d\t%d\t%d\t%d\n", i, a, n, i*a, t) //gdb-dbg=(n,i,t)
64:			n += a
65:			fmt.Fprintf(os.Stderr, "%d\t%d\t%d\t%d\t%d\n", i, a, n, i*a, t) //gdb-dbg=(n,i,t)
63:			t += i * a
65:			fmt.Fprintf(os.Stderr, "%d\t%d\t%d\t%d\t%d\n", i, a, n, i*a, t) //gdb-dbg=(n,i,t)
63:			t += i * a
65:			fmt.Fprintf(os.Stderr, "%d\t%d\t%d\t%d\t%d\n", i, a, n, i*a, t) //gdb-dbg=(n,i,t)
59:		for i, a := range hist {
65:			fmt.Fprintf(os.Stderr, "%d\t%d\t%d\t%d\t%d\n", i, a, n, i*a, t) //gdb-dbg=(n,i,t)
60:			if a == 0 {
65:			fmt.Fprintf(os.Stderr, "%d\t%d\t%d\t%d\t%d\n", i, a, n, i*a, t) //gdb-dbg=(n,i,t)
64:			n += a
65:			fmt.Fprintf(os.Stderr, "%d\t%d\t%d\t%d\t%d\n", i, a, n, i*a, t) //gdb-dbg=(n,i,t)
63:			t += i * a
65:			fmt.Fprintf(os.Stderr, "%d\t%d\t%d\t%d\t%d\n", i, a, n, i*a, t) //gdb-dbg=(n,i,t)
63:			t += i * a
65:			fmt.Fprintf(os.Stderr, "%d\t%d\t%d\t%d\t%d\n", i, a, n, i*a, t) //gdb-dbg=(n,i,t)
59:		for i, a := range hist {
65:			fmt.Fprintf(os.Stderr, "%d\t%d\t%d\t%d\t%d\n", i, a, n, i*a, t) //gdb-dbg=(n,i,t)
60:			if a == 0 {
60:			if a == 0 {
65:			fmt.Fprintf(os.Stderr, "%d\t%d\t%d\t%d\t%d\n", i, a, n, i*a, t) //gdb-dbg=(n,i,t)
64:			n += a
65:			fmt.Fprintf(os.Stderr, "%d\t%d\t%d\t%d\t%d\n", i, a, n, i*a, t) //gdb-dbg=(n,i,t)
63:			t += i * a
65:			fmt.Fprintf(os.Stderr, "%d\t%d\t%d\t%d\t%d\n", i, a, n, i*a, t) //gdb-dbg=(n,i,t)
63:			t += i * a
65:			fmt.Fprintf(os.Stderr, "%d\t%d\t%d\t%d\t%d\n", i, a, n, i*a, t) //gdb-dbg=(n,i,t)
59:		for i, a := range hist {
65:			fmt.Fprintf(os.Stderr, "%d\t%d\t%d\t%d\t%d\n", i, a, n, i*a, t) //gdb-dbg=(n,i,t)
60:			if a == 0 {
60:			if a == 0 {
60:			if a == 0 {
60:			if a == 0 {
65:			fmt.Fprintf(os.Stderr, "%d\t%d\t%d\t%d\t%d\n", i, a, n, i*a, t) //gdb-dbg=(n,i,t)
64:			n += a
65:			fmt.Fprintf(os.Stderr, "%d\t%d\t%d\t%d\t%d\n", i, a, n, i*a, t) //gdb-dbg=(n,i,t)
63:			t += i * a
65:			fmt.Fprintf(os.Stderr, "%d\t%d\t%d\t%d\t%d\n", i, a, n, i*a, t) //gdb-dbg=(n,i,t)
63:			t += i * a
65:			fmt.Fprintf(os.Stderr, "%d\t%d\t%d\t%d\t%d\n", i, a, n, i*a, t) //gdb-dbg=(n,i,t)
59:		for i, a := range hist {
65:			fmt.Fprintf(os.Stderr, "%d\t%d\t%d\t%d\t%d\n", i, a, n, i*a, t) //gdb-dbg=(n,i,t)
60:			if a == 0 {
60:			if a == 0 {
60:			if a == 0 {
60:			if a == 0 {
60:			if a == 0 {
60:			if a == 0 {
60:			if a == 0 {
60:			if a == 0 {
60:			if a == 0 {
60:			if a == 0 {
60:			if a == 0 {
60:			if a == 0 {
60:			if a == 0 {
60:			if a == 0 {
60:			if a == 0 {
60:			if a == 0 {
60:			if a == 0 {
60:			if a == 0 {
60:			if a == 0 {
60:			if a == 0 {
60:			if a == 0 {
60:			if a == 0 {
60:			if a == 0 {
60:			if a == 0 {
60:			if a == 0 {
60:			if a == 0 {
60:			if a == 0 {
60:			if a == 0 {
60:			if a == 0 {
60:			if a == 0 {
60:			if a == 0 {
60:			if a == 0 {
60:			if a == 0 {
60:			if a == 0 {
60:			if a == 0 {
60:			if a == 0 {
60:			if a == 0 {
60:			if a == 0 {
60:			if a == 0 {
60:			if a == 0 {
60:			if a == 0 {
60:			if a == 0 {
60:			if a == 0 {
60:			if a == 0 {
60:			if a == 0 {
60:			if a == 0 {
60:			if a == 0 {
60:			if a == 0 {
60:			if a == 0 {
60:			if a == 0 {
60:			if a == 0 {
60:			if a == 0 {
60:			if a == 0 {
60:			if a == 0 {
60:			if a == 0 {
60:			if a == 0 {
60:			if a == 0 {
60:			if a == 0 {
60:			if a == 0 {
60:			if a == 0 {
60:			if a == 0 {
60:			if a == 0 {
60:			if a == 0 {
60:			if a == 0 {
60:			if a == 0 {
60:			if a == 0 {
60:			if a == 0 {
60:			if a == 0 {
60:			if a == 0 {
60:			if a == 0 {
60:			if a == 0 {
60:			if a == 0 {
60:			if a == 0 {
60:			if a == 0 {
60:			if a == 0 {
60:			if a == 0 {
60:			if a == 0 {
60:			if a == 0 {
60:			if a == 0 {
60:			if a == 0 {
60:			if a == 0 {
60:			if a == 0 {
60:			if a == 0 {
60:			if a == 0 {
60:			if a == 0 {
60:			if a == 0 {
60:			if a == 0 {
60:			if a == 0 {
60:			if a == 0 {
60:			if a == 0 {
60:			if a == 0 {
68:	}
  /usr/local/google/home/drchase/work/go/src/runtime/proc.go
201:		if atomic.Load(&runningPanicDefers) != 0 {
201:		if atomic.Load(&runningPanicDefers) != 0 {
210:		if atomic.Load(&panicking) != 0 {
214:		exit(0)
