// run
// Code generated by gen/arithConstGen.go. DO NOT EDIT.

package main

import "fmt"
import "os"

//go:noinline
func add_uint64_0(a uint64) uint64 { return a + 0 }

//go:noinline
func add_0_uint64(a uint64) uint64 { return 0 + a }

//go:noinline
func add_uint64_1(a uint64) uint64 { return a + 1 }

//go:noinline
func add_1_uint64(a uint64) uint64 { return 1 + a }

//go:noinline
func add_uint64_4294967296(a uint64) uint64 { return a + 4294967296 }

//go:noinline
func add_4294967296_uint64(a uint64) uint64 { return 4294967296 + a }

//go:noinline
func add_uint64_9223372036854775808(a uint64) uint64 { return a + 9223372036854775808 }

//go:noinline
func add_9223372036854775808_uint64(a uint64) uint64 { return 9223372036854775808 + a }

//go:noinline
func add_uint64_18446744073709551615(a uint64) uint64 { return a + 18446744073709551615 }

//go:noinline
func add_18446744073709551615_uint64(a uint64) uint64 { return 18446744073709551615 + a }

//go:noinline
func sub_uint64_0(a uint64) uint64 { return a - 0 }

//go:noinline
func sub_0_uint64(a uint64) uint64 { return 0 - a }

//go:noinline
func sub_uint64_1(a uint64) uint64 { return a - 1 }

//go:noinline
func sub_1_uint64(a uint64) uint64 { return 1 - a }

//go:noinline
func sub_uint64_4294967296(a uint64) uint64 { return a - 4294967296 }

//go:noinline
func sub_4294967296_uint64(a uint64) uint64 { return 4294967296 - a }

//go:noinline
func sub_uint64_9223372036854775808(a uint64) uint64 { return a - 9223372036854775808 }

//go:noinline
func sub_9223372036854775808_uint64(a uint64) uint64 { return 9223372036854775808 - a }

//go:noinline
func sub_uint64_18446744073709551615(a uint64) uint64 { return a - 18446744073709551615 }

//go:noinline
func sub_18446744073709551615_uint64(a uint64) uint64 { return 18446744073709551615 - a }

//go:noinline
func div_0_uint64(a uint64) uint64 { return 0 / a }

//go:noinline
func div_uint64_1(a uint64) uint64 { return a / 1 }

//go:noinline
func div_1_uint64(a uint64) uint64 { return 1 / a }

//go:noinline
func div_uint64_4294967296(a uint64) uint64 { return a / 4294967296 }

//go:noinline
func div_4294967296_uint64(a uint64) uint64 { return 4294967296 / a }

//go:noinline
func div_uint64_9223372036854775808(a uint64) uint64 { return a / 9223372036854775808 }

//go:noinline
func div_9223372036854775808_uint64(a uint64) uint64 { return 9223372036854775808 / a }

//go:noinline
func div_uint64_18446744073709551615(a uint64) uint64 { return a / 18446744073709551615 }

//go:noinline
func div_18446744073709551615_uint64(a uint64) uint64 { return 18446744073709551615 / a }

//go:noinline
func mul_uint64_0(a uint64) uint64 { return a * 0 }

//go:noinline
func mul_0_uint64(a uint64) uint64 { return 0 * a }

//go:noinline
func mul_uint64_1(a uint64) uint64 { return a * 1 }

//go:noinline
func mul_1_uint64(a uint64) uint64 { return 1 * a }

//go:noinline
func mul_uint64_4294967296(a uint64) uint64 { return a * 4294967296 }

//go:noinline
func mul_4294967296_uint64(a uint64) uint64 { return 4294967296 * a }

//go:noinline
func mul_uint64_9223372036854775808(a uint64) uint64 { return a * 9223372036854775808 }

//go:noinline
func mul_9223372036854775808_uint64(a uint64) uint64 { return 9223372036854775808 * a }

//go:noinline
func mul_uint64_18446744073709551615(a uint64) uint64 { return a * 18446744073709551615 }

//go:noinline
func mul_18446744073709551615_uint64(a uint64) uint64 { return 18446744073709551615 * a }

//go:noinline
func lsh_uint64_0(a uint64) uint64 { return a << 0 }

//go:noinline
func lsh_0_uint64(a uint64) uint64 { return 0 << a }

//go:noinline
func lsh_uint64_1(a uint64) uint64 { return a << 1 }

//go:noinline
func lsh_1_uint64(a uint64) uint64 { return 1 << a }

//go:noinline
func lsh_uint64_4294967296(a uint64) uint64 { return a << uint64(4294967296) }

//go:noinline
func lsh_4294967296_uint64(a uint64) uint64 { return 4294967296 << a }

//go:noinline
func lsh_uint64_9223372036854775808(a uint64) uint64 { return a << uint64(9223372036854775808) }

//go:noinline
func lsh_9223372036854775808_uint64(a uint64) uint64 { return 9223372036854775808 << a }

//go:noinline
func lsh_uint64_18446744073709551615(a uint64) uint64 { return a << uint64(18446744073709551615) }

//go:noinline
func lsh_18446744073709551615_uint64(a uint64) uint64 { return 18446744073709551615 << a }

//go:noinline
func rsh_uint64_0(a uint64) uint64 { return a >> 0 }

//go:noinline
func rsh_0_uint64(a uint64) uint64 { return 0 >> a }

//go:noinline
func rsh_uint64_1(a uint64) uint64 { return a >> 1 }

//go:noinline
func rsh_1_uint64(a uint64) uint64 { return 1 >> a }

//go:noinline
func rsh_uint64_4294967296(a uint64) uint64 { return a >> uint64(4294967296) }

//go:noinline
func rsh_4294967296_uint64(a uint64) uint64 { return 4294967296 >> a }

//go:noinline
func rsh_uint64_9223372036854775808(a uint64) uint64 { return a >> uint64(9223372036854775808) }

//go:noinline
func rsh_9223372036854775808_uint64(a uint64) uint64 { return 9223372036854775808 >> a }

//go:noinline
func rsh_uint64_18446744073709551615(a uint64) uint64 { return a >> uint64(18446744073709551615) }

//go:noinline
func rsh_18446744073709551615_uint64(a uint64) uint64 { return 18446744073709551615 >> a }

//go:noinline
func mod_0_uint64(a uint64) uint64 { return 0 % a }

//go:noinline
func mod_uint64_1(a uint64) uint64 { return a % 1 }

//go:noinline
func mod_1_uint64(a uint64) uint64 { return 1 % a }

//go:noinline
func mod_uint64_4294967296(a uint64) uint64 { return a % 4294967296 }

//go:noinline
func mod_4294967296_uint64(a uint64) uint64 { return 4294967296 % a }

//go:noinline
func mod_uint64_9223372036854775808(a uint64) uint64 { return a % 9223372036854775808 }

//go:noinline
func mod_9223372036854775808_uint64(a uint64) uint64 { return 9223372036854775808 % a }

//go:noinline
func mod_uint64_18446744073709551615(a uint64) uint64 { return a % 18446744073709551615 }

//go:noinline
func mod_18446744073709551615_uint64(a uint64) uint64 { return 18446744073709551615 % a }

//go:noinline
func and_uint64_0(a uint64) uint64 { return a & 0 }

//go:noinline
func and_0_uint64(a uint64) uint64 { return 0 & a }

//go:noinline
func and_uint64_1(a uint64) uint64 { return a & 1 }

//go:noinline
func and_1_uint64(a uint64) uint64 { return 1 & a }

//go:noinline
func and_uint64_4294967296(a uint64) uint64 { return a & 4294967296 }

//go:noinline
func and_4294967296_uint64(a uint64) uint64 { return 4294967296 & a }

//go:noinline
func and_uint64_9223372036854775808(a uint64) uint64 { return a & 9223372036854775808 }

//go:noinline
func and_9223372036854775808_uint64(a uint64) uint64 { return 9223372036854775808 & a }

//go:noinline
func and_uint64_18446744073709551615(a uint64) uint64 { return a & 18446744073709551615 }

//go:noinline
func and_18446744073709551615_uint64(a uint64) uint64 { return 18446744073709551615 & a }

//go:noinline
func or_uint64_0(a uint64) uint64 { return a | 0 }

//go:noinline
func or_0_uint64(a uint64) uint64 { return 0 | a }

//go:noinline
func or_uint64_1(a uint64) uint64 { return a | 1 }

//go:noinline
func or_1_uint64(a uint64) uint64 { return 1 | a }

//go:noinline
func or_uint64_4294967296(a uint64) uint64 { return a | 4294967296 }

//go:noinline
func or_4294967296_uint64(a uint64) uint64 { return 4294967296 | a }

//go:noinline
func or_uint64_9223372036854775808(a uint64) uint64 { return a | 9223372036854775808 }

//go:noinline
func or_9223372036854775808_uint64(a uint64) uint64 { return 9223372036854775808 | a }

//go:noinline
func or_uint64_18446744073709551615(a uint64) uint64 { return a | 18446744073709551615 }

//go:noinline
func or_18446744073709551615_uint64(a uint64) uint64 { return 18446744073709551615 | a }

//go:noinline
func xor_uint64_0(a uint64) uint64 { return a ^ 0 }

//go:noinline
func xor_0_uint64(a uint64) uint64 { return 0 ^ a }

//go:noinline
func xor_uint64_1(a uint64) uint64 { return a ^ 1 }

//go:noinline
func xor_1_uint64(a uint64) uint64 { return 1 ^ a }

//go:noinline
func xor_uint64_4294967296(a uint64) uint64 { return a ^ 4294967296 }

//go:noinline
func xor_4294967296_uint64(a uint64) uint64 { return 4294967296 ^ a }

//go:noinline
func xor_uint64_9223372036854775808(a uint64) uint64 { return a ^ 9223372036854775808 }

//go:noinline
func xor_9223372036854775808_uint64(a uint64) uint64 { return 9223372036854775808 ^ a }

//go:noinline
func xor_uint64_18446744073709551615(a uint64) uint64 { return a ^ 18446744073709551615 }

//go:noinline
func xor_18446744073709551615_uint64(a uint64) uint64 { return 18446744073709551615 ^ a }

//go:noinline
func add_int64_Neg9223372036854775808(a int64) int64 { return a + -9223372036854775808 }

//go:noinline
func add_Neg9223372036854775808_int64(a int64) int64 { return -9223372036854775808 + a }

//go:noinline
func add_int64_Neg9223372036854775807(a int64) int64 { return a + -9223372036854775807 }

//go:noinline
func add_Neg9223372036854775807_int64(a int64) int64 { return -9223372036854775807 + a }

//go:noinline
func add_int64_Neg4294967296(a int64) int64 { return a + -4294967296 }

//go:noinline
func add_Neg4294967296_int64(a int64) int64 { return -4294967296 + a }

//go:noinline
func add_int64_Neg1(a int64) int64 { return a + -1 }

//go:noinline
func add_Neg1_int64(a int64) int64 { return -1 + a }

//go:noinline
func add_int64_0(a int64) int64 { return a + 0 }

//go:noinline
func add_0_int64(a int64) int64 { return 0 + a }

//go:noinline
func add_int64_1(a int64) int64 { return a + 1 }

//go:noinline
func add_1_int64(a int64) int64 { return 1 + a }

//go:noinline
func add_int64_4294967296(a int64) int64 { return a + 4294967296 }

//go:noinline
func add_4294967296_int64(a int64) int64 { return 4294967296 + a }

//go:noinline
func add_int64_9223372036854775806(a int64) int64 { return a + 9223372036854775806 }

//go:noinline
func add_9223372036854775806_int64(a int64) int64 { return 9223372036854775806 + a }

//go:noinline
func add_int64_9223372036854775807(a int64) int64 { return a + 9223372036854775807 }

//go:noinline
func add_9223372036854775807_int64(a int64) int64 { return 9223372036854775807 + a }

//go:noinline
func sub_int64_Neg9223372036854775808(a int64) int64 { return a - -9223372036854775808 }

//go:noinline
func sub_Neg9223372036854775808_int64(a int64) int64 { return -9223372036854775808 - a }

//go:noinline
func sub_int64_Neg9223372036854775807(a int64) int64 { return a - -9223372036854775807 }

//go:noinline
func sub_Neg9223372036854775807_int64(a int64) int64 { return -9223372036854775807 - a }

//go:noinline
func sub_int64_Neg4294967296(a int64) int64 { return a - -4294967296 }

//go:noinline
func sub_Neg4294967296_int64(a int64) int64 { return -4294967296 - a }

//go:noinline
func sub_int64_Neg1(a int64) int64 { return a - -1 }

//go:noinline
func sub_Neg1_int64(a int64) int64 { return -1 - a }

//go:noinline
func sub_int64_0(a int64) int64 { return a - 0 }

//go:noinline
func sub_0_int64(a int64) int64 { return 0 - a }

//go:noinline
func sub_int64_1(a int64) int64 { return a - 1 }

//go:noinline
func sub_1_int64(a int64) int64 { return 1 - a }

//go:noinline
func sub_int64_4294967296(a int64) int64 { return a - 4294967296 }

//go:noinline
func sub_4294967296_int64(a int64) int64 { return 4294967296 - a }

//go:noinline
func sub_int64_9223372036854775806(a int64) int64 { return a - 9223372036854775806 }

//go:noinline
func sub_9223372036854775806_int64(a int64) int64 { return 9223372036854775806 - a }

//go:noinline
func sub_int64_9223372036854775807(a int64) int64 { return a - 9223372036854775807 }

//go:noinline
func sub_9223372036854775807_int64(a int64) int64 { return 9223372036854775807 - a }

//go:noinline
func div_int64_Neg9223372036854775808(a int64) int64 { return a / -9223372036854775808 }

//go:noinline
func div_Neg9223372036854775808_int64(a int64) int64 { return -9223372036854775808 / a }

//go:noinline
func div_int64_Neg9223372036854775807(a int64) int64 { return a / -9223372036854775807 }

//go:noinline
func div_Neg9223372036854775807_int64(a int64) int64 { return -9223372036854775807 / a }

//go:noinline
func div_int64_Neg4294967296(a int64) int64 { return a / -4294967296 }

//go:noinline
func div_Neg4294967296_int64(a int64) int64 { return -4294967296 / a }

//go:noinline
func div_int64_Neg1(a int64) int64 { return a / -1 }

//go:noinline
func div_Neg1_int64(a int64) int64 { return -1 / a }

//go:noinline
func div_0_int64(a int64) int64 { return 0 / a }

//go:noinline
func div_int64_1(a int64) int64 { return a / 1 }

//go:noinline
func div_1_int64(a int64) int64 { return 1 / a }

//go:noinline
func div_int64_4294967296(a int64) int64 { return a / 4294967296 }

//go:noinline
func div_4294967296_int64(a int64) int64 { return 4294967296 / a }

//go:noinline
func div_int64_9223372036854775806(a int64) int64 { return a / 9223372036854775806 }

//go:noinline
func div_9223372036854775806_int64(a int64) int64 { return 9223372036854775806 / a }

//go:noinline
func div_int64_9223372036854775807(a int64) int64 { return a / 9223372036854775807 }

//go:noinline
func div_9223372036854775807_int64(a int64) int64 { return 9223372036854775807 / a }

//go:noinline
func mul_int64_Neg9223372036854775808(a int64) int64 { return a * -9223372036854775808 }

//go:noinline
func mul_Neg9223372036854775808_int64(a int64) int64 { return -9223372036854775808 * a }

//go:noinline
func mul_int64_Neg9223372036854775807(a int64) int64 { return a * -9223372036854775807 }

//go:noinline
func mul_Neg9223372036854775807_int64(a int64) int64 { return -9223372036854775807 * a }

//go:noinline
func mul_int64_Neg4294967296(a int64) int64 { return a * -4294967296 }

//go:noinline
func mul_Neg4294967296_int64(a int64) int64 { return -4294967296 * a }

//go:noinline
func mul_int64_Neg1(a int64) int64 { return a * -1 }

//go:noinline
func mul_Neg1_int64(a int64) int64 { return -1 * a }

//go:noinline
func mul_int64_0(a int64) int64 { return a * 0 }

//go:noinline
func mul_0_int64(a int64) int64 { return 0 * a }

//go:noinline
func mul_int64_1(a int64) int64 { return a * 1 }

//go:noinline
func mul_1_int64(a int64) int64 { return 1 * a }

//go:noinline
func mul_int64_4294967296(a int64) int64 { return a * 4294967296 }

//go:noinline
func mul_4294967296_int64(a int64) int64 { return 4294967296 * a }

//go:noinline
func mul_int64_9223372036854775806(a int64) int64 { return a * 9223372036854775806 }

//go:noinline
func mul_9223372036854775806_int64(a int64) int64 { return 9223372036854775806 * a }

//go:noinline
func mul_int64_9223372036854775807(a int64) int64 { return a * 9223372036854775807 }

//go:noinline
func mul_9223372036854775807_int64(a int64) int64 { return 9223372036854775807 * a }

//go:noinline
func mod_int64_Neg9223372036854775808(a int64) int64 { return a % -9223372036854775808 }

//go:noinline
func mod_Neg9223372036854775808_int64(a int64) int64 { return -9223372036854775808 % a }

//go:noinline
func mod_int64_Neg9223372036854775807(a int64) int64 { return a % -9223372036854775807 }

//go:noinline
func mod_Neg9223372036854775807_int64(a int64) int64 { return -9223372036854775807 % a }

//go:noinline
func mod_int64_Neg4294967296(a int64) int64 { return a % -4294967296 }

//go:noinline
func mod_Neg4294967296_int64(a int64) int64 { return -4294967296 % a }

//go:noinline
func mod_int64_Neg1(a int64) int64 { return a % -1 }

//go:noinline
func mod_Neg1_int64(a int64) int64 { return -1 % a }

//go:noinline
func mod_0_int64(a int64) int64 { return 0 % a }

//go:noinline
func mod_int64_1(a int64) int64 { return a % 1 }

//go:noinline
func mod_1_int64(a int64) int64 { return 1 % a }

//go:noinline
func mod_int64_4294967296(a int64) int64 { return a % 4294967296 }

//go:noinline
func mod_4294967296_int64(a int64) int64 { return 4294967296 % a }

//go:noinline
func mod_int64_9223372036854775806(a int64) int64 { return a % 9223372036854775806 }

//go:noinline
func mod_9223372036854775806_int64(a int64) int64 { return 9223372036854775806 % a }

//go:noinline
func mod_int64_9223372036854775807(a int64) int64 { return a % 9223372036854775807 }

//go:noinline
func mod_9223372036854775807_int64(a int64) int64 { return 9223372036854775807 % a }

//go:noinline
func and_int64_Neg9223372036854775808(a int64) int64 { return a & -9223372036854775808 }

//go:noinline
func and_Neg9223372036854775808_int64(a int64) int64 { return -9223372036854775808 & a }

//go:noinline
func and_int64_Neg9223372036854775807(a int64) int64 { return a & -9223372036854775807 }

//go:noinline
func and_Neg9223372036854775807_int64(a int64) int64 { return -9223372036854775807 & a }

//go:noinline
func and_int64_Neg4294967296(a int64) int64 { return a & -4294967296 }

//go:noinline
func and_Neg4294967296_int64(a int64) int64 { return -4294967296 & a }

//go:noinline
func and_int64_Neg1(a int64) int64 { return a & -1 }

//go:noinline
func and_Neg1_int64(a int64) int64 { return -1 & a }

//go:noinline
func and_int64_0(a int64) int64 { return a & 0 }

//go:noinline
func and_0_int64(a int64) int64 { return 0 & a }

//go:noinline
func and_int64_1(a int64) int64 { return a & 1 }

//go:noinline
func and_1_int64(a int64) int64 { return 1 & a }

//go:noinline
func and_int64_4294967296(a int64) int64 { return a & 4294967296 }

//go:noinline
func and_4294967296_int64(a int64) int64 { return 4294967296 & a }

//go:noinline
func and_int64_9223372036854775806(a int64) int64 { return a & 9223372036854775806 }

//go:noinline
func and_9223372036854775806_int64(a int64) int64 { return 9223372036854775806 & a }

//go:noinline
func and_int64_9223372036854775807(a int64) int64 { return a & 9223372036854775807 }

//go:noinline
func and_9223372036854775807_int64(a int64) int64 { return 9223372036854775807 & a }

//go:noinline
func or_int64_Neg9223372036854775808(a int64) int64 { return a | -9223372036854775808 }

//go:noinline
func or_Neg9223372036854775808_int64(a int64) int64 { return -9223372036854775808 | a }

//go:noinline
func or_int64_Neg9223372036854775807(a int64) int64 { return a | -9223372036854775807 }

//go:noinline
func or_Neg9223372036854775807_int64(a int64) int64 { return -9223372036854775807 | a }

//go:noinline
func or_int64_Neg4294967296(a int64) int64 { return a | -4294967296 }

//go:noinline
func or_Neg4294967296_int64(a int64) int64 { return -4294967296 | a }

//go:noinline
func or_int64_Neg1(a int64) int64 { return a | -1 }

//go:noinline
func or_Neg1_int64(a int64) int64 { return -1 | a }

//go:noinline
func or_int64_0(a int64) int64 { return a | 0 }

//go:noinline
func or_0_int64(a int64) int64 { return 0 | a }

//go:noinline
func or_int64_1(a int64) int64 { return a | 1 }

//go:noinline
func or_1_int64(a int64) int64 { return 1 | a }

//go:noinline
func or_int64_4294967296(a int64) int64 { return a | 4294967296 }

//go:noinline
func or_4294967296_int64(a int64) int64 { return 4294967296 | a }

//go:noinline
func or_int64_9223372036854775806(a int64) int64 { return a | 9223372036854775806 }

//go:noinline
func or_9223372036854775806_int64(a int64) int64 { return 9223372036854775806 | a }

//go:noinline
func or_int64_9223372036854775807(a int64) int64 { return a | 9223372036854775807 }

//go:noinline
func or_9223372036854775807_int64(a int64) int64 { return 9223372036854775807 | a }

//go:noinline
func xor_int64_Neg9223372036854775808(a int64) int64 { return a ^ -9223372036854775808 }

//go:noinline
func xor_Neg9223372036854775808_int64(a int64) int64 { return -9223372036854775808 ^ a }

//go:noinline
func xor_int64_Neg9223372036854775807(a int64) int64 { return a ^ -9223372036854775807 }

//go:noinline
func xor_Neg9223372036854775807_int64(a int64) int64 { return -9223372036854775807 ^ a }

//go:noinline
func xor_int64_Neg4294967296(a int64) int64 { return a ^ -4294967296 }

//go:noinline
func xor_Neg4294967296_int64(a int64) int64 { return -4294967296 ^ a }

//go:noinline
func xor_int64_Neg1(a int64) int64 { return a ^ -1 }

//go:noinline
func xor_Neg1_int64(a int64) int64 { return -1 ^ a }

//go:noinline
func xor_int64_0(a int64) int64 { return a ^ 0 }

//go:noinline
func xor_0_int64(a int64) int64 { return 0 ^ a }

//go:noinline
func xor_int64_1(a int64) int64 { return a ^ 1 }

//go:noinline
func xor_1_int64(a int64) int64 { return 1 ^ a }

//go:noinline
func xor_int64_4294967296(a int64) int64 { return a ^ 4294967296 }

//go:noinline
func xor_4294967296_int64(a int64) int64 { return 4294967296 ^ a }

//go:noinline
func xor_int64_9223372036854775806(a int64) int64 { return a ^ 9223372036854775806 }

//go:noinline
func xor_9223372036854775806_int64(a int64) int64 { return 9223372036854775806 ^ a }

//go:noinline
func xor_int64_9223372036854775807(a int64) int64 { return a ^ 9223372036854775807 }

//go:noinline
func xor_9223372036854775807_int64(a int64) int64 { return 9223372036854775807 ^ a }

//go:noinline
func add_uint32_0(a uint32) uint32 { return a + 0 }

//go:noinline
func add_0_uint32(a uint32) uint32 { return 0 + a }

//go:noinline
func add_uint32_1(a uint32) uint32 { return a + 1 }

//go:noinline
func add_1_uint32(a uint32) uint32 { return 1 + a }

//go:noinline
func add_uint32_4294967295(a uint32) uint32 { return a + 4294967295 }

//go:noinline
func add_4294967295_uint32(a uint32) uint32 { return 4294967295 + a }

//go:noinline
func sub_uint32_0(a uint32) uint32 { return a - 0 }

//go:noinline
func sub_0_uint32(a uint32) uint32 { return 0 - a }

//go:noinline
func sub_uint32_1(a uint32) uint32 { return a - 1 }

//go:noinline
func sub_1_uint32(a uint32) uint32 { return 1 - a }

//go:noinline
func sub_uint32_4294967295(a uint32) uint32 { return a - 4294967295 }

//go:noinline
func sub_4294967295_uint32(a uint32) uint32 { return 4294967295 - a }

//go:noinline
func div_0_uint32(a uint32) uint32 { return 0 / a }

//go:noinline
func div_uint32_1(a uint32) uint32 { return a / 1 }

//go:noinline
func div_1_uint32(a uint32) uint32 { return 1 / a }

//go:noinline
func div_uint32_4294967295(a uint32) uint32 { return a / 4294967295 }

//go:noinline
func div_4294967295_uint32(a uint32) uint32 { return 4294967295 / a }

//go:noinline
func mul_uint32_0(a uint32) uint32 { return a * 0 }

//go:noinline
func mul_0_uint32(a uint32) uint32 { return 0 * a }

//go:noinline
func mul_uint32_1(a uint32) uint32 { return a * 1 }

//go:noinline
func mul_1_uint32(a uint32) uint32 { return 1 * a }

//go:noinline
func mul_uint32_4294967295(a uint32) uint32 { return a * 4294967295 }

//go:noinline
func mul_4294967295_uint32(a uint32) uint32 { return 4294967295 * a }

//go:noinline
func lsh_uint32_0(a uint32) uint32 { return a << 0 }

//go:noinline
func lsh_0_uint32(a uint32) uint32 { return 0 << a }

//go:noinline
func lsh_uint32_1(a uint32) uint32 { return a << 1 }

//go:noinline
func lsh_1_uint32(a uint32) uint32 { return 1 << a }

//go:noinline
func lsh_uint32_4294967295(a uint32) uint32 { return a << 4294967295 }

//go:noinline
func lsh_4294967295_uint32(a uint32) uint32 { return 4294967295 << a }

//go:noinline
func rsh_uint32_0(a uint32) uint32 { return a >> 0 }

//go:noinline
func rsh_0_uint32(a uint32) uint32 { return 0 >> a }

//go:noinline
func rsh_uint32_1(a uint32) uint32 { return a >> 1 }

//go:noinline
func rsh_1_uint32(a uint32) uint32 { return 1 >> a }

//go:noinline
func rsh_uint32_4294967295(a uint32) uint32 { return a >> 4294967295 }

//go:noinline
func rsh_4294967295_uint32(a uint32) uint32 { return 4294967295 >> a }

//go:noinline
func mod_0_uint32(a uint32) uint32 { return 0 % a }

//go:noinline
func mod_uint32_1(a uint32) uint32 { return a % 1 }

//go:noinline
func mod_1_uint32(a uint32) uint32 { return 1 % a }

//go:noinline
func mod_uint32_4294967295(a uint32) uint32 { return a % 4294967295 }

//go:noinline
func mod_4294967295_uint32(a uint32) uint32 { return 4294967295 % a }

//go:noinline
func and_uint32_0(a uint32) uint32 { return a & 0 }

//go:noinline
func and_0_uint32(a uint32) uint32 { return 0 & a }

//go:noinline
func and_uint32_1(a uint32) uint32 { return a & 1 }

//go:noinline
func and_1_uint32(a uint32) uint32 { return 1 & a }

//go:noinline
func and_uint32_4294967295(a uint32) uint32 { return a & 4294967295 }

//go:noinline
func and_4294967295_uint32(a uint32) uint32 { return 4294967295 & a }

//go:noinline
func or_uint32_0(a uint32) uint32 { return a | 0 }

//go:noinline
func or_0_uint32(a uint32) uint32 { return 0 | a }

//go:noinline
func or_uint32_1(a uint32) uint32 { return a | 1 }

//go:noinline
func or_1_uint32(a uint32) uint32 { return 1 | a }

//go:noinline
func or_uint32_4294967295(a uint32) uint32 { return a | 4294967295 }

//go:noinline
func or_4294967295_uint32(a uint32) uint32 { return 4294967295 | a }

//go:noinline
func xor_uint32_0(a uint32) uint32 { return a ^ 0 }

//go:noinline
func xor_0_uint32(a uint32) uint32 { return 0 ^ a }

//go:noinline
func xor_uint32_1(a uint32) uint32 { return a ^ 1 }

//go:noinline
func xor_1_uint32(a uint32) uint32 { return 1 ^ a }

//go:noinline
func xor_uint32_4294967295(a uint32) uint32 { return a ^ 4294967295 }

//go:noinline
func xor_4294967295_uint32(a uint32) uint32 { return 4294967295 ^ a }

//go:noinline
func add_int32_Neg2147483648(a int32) int32 { return a + -2147483648 }

//go:noinline
func add_Neg2147483648_int32(a int32) int32 { return -2147483648 + a }

//go:noinline
func add_int32_Neg2147483647(a int32) int32 { return a + -2147483647 }

//go:noinline
func add_Neg2147483647_int32(a int32) int32 { return -2147483647 + a }

//go:noinline
func add_int32_Neg1(a int32) int32 { return a + -1 }

//go:noinline
func add_Neg1_int32(a int32) int32 { return -1 + a }

//go:noinline
func add_int32_0(a int32) int32 { return a + 0 }

//go:noinline
func add_0_int32(a int32) int32 { return 0 + a }

//go:noinline
func add_int32_1(a int32) int32 { return a + 1 }

//go:noinline
func add_1_int32(a int32) int32 { return 1 + a }

//go:noinline
func add_int32_2147483647(a int32) int32 { return a + 2147483647 }

//go:noinline
func add_2147483647_int32(a int32) int32 { return 2147483647 + a }

//go:noinline
func sub_int32_Neg2147483648(a int32) int32 { return a - -2147483648 }

//go:noinline
func sub_Neg2147483648_int32(a int32) int32 { return -2147483648 - a }

//go:noinline
func sub_int32_Neg2147483647(a int32) int32 { return a - -2147483647 }

//go:noinline
func sub_Neg2147483647_int32(a int32) int32 { return -2147483647 - a }

//go:noinline
func sub_int32_Neg1(a int32) int32 { return a - -1 }

//go:noinline
func sub_Neg1_int32(a int32) int32 { return -1 - a }

//go:noinline
func sub_int32_0(a int32) int32 { return a - 0 }

//go:noinline
func sub_0_int32(a int32) int32 { return 0 - a }

//go:noinline
func sub_int32_1(a int32) int32 { return a - 1 }

//go:noinline
func sub_1_int32(a int32) int32 { return 1 - a }

//go:noinline
func sub_int32_2147483647(a int32) int32 { return a - 2147483647 }

//go:noinline
func sub_2147483647_int32(a int32) int32 { return 2147483647 - a }

//go:noinline
func div_int32_Neg2147483648(a int32) int32 { return a / -2147483648 }

//go:noinline
func div_Neg2147483648_int32(a int32) int32 { return -2147483648 / a }

//go:noinline
func div_int32_Neg2147483647(a int32) int32 { return a / -2147483647 }

//go:noinline
func div_Neg2147483647_int32(a int32) int32 { return -2147483647 / a }

//go:noinline
func div_int32_Neg1(a int32) int32 { return a / -1 }

//go:noinline
func div_Neg1_int32(a int32) int32 { return -1 / a }

//go:noinline
func div_0_int32(a int32) int32 { return 0 / a }

//go:noinline
func div_int32_1(a int32) int32 { return a / 1 }

//go:noinline
func div_1_int32(a int32) int32 { return 1 / a }

//go:noinline
func div_int32_2147483647(a int32) int32 { return a / 2147483647 }

//go:noinline
func div_2147483647_int32(a int32) int32 { return 2147483647 / a }

//go:noinline
func mul_int32_Neg2147483648(a int32) int32 { return a * -2147483648 }

//go:noinline
func mul_Neg2147483648_int32(a int32) int32 { return -2147483648 * a }

//go:noinline
func mul_int32_Neg2147483647(a int32) int32 { return a * -2147483647 }

//go:noinline
func mul_Neg2147483647_int32(a int32) int32 { return -2147483647 * a }

//go:noinline
func mul_int32_Neg1(a int32) int32 { return a * -1 }

//go:noinline
func mul_Neg1_int32(a int32) int32 { return -1 * a }

//go:noinline
func mul_int32_0(a int32) int32 { return a * 0 }

//go:noinline
func mul_0_int32(a int32) int32 { return 0 * a }

//go:noinline
func mul_int32_1(a int32) int32 { return a * 1 }

//go:noinline
func mul_1_int32(a int32) int32 { return 1 * a }

//go:noinline
func mul_int32_2147483647(a int32) int32 { return a * 2147483647 }

//go:noinline
func mul_2147483647_int32(a int32) int32 { return 2147483647 * a }

//go:noinline
func mod_int32_Neg2147483648(a int32) int32 { return a % -2147483648 }

//go:noinline
func mod_Neg2147483648_int32(a int32) int32 { return -2147483648 % a }

//go:noinline
func mod_int32_Neg2147483647(a int32) int32 { return a % -2147483647 }

//go:noinline
func mod_Neg2147483647_int32(a int32) int32 { return -2147483647 % a }

//go:noinline
func mod_int32_Neg1(a int32) int32 { return a % -1 }

//go:noinline
func mod_Neg1_int32(a int32) int32 { return -1 % a }

//go:noinline
func mod_0_int32(a int32) int32 { return 0 % a }

//go:noinline
func mod_int32_1(a int32) int32 { return a % 1 }

//go:noinline
func mod_1_int32(a int32) int32 { return 1 % a }

//go:noinline
func mod_int32_2147483647(a int32) int32 { return a % 2147483647 }

//go:noinline
func mod_2147483647_int32(a int32) int32 { return 2147483647 % a }

//go:noinline
func and_int32_Neg2147483648(a int32) int32 { return a & -2147483648 }

//go:noinline
func and_Neg2147483648_int32(a int32) int32 { return -2147483648 & a }

//go:noinline
func and_int32_Neg2147483647(a int32) int32 { return a & -2147483647 }

//go:noinline
func and_Neg2147483647_int32(a int32) int32 { return -2147483647 & a }

//go:noinline
func and_int32_Neg1(a int32) int32 { return a & -1 }

//go:noinline
func and_Neg1_int32(a int32) int32 { return -1 & a }

//go:noinline
func and_int32_0(a int32) int32 { return a & 0 }

//go:noinline
func and_0_int32(a int32) int32 { return 0 & a }

//go:noinline
func and_int32_1(a int32) int32 { return a & 1 }

//go:noinline
func and_1_int32(a int32) int32 { return 1 & a }

//go:noinline
func and_int32_2147483647(a int32) int32 { return a & 2147483647 }

//go:noinline
func and_2147483647_int32(a int32) int32 { return 2147483647 & a }

//go:noinline
func or_int32_Neg2147483648(a int32) int32 { return a | -2147483648 }

//go:noinline
func or_Neg2147483648_int32(a int32) int32 { return -2147483648 | a }

//go:noinline
func or_int32_Neg2147483647(a int32) int32 { return a | -2147483647 }

//go:noinline
func or_Neg2147483647_int32(a int32) int32 { return -2147483647 | a }

//go:noinline
func or_int32_Neg1(a int32) int32 { return a | -1 }

//go:noinline
func or_Neg1_int32(a int32) int32 { return -1 | a }

//go:noinline
func or_int32_0(a int32) int32 { return a | 0 }

//go:noinline
func or_0_int32(a int32) int32 { return 0 | a }

//go:noinline
func or_int32_1(a int32) int32 { return a | 1 }

//go:noinline
func or_1_int32(a int32) int32 { return 1 | a }

//go:noinline
func or_int32_2147483647(a int32) int32 { return a | 2147483647 }

//go:noinline
func or_2147483647_int32(a int32) int32 { return 2147483647 | a }

//go:noinline
func xor_int32_Neg2147483648(a int32) int32 { return a ^ -2147483648 }

//go:noinline
func xor_Neg2147483648_int32(a int32) int32 { return -2147483648 ^ a }

//go:noinline
func xor_int32_Neg2147483647(a int32) int32 { return a ^ -2147483647 }

//go:noinline
func xor_Neg2147483647_int32(a int32) int32 { return -2147483647 ^ a }

//go:noinline
func xor_int32_Neg1(a int32) int32 { return a ^ -1 }

//go:noinline
func xor_Neg1_int32(a int32) int32 { return -1 ^ a }

//go:noinline
func xor_int32_0(a int32) int32 { return a ^ 0 }

//go:noinline
func xor_0_int32(a int32) int32 { return 0 ^ a }

//go:noinline
func xor_int32_1(a int32) int32 { return a ^ 1 }

//go:noinline
func xor_1_int32(a int32) int32 { return 1 ^ a }

//go:noinline
func xor_int32_2147483647(a int32) int32 { return a ^ 2147483647 }

//go:noinline
func xor_2147483647_int32(a int32) int32 { return 2147483647 ^ a }

//go:noinline
func add_uint16_0(a uint16) uint16 { return a + 0 }

//go:noinline
func add_0_uint16(a uint16) uint16 { return 0 + a }

//go:noinline
func add_uint16_1(a uint16) uint16 { return a + 1 }

//go:noinline
func add_1_uint16(a uint16) uint16 { return 1 + a }

//go:noinline
func add_uint16_65535(a uint16) uint16 { return a + 65535 }

//go:noinline
func add_65535_uint16(a uint16) uint16 { return 65535 + a }

//go:noinline
func sub_uint16_0(a uint16) uint16 { return a - 0 }

//go:noinline
func sub_0_uint16(a uint16) uint16 { return 0 - a }

//go:noinline
func sub_uint16_1(a uint16) uint16 { return a - 1 }

//go:noinline
func sub_1_uint16(a uint16) uint16 { return 1 - a }

//go:noinline
func sub_uint16_65535(a uint16) uint16 { return a - 65535 }

//go:noinline
func sub_65535_uint16(a uint16) uint16 { return 65535 - a }

//go:noinline
func div_0_uint16(a uint16) uint16 { return 0 / a }

//go:noinline
func div_uint16_1(a uint16) uint16 { return a / 1 }

//go:noinline
func div_1_uint16(a uint16) uint16 { return 1 / a }

//go:noinline
func div_uint16_65535(a uint16) uint16 { return a / 65535 }

//go:noinline
func div_65535_uint16(a uint16) uint16 { return 65535 / a }

//go:noinline
func mul_uint16_0(a uint16) uint16 { return a * 0 }

//go:noinline
func mul_0_uint16(a uint16) uint16 { return 0 * a }

//go:noinline
func mul_uint16_1(a uint16) uint16 { return a * 1 }

//go:noinline
func mul_1_uint16(a uint16) uint16 { return 1 * a }

//go:noinline
func mul_uint16_65535(a uint16) uint16 { return a * 65535 }

//go:noinline
func mul_65535_uint16(a uint16) uint16 { return 65535 * a }

//go:noinline
func lsh_uint16_0(a uint16) uint16 { return a << 0 }

//go:noinline
func lsh_0_uint16(a uint16) uint16 { return 0 << a }

//go:noinline
func lsh_uint16_1(a uint16) uint16 { return a << 1 }

//go:noinline
func lsh_1_uint16(a uint16) uint16 { return 1 << a }

//go:noinline
func lsh_uint16_65535(a uint16) uint16 { return a << 65535 }

//go:noinline
func lsh_65535_uint16(a uint16) uint16 { return 65535 << a }

//go:noinline
func rsh_uint16_0(a uint16) uint16 { return a >> 0 }

//go:noinline
func rsh_0_uint16(a uint16) uint16 { return 0 >> a }

//go:noinline
func rsh_uint16_1(a uint16) uint16 { return a >> 1 }

//go:noinline
func rsh_1_uint16(a uint16) uint16 { return 1 >> a }

//go:noinline
func rsh_uint16_65535(a uint16) uint16 { return a >> 65535 }

//go:noinline
func rsh_65535_uint16(a uint16) uint16 { return 65535 >> a }

//go:noinline
func mod_0_uint16(a uint16) uint16 { return 0 % a }

//go:noinline
func mod_uint16_1(a uint16) uint16 { return a % 1 }

//go:noinline
func mod_1_uint16(a uint16) uint16 { return 1 % a }

//go:noinline
func mod_uint16_65535(a uint16) uint16 { return a % 65535 }

//go:noinline
func mod_65535_uint16(a uint16) uint16 { return 65535 % a }

//go:noinline
func and_uint16_0(a uint16) uint16 { return a & 0 }

//go:noinline
func and_0_uint16(a uint16) uint16 { return 0 & a }

//go:noinline
func and_uint16_1(a uint16) uint16 { return a & 1 }

//go:noinline
func and_1_uint16(a uint16) uint16 { return 1 & a }

//go:noinline
func and_uint16_65535(a uint16) uint16 { return a & 65535 }

//go:noinline
func and_65535_uint16(a uint16) uint16 { return 65535 & a }

//go:noinline
func or_uint16_0(a uint16) uint16 { return a | 0 }

//go:noinline
func or_0_uint16(a uint16) uint16 { return 0 | a }

//go:noinline
func or_uint16_1(a uint16) uint16 { return a | 1 }

//go:noinline
func or_1_uint16(a uint16) uint16 { return 1 | a }

//go:noinline
func or_uint16_65535(a uint16) uint16 { return a | 65535 }

//go:noinline
func or_65535_uint16(a uint16) uint16 { return 65535 | a }

//go:noinline
func xor_uint16_0(a uint16) uint16 { return a ^ 0 }

//go:noinline
func xor_0_uint16(a uint16) uint16 { return 0 ^ a }

//go:noinline
func xor_uint16_1(a uint16) uint16 { return a ^ 1 }

//go:noinline
func xor_1_uint16(a uint16) uint16 { return 1 ^ a }

//go:noinline
func xor_uint16_65535(a uint16) uint16 { return a ^ 65535 }

//go:noinline
func xor_65535_uint16(a uint16) uint16 { return 65535 ^ a }

//go:noinline
func add_int16_Neg32768(a int16) int16 { return a + -32768 }

//go:noinline
func add_Neg32768_int16(a int16) int16 { return -32768 + a }

//go:noinline
func add_int16_Neg32767(a int16) int16 { return a + -32767 }

//go:noinline
func add_Neg32767_int16(a int16) int16 { return -32767 + a }

//go:noinline
func add_int16_Neg1(a int16) int16 { return a + -1 }

//go:noinline
func add_Neg1_int16(a int16) int16 { return -1 + a }

//go:noinline
func add_int16_0(a int16) int16 { return a + 0 }

//go:noinline
func add_0_int16(a int16) int16 { return 0 + a }

//go:noinline
func add_int16_1(a int16) int16 { return a + 1 }

//go:noinline
func add_1_int16(a int16) int16 { return 1 + a }

//go:noinline
func add_int16_32766(a int16) int16 { return a + 32766 }

//go:noinline
func add_32766_int16(a int16) int16 { return 32766 + a }

//go:noinline
func add_int16_32767(a int16) int16 { return a + 32767 }

//go:noinline
func add_32767_int16(a int16) int16 { return 32767 + a }

//go:noinline
func sub_int16_Neg32768(a int16) int16 { return a - -32768 }

//go:noinline
func sub_Neg32768_int16(a int16) int16 { return -32768 - a }

//go:noinline
func sub_int16_Neg32767(a int16) int16 { return a - -32767 }

//go:noinline
func sub_Neg32767_int16(a int16) int16 { return -32767 - a }

//go:noinline
func sub_int16_Neg1(a int16) int16 { return a - -1 }

//go:noinline
func sub_Neg1_int16(a int16) int16 { return -1 - a }

//go:noinline
func sub_int16_0(a int16) int16 { return a - 0 }

//go:noinline
func sub_0_int16(a int16) int16 { return 0 - a }

//go:noinline
func sub_int16_1(a int16) int16 { return a - 1 }

//go:noinline
func sub_1_int16(a int16) int16 { return 1 - a }

//go:noinline
func sub_int16_32766(a int16) int16 { return a - 32766 }

//go:noinline
func sub_32766_int16(a int16) int16 { return 32766 - a }

//go:noinline
func sub_int16_32767(a int16) int16 { return a - 32767 }

//go:noinline
func sub_32767_int16(a int16) int16 { return 32767 - a }

//go:noinline
func div_int16_Neg32768(a int16) int16 { return a / -32768 }

//go:noinline
func div_Neg32768_int16(a int16) int16 { return -32768 / a }

//go:noinline
func div_int16_Neg32767(a int16) int16 { return a / -32767 }

//go:noinline
func div_Neg32767_int16(a int16) int16 { return -32767 / a }

//go:noinline
func div_int16_Neg1(a int16) int16 { return a / -1 }

//go:noinline
func div_Neg1_int16(a int16) int16 { return -1 / a }

//go:noinline
func div_0_int16(a int16) int16 { return 0 / a }

//go:noinline
func div_int16_1(a int16) int16 { return a / 1 }

//go:noinline
func div_1_int16(a int16) int16 { return 1 / a }

//go:noinline
func div_int16_32766(a int16) int16 { return a / 32766 }

//go:noinline
func div_32766_int16(a int16) int16 { return 32766 / a }

//go:noinline
func div_int16_32767(a int16) int16 { return a / 32767 }

//go:noinline
func div_32767_int16(a int16) int16 { return 32767 / a }

//go:noinline
func mul_int16_Neg32768(a int16) int16 { return a * -32768 }

//go:noinline
func mul_Neg32768_int16(a int16) int16 { return -32768 * a }

//go:noinline
func mul_int16_Neg32767(a int16) int16 { return a * -32767 }

//go:noinline
func mul_Neg32767_int16(a int16) int16 { return -32767 * a }

//go:noinline
func mul_int16_Neg1(a int16) int16 { return a * -1 }

//go:noinline
func mul_Neg1_int16(a int16) int16 { return -1 * a }

//go:noinline
func mul_int16_0(a int16) int16 { return a * 0 }

//go:noinline
func mul_0_int16(a int16) int16 { return 0 * a }

//go:noinline
func mul_int16_1(a int16) int16 { return a * 1 }

//go:noinline
func mul_1_int16(a int16) int16 { return 1 * a }

//go:noinline
func mul_int16_32766(a int16) int16 { return a * 32766 }

//go:noinline
func mul_32766_int16(a int16) int16 { return 32766 * a }

//go:noinline
func mul_int16_32767(a int16) int16 { return a * 32767 }

//go:noinline
func mul_32767_int16(a int16) int16 { return 32767 * a }

//go:noinline
func mod_int16_Neg32768(a int16) int16 { return a % -32768 }

//go:noinline
func mod_Neg32768_int16(a int16) int16 { return -32768 % a }

//go:noinline
func mod_int16_Neg32767(a int16) int16 { return a % -32767 }

//go:noinline
func mod_Neg32767_int16(a int16) int16 { return -32767 % a }

//go:noinline
func mod_int16_Neg1(a int16) int16 { return a % -1 }

//go:noinline
func mod_Neg1_int16(a int16) int16 { return -1 % a }

//go:noinline
func mod_0_int16(a int16) int16 { return 0 % a }

//go:noinline
func mod_int16_1(a int16) int16 { return a % 1 }

//go:noinline
func mod_1_int16(a int16) int16 { return 1 % a }

//go:noinline
func mod_int16_32766(a int16) int16 { return a % 32766 }

//go:noinline
func mod_32766_int16(a int16) int16 { return 32766 % a }

//go:noinline
func mod_int16_32767(a int16) int16 { return a % 32767 }

//go:noinline
func mod_32767_int16(a int16) int16 { return 32767 % a }

//go:noinline
func and_int16_Neg32768(a int16) int16 { return a & -32768 }

//go:noinline
func and_Neg32768_int16(a int16) int16 { return -32768 & a }

//go:noinline
func and_int16_Neg32767(a int16) int16 { return a & -32767 }

//go:noinline
func and_Neg32767_int16(a int16) int16 { return -32767 & a }

//go:noinline
func and_int16_Neg1(a int16) int16 { return a & -1 }

//go:noinline
func and_Neg1_int16(a int16) int16 { return -1 & a }

//go:noinline
func and_int16_0(a int16) int16 { return a & 0 }

//go:noinline
func and_0_int16(a int16) int16 { return 0 & a }

//go:noinline
func and_int16_1(a int16) int16 { return a & 1 }

//go:noinline
func and_1_int16(a int16) int16 { return 1 & a }

//go:noinline
func and_int16_32766(a int16) int16 { return a & 32766 }

//go:noinline
func and_32766_int16(a int16) int16 { return 32766 & a }

//go:noinline
func and_int16_32767(a int16) int16 { return a & 32767 }

//go:noinline
func and_32767_int16(a int16) int16 { return 32767 & a }

//go:noinline
func or_int16_Neg32768(a int16) int16 { return a | -32768 }

//go:noinline
func or_Neg32768_int16(a int16) int16 { return -32768 | a }

//go:noinline
func or_int16_Neg32767(a int16) int16 { return a | -32767 }

//go:noinline
func or_Neg32767_int16(a int16) int16 { return -32767 | a }

//go:noinline
func or_int16_Neg1(a int16) int16 { return a | -1 }

//go:noinline
func or_Neg1_int16(a int16) int16 { return -1 | a }

//go:noinline
func or_int16_0(a int16) int16 { return a | 0 }

//go:noinline
func or_0_int16(a int16) int16 { return 0 | a }

//go:noinline
func or_int16_1(a int16) int16 { return a | 1 }

//go:noinline
func or_1_int16(a int16) int16 { return 1 | a }

//go:noinline
func or_int16_32766(a int16) int16 { return a | 32766 }

//go:noinline
func or_32766_int16(a int16) int16 { return 32766 | a }

//go:noinline
func or_int16_32767(a int16) int16 { return a | 32767 }

//go:noinline
func or_32767_int16(a int16) int16 { return 32767 | a }

//go:noinline
func xor_int16_Neg32768(a int16) int16 { return a ^ -32768 }

//go:noinline
func xor_Neg32768_int16(a int16) int16 { return -32768 ^ a }

//go:noinline
func xor_int16_Neg32767(a int16) int16 { return a ^ -32767 }

//go:noinline
func xor_Neg32767_int16(a int16) int16 { return -32767 ^ a }

//go:noinline
func xor_int16_Neg1(a int16) int16 { return a ^ -1 }

//go:noinline
func xor_Neg1_int16(a int16) int16 { return -1 ^ a }

//go:noinline
func xor_int16_0(a int16) int16 { return a ^ 0 }

//go:noinline
func xor_0_int16(a int16) int16 { return 0 ^ a }

//go:noinline
func xor_int16_1(a int16) int16 { return a ^ 1 }

//go:noinline
func xor_1_int16(a int16) int16 { return 1 ^ a }

//go:noinline
func xor_int16_32766(a int16) int16 { return a ^ 32766 }

//go:noinline
func xor_32766_int16(a int16) int16 { return 32766 ^ a }

//go:noinline
func xor_int16_32767(a int16) int16 { return a ^ 32767 }

//go:noinline
func xor_32767_int16(a int16) int16 { return 32767 ^ a }

//go:noinline
func add_uint8_0(a uint8) uint8 { return a + 0 }

//go:noinline
func add_0_uint8(a uint8) uint8 { return 0 + a }

//go:noinline
func add_uint8_1(a uint8) uint8 { return a + 1 }

//go:noinline
func add_1_uint8(a uint8) uint8 { return 1 + a }

//go:noinline
func add_uint8_255(a uint8) uint8 { return a + 255 }

//go:noinline
func add_255_uint8(a uint8) uint8 { return 255 + a }

//go:noinline
func sub_uint8_0(a uint8) uint8 { return a - 0 }

//go:noinline
func sub_0_uint8(a uint8) uint8 { return 0 - a }

//go:noinline
func sub_uint8_1(a uint8) uint8 { return a - 1 }

//go:noinline
func sub_1_uint8(a uint8) uint8 { return 1 - a }

//go:noinline
func sub_uint8_255(a uint8) uint8 { return a - 255 }

//go:noinline
func sub_255_uint8(a uint8) uint8 { return 255 - a }

//go:noinline
func div_0_uint8(a uint8) uint8 { return 0 / a }

//go:noinline
func div_uint8_1(a uint8) uint8 { return a / 1 }

//go:noinline
func div_1_uint8(a uint8) uint8 { return 1 / a }

//go:noinline
func div_uint8_255(a uint8) uint8 { return a / 255 }

//go:noinline
func div_255_uint8(a uint8) uint8 { return 255 / a }

//go:noinline
func mul_uint8_0(a uint8) uint8 { return a * 0 }

//go:noinline
func mul_0_uint8(a uint8) uint8 { return 0 * a }

//go:noinline
func mul_uint8_1(a uint8) uint8 { return a * 1 }

//go:noinline
func mul_1_uint8(a uint8) uint8 { return 1 * a }

//go:noinline
func mul_uint8_255(a uint8) uint8 { return a * 255 }

//go:noinline
func mul_255_uint8(a uint8) uint8 { return 255 * a }

//go:noinline
func lsh_uint8_0(a uint8) uint8 { return a << 0 }

//go:noinline
func lsh_0_uint8(a uint8) uint8 { return 0 << a }

//go:noinline
func lsh_uint8_1(a uint8) uint8 { return a << 1 }

//go:noinline
func lsh_1_uint8(a uint8) uint8 { return 1 << a }

//go:noinline
func lsh_uint8_255(a uint8) uint8 { return a << 255 }

//go:noinline
func lsh_255_uint8(a uint8) uint8 { return 255 << a }

//go:noinline
func rsh_uint8_0(a uint8) uint8 { return a >> 0 }

//go:noinline
func rsh_0_uint8(a uint8) uint8 { return 0 >> a }

//go:noinline
func rsh_uint8_1(a uint8) uint8 { return a >> 1 }

//go:noinline
func rsh_1_uint8(a uint8) uint8 { return 1 >> a }

//go:noinline
func rsh_uint8_255(a uint8) uint8 { return a >> 255 }

//go:noinline
func rsh_255_uint8(a uint8) uint8 { return 255 >> a }

//go:noinline
func mod_0_uint8(a uint8) uint8 { return 0 % a }

//go:noinline
func mod_uint8_1(a uint8) uint8 { return a % 1 }

//go:noinline
func mod_1_uint8(a uint8) uint8 { return 1 % a }

//go:noinline
func mod_uint8_255(a uint8) uint8 { return a % 255 }

//go:noinline
func mod_255_uint8(a uint8) uint8 { return 255 % a }

//go:noinline
func and_uint8_0(a uint8) uint8 { return a & 0 }

//go:noinline
func and_0_uint8(a uint8) uint8 { return 0 & a }

//go:noinline
func and_uint8_1(a uint8) uint8 { return a & 1 }

//go:noinline
func and_1_uint8(a uint8) uint8 { return 1 & a }

//go:noinline
func and_uint8_255(a uint8) uint8 { return a & 255 }

//go:noinline
func and_255_uint8(a uint8) uint8 { return 255 & a }

//go:noinline
func or_uint8_0(a uint8) uint8 { return a | 0 }

//go:noinline
func or_0_uint8(a uint8) uint8 { return 0 | a }

//go:noinline
func or_uint8_1(a uint8) uint8 { return a | 1 }

//go:noinline
func or_1_uint8(a uint8) uint8 { return 1 | a }

//go:noinline
func or_uint8_255(a uint8) uint8 { return a | 255 }

//go:noinline
func or_255_uint8(a uint8) uint8 { return 255 | a }

//go:noinline
func xor_uint8_0(a uint8) uint8 { return a ^ 0 }

//go:noinline
func xor_0_uint8(a uint8) uint8 { return 0 ^ a }

//go:noinline
func xor_uint8_1(a uint8) uint8 { return a ^ 1 }

//go:noinline
func xor_1_uint8(a uint8) uint8 { return 1 ^ a }

//go:noinline
func xor_uint8_255(a uint8) uint8 { return a ^ 255 }

//go:noinline
func xor_255_uint8(a uint8) uint8 { return 255 ^ a }

//go:noinline
func add_int8_Neg128(a int8) int8 { return a + -128 }

//go:noinline
func add_Neg128_int8(a int8) int8 { return -128 + a }

//go:noinline
func add_int8_Neg127(a int8) int8 { return a + -127 }

//go:noinline
func add_Neg127_int8(a int8) int8 { return -127 + a }

//go:noinline
func add_int8_Neg1(a int8) int8 { return a + -1 }

//go:noinline
func add_Neg1_int8(a int8) int8 { return -1 + a }

//go:noinline
func add_int8_0(a int8) int8 { return a + 0 }

//go:noinline
func add_0_int8(a int8) int8 { return 0 + a }

//go:noinline
func add_int8_1(a int8) int8 { return a + 1 }

//go:noinline
func add_1_int8(a int8) int8 { return 1 + a }

//go:noinline
func add_int8_126(a int8) int8 { return a + 126 }

//go:noinline
func add_126_int8(a int8) int8 { return 126 + a }

//go:noinline
func add_int8_127(a int8) int8 { return a + 127 }

//go:noinline
func add_127_int8(a int8) int8 { return 127 + a }

//go:noinline
func sub_int8_Neg128(a int8) int8 { return a - -128 }

//go:noinline
func sub_Neg128_int8(a int8) int8 { return -128 - a }

//go:noinline
func sub_int8_Neg127(a int8) int8 { return a - -127 }

//go:noinline
func sub_Neg127_int8(a int8) int8 { return -127 - a }

//go:noinline
func sub_int8_Neg1(a int8) int8 { return a - -1 }

//go:noinline
func sub_Neg1_int8(a int8) int8 { return -1 - a }

//go:noinline
func sub_int8_0(a int8) int8 { return a - 0 }

//go:noinline
func sub_0_int8(a int8) int8 { return 0 - a }

//go:noinline
func sub_int8_1(a int8) int8 { return a - 1 }

//go:noinline
func sub_1_int8(a int8) int8 { return 1 - a }

//go:noinline
func sub_int8_126(a int8) int8 { return a - 126 }

//go:noinline
func sub_126_int8(a int8) int8 { return 126 - a }

//go:noinline
func sub_int8_127(a int8) int8 { return a - 127 }

//go:noinline
func sub_127_int8(a int8) int8 { return 127 - a }

//go:noinline
func div_int8_Neg128(a int8) int8 { return a / -128 }

//go:noinline
func div_Neg128_int8(a int8) int8 { return -128 / a }

//go:noinline
func div_int8_Neg127(a int8) int8 { return a / -127 }

//go:noinline
func div_Neg127_int8(a int8) int8 { return -127 / a }

//go:noinline
func div_int8_Neg1(a int8) int8 { return a / -1 }

//go:noinline
func div_Neg1_int8(a int8) int8 { return -1 / a }

//go:noinline
func div_0_int8(a int8) int8 { return 0 / a }

//go:noinline
func div_int8_1(a int8) int8 { return a / 1 }

//go:noinline
func div_1_int8(a int8) int8 { return 1 / a }

//go:noinline
func div_int8_126(a int8) int8 { return a / 126 }

//go:noinline
func div_126_int8(a int8) int8 { return 126 / a }

//go:noinline
func div_int8_127(a int8) int8 { return a / 127 }

//go:noinline
func div_127_int8(a int8) int8 { return 127 / a }

//go:noinline
func mul_int8_Neg128(a int8) int8 { return a * -128 }

//go:noinline
func mul_Neg128_int8(a int8) int8 { return -128 * a }

//go:noinline
func mul_int8_Neg127(a int8) int8 { return a * -127 }

//go:noinline
func mul_Neg127_int8(a int8) int8 { return -127 * a }

//go:noinline
func mul_int8_Neg1(a int8) int8 { return a * -1 }

//go:noinline
func mul_Neg1_int8(a int8) int8 { return -1 * a }

//go:noinline
func mul_int8_0(a int8) int8 { return a * 0 }

//go:noinline
func mul_0_int8(a int8) int8 { return 0 * a }

//go:noinline
func mul_int8_1(a int8) int8 { return a * 1 }

//go:noinline
func mul_1_int8(a int8) int8 { return 1 * a }

//go:noinline
func mul_int8_126(a int8) int8 { return a * 126 }

//go:noinline
func mul_126_int8(a int8) int8 { return 126 * a }

//go:noinline
func mul_int8_127(a int8) int8 { return a * 127 }

//go:noinline
func mul_127_int8(a int8) int8 { return 127 * a }

//go:noinline
func mod_int8_Neg128(a int8) int8 { return a % -128 }

//go:noinline
func mod_Neg128_int8(a int8) int8 { return -128 % a }

//go:noinline
func mod_int8_Neg127(a int8) int8 { return a % -127 }

//go:noinline
func mod_Neg127_int8(a int8) int8 { return -127 % a }

//go:noinline
func mod_int8_Neg1(a int8) int8 { return a % -1 }

//go:noinline
func mod_Neg1_int8(a int8) int8 { return -1 % a }

//go:noinline
func mod_0_int8(a int8) int8 { return 0 % a }

//go:noinline
func mod_int8_1(a int8) int8 { return a % 1 }

//go:noinline
func mod_1_int8(a int8) int8 { return 1 % a }

//go:noinline
func mod_int8_126(a int8) int8 { return a % 126 }

//go:noinline
func mod_126_int8(a int8) int8 { return 126 % a }

//go:noinline
func mod_int8_127(a int8) int8 { return a % 127 }

//go:noinline
func mod_127_int8(a int8) int8 { return 127 % a }

//go:noinline
func and_int8_Neg128(a int8) int8 { return a & -128 }

//go:noinline
func and_Neg128_int8(a int8) int8 { return -128 & a }

//go:noinline
func and_int8_Neg127(a int8) int8 { return a & -127 }

//go:noinline
func and_Neg127_int8(a int8) int8 { return -127 & a }

//go:noinline
func and_int8_Neg1(a int8) int8 { return a & -1 }

//go:noinline
func and_Neg1_int8(a int8) int8 { return -1 & a }

//go:noinline
func and_int8_0(a int8) int8 { return a & 0 }

//go:noinline
func and_0_int8(a int8) int8 { return 0 & a }

//go:noinline
func and_int8_1(a int8) int8 { return a & 1 }

//go:noinline
func and_1_int8(a int8) int8 { return 1 & a }

//go:noinline
func and_int8_126(a int8) int8 { return a & 126 }

//go:noinline
func and_126_int8(a int8) int8 { return 126 & a }

//go:noinline
func and_int8_127(a int8) int8 { return a & 127 }

//go:noinline
func and_127_int8(a int8) int8 { return 127 & a }

//go:noinline
func or_int8_Neg128(a int8) int8 { return a | -128 }

//go:noinline
func or_Neg128_int8(a int8) int8 { return -128 | a }

//go:noinline
func or_int8_Neg127(a int8) int8 { return a | -127 }

//go:noinline
func or_Neg127_int8(a int8) int8 { return -127 | a }

//go:noinline
func or_int8_Neg1(a int8) int8 { return a | -1 }

//go:noinline
func or_Neg1_int8(a int8) int8 { return -1 | a }

//go:noinline
func or_int8_0(a int8) int8 { return a | 0 }

//go:noinline
func or_0_int8(a int8) int8 { return 0 | a }

//go:noinline
func or_int8_1(a int8) int8 { return a | 1 }

//go:noinline
func or_1_int8(a int8) int8 { return 1 | a }

//go:noinline
func or_int8_126(a int8) int8 { return a | 126 }

//go:noinline
func or_126_int8(a int8) int8 { return 126 | a }

//go:noinline
func or_int8_127(a int8) int8 { return a | 127 }

//go:noinline
func or_127_int8(a int8) int8 { return 127 | a }

//go:noinline
func xor_int8_Neg128(a int8) int8 { return a ^ -128 }

//go:noinline
func xor_Neg128_int8(a int8) int8 { return -128 ^ a }

//go:noinline
func xor_int8_Neg127(a int8) int8 { return a ^ -127 }

//go:noinline
func xor_Neg127_int8(a int8) int8 { return -127 ^ a }

//go:noinline
func xor_int8_Neg1(a int8) int8 { return a ^ -1 }

//go:noinline
func xor_Neg1_int8(a int8) int8 { return -1 ^ a }

//go:noinline
func xor_int8_0(a int8) int8 { return a ^ 0 }

//go:noinline
func xor_0_int8(a int8) int8 { return 0 ^ a }

//go:noinline
func xor_int8_1(a int8) int8 { return a ^ 1 }

//go:noinline
func xor_1_int8(a int8) int8 { return 1 ^ a }

//go:noinline
func xor_int8_126(a int8) int8 { return a ^ 126 }

//go:noinline
func xor_126_int8(a int8) int8 { return 126 ^ a }

//go:noinline
func xor_int8_127(a int8) int8 { return a ^ 127 }

//go:noinline
func xor_127_int8(a int8) int8 { return 127 ^ a }

type test_uint64 struct {
	fn     func(uint64) uint64
	fnname string
	in     uint64
	want   uint64
}

var tests_uint64 = []test_uint64{

	test_uint64{fn: add_0_uint64, fnname: "add_0_uint64", in: 0, want: 0},
	test_uint64{fn: add_uint64_0, fnname: "add_uint64_0", in: 0, want: 0},
	test_uint64{fn: add_0_uint64, fnname: "add_0_uint64", in: 1, want: 1},
	test_uint64{fn: add_uint64_0, fnname: "add_uint64_0", in: 1, want: 1},
	test_uint64{fn: add_0_uint64, fnname: "add_0_uint64", in: 4294967296, want: 4294967296},
	test_uint64{fn: add_uint64_0, fnname: "add_uint64_0", in: 4294967296, want: 4294967296},
	test_uint64{fn: add_0_uint64, fnname: "add_0_uint64", in: 9223372036854775808, want: 9223372036854775808},
	test_uint64{fn: add_uint64_0, fnname: "add_uint64_0", in: 9223372036854775808, want: 9223372036854775808},
	test_uint64{fn: add_0_uint64, fnname: "add_0_uint64", in: 18446744073709551615, want: 18446744073709551615},
	test_uint64{fn: add_uint64_0, fnname: "add_uint64_0", in: 18446744073709551615, want: 18446744073709551615},
	test_uint64{fn: add_1_uint64, fnname: "add_1_uint64", in: 0, want: 1},
	test_uint64{fn: add_uint64_1, fnname: "add_uint64_1", in: 0, want: 1},
	test_uint64{fn: add_1_uint64, fnname: "add_1_uint64", in: 1, want: 2},
	test_uint64{fn: add_uint64_1, fnname: "add_uint64_1", in: 1, want: 2},
	test_uint64{fn: add_1_uint64, fnname: "add_1_uint64", in: 4294967296, want: 4294967297},
	test_uint64{fn: add_uint64_1, fnname: "add_uint64_1", in: 4294967296, want: 4294967297},
	test_uint64{fn: add_1_uint64, fnname: "add_1_uint64", in: 9223372036854775808, want: 9223372036854775809},
	test_uint64{fn: add_uint64_1, fnname: "add_uint64_1", in: 9223372036854775808, want: 9223372036854775809},
	test_uint64{fn: add_1_uint64, fnname: "add_1_uint64", in: 18446744073709551615, want: 0},
	test_uint64{fn: add_uint64_1, fnname: "add_uint64_1", in: 18446744073709551615, want: 0},
	test_uint64{fn: add_4294967296_uint64, fnname: "add_4294967296_uint64", in: 0, want: 4294967296},
	test_uint64{fn: add_uint64_4294967296, fnname: "add_uint64_4294967296", in: 0, want: 4294967296},
	test_uint64{fn: add_4294967296_uint64, fnname: "add_4294967296_uint64", in: 1, want: 4294967297},
	test_uint64{fn: add_uint64_4294967296, fnname: "add_uint64_4294967296", in: 1, want: 4294967297},
	test_uint64{fn: add_4294967296_uint64, fnname: "add_4294967296_uint64", in: 4294967296, want: 8589934592},
	test_uint64{fn: add_uint64_4294967296, fnname: "add_uint64_4294967296", in: 4294967296, want: 8589934592},
	test_uint64{fn: add_4294967296_uint64, fnname: "add_4294967296_uint64", in: 9223372036854775808, want: 9223372041149743104},
	test_uint64{fn: add_uint64_4294967296, fnname: "add_uint64_4294967296", in: 9223372036854775808, want: 9223372041149743104},
	test_uint64{fn: add_4294967296_uint64, fnname: "add_4294967296_uint64", in: 18446744073709551615, want: 4294967295},
	test_uint64{fn: add_uint64_4294967296, fnname: "add_uint64_4294967296", in: 18446744073709551615, want: 4294967295},
	test_uint64{fn: add_9223372036854775808_uint64, fnname: "add_9223372036854775808_uint64", in: 0, want: 9223372036854775808},
	test_uint64{fn: add_uint64_9223372036854775808, fnname: "add_uint64_9223372036854775808", in: 0, want: 9223372036854775808},
	test_uint64{fn: add_9223372036854775808_uint64, fnname: "add_9223372036854775808_uint64", in: 1, want: 9223372036854775809},
	test_uint64{fn: add_uint64_9223372036854775808, fnname: "add_uint64_9223372036854775808", in: 1, want: 9223372036854775809},
	test_uint64{fn: add_9223372036854775808_uint64, fnname: "add_9223372036854775808_uint64", in: 4294967296, want: 9223372041149743104},
	test_uint64{fn: add_uint64_9223372036854775808, fnname: "add_uint64_9223372036854775808", in: 4294967296, want: 9223372041149743104},
	test_uint64{fn: add_9223372036854775808_uint64, fnname: "add_9223372036854775808_uint64", in: 9223372036854775808, want: 0},
	test_uint64{fn: add_uint64_9223372036854775808, fnname: "add_uint64_9223372036854775808", in: 9223372036854775808, want: 0},
	test_uint64{fn: add_9223372036854775808_uint64, fnname: "add_9223372036854775808_uint64", in: 18446744073709551615, want: 9223372036854775807},
	test_uint64{fn: add_uint64_9223372036854775808, fnname: "add_uint64_9223372036854775808", in: 18446744073709551615, want: 9223372036854775807},
	test_uint64{fn: add_18446744073709551615_uint64, fnname: "add_18446744073709551615_uint64", in: 0, want: 18446744073709551615},
	test_uint64{fn: add_uint64_18446744073709551615, fnname: "add_uint64_18446744073709551615", in: 0, want: 18446744073709551615},
	test_uint64{fn: add_18446744073709551615_uint64, fnname: "add_18446744073709551615_uint64", in: 1, want: 0},
	test_uint64{fn: add_uint64_18446744073709551615, fnname: "add_uint64_18446744073709551615", in: 1, want: 0},
	test_uint64{fn: add_18446744073709551615_uint64, fnname: "add_18446744073709551615_uint64", in: 4294967296, want: 4294967295},
	test_uint64{fn: add_uint64_18446744073709551615, fnname: "add_uint64_18446744073709551615", in: 4294967296, want: 4294967295},
	test_uint64{fn: add_18446744073709551615_uint64, fnname: "add_18446744073709551615_uint64", in: 9223372036854775808, want: 9223372036854775807},
	test_uint64{fn: add_uint64_18446744073709551615, fnname: "add_uint64_18446744073709551615", in: 9223372036854775808, want: 9223372036854775807},
	test_uint64{fn: add_18446744073709551615_uint64, fnname: "add_18446744073709551615_uint64", in: 18446744073709551615, want: 18446744073709551614},
	test_uint64{fn: add_uint64_18446744073709551615, fnname: "add_uint64_18446744073709551615", in: 18446744073709551615, want: 18446744073709551614},
	test_uint64{fn: sub_0_uint64, fnname: "sub_0_uint64", in: 0, want: 0},
	test_uint64{fn: sub_uint64_0, fnname: "sub_uint64_0", in: 0, want: 0},
	test_uint64{fn: sub_0_uint64, fnname: "sub_0_uint64", in: 1, want: 18446744073709551615},
	test_uint64{fn: sub_uint64_0, fnname: "sub_uint64_0", in: 1, want: 1},
	test_uint64{fn: sub_0_uint64, fnname: "sub_0_uint64", in: 4294967296, want: 18446744069414584320},
	test_uint64{fn: sub_uint64_0, fnname: "sub_uint64_0", in: 4294967296, want: 4294967296},
	test_uint64{fn: sub_0_uint64, fnname: "sub_0_uint64", in: 9223372036854775808, want: 9223372036854775808},
	test_uint64{fn: sub_uint64_0, fnname: "sub_uint64_0", in: 9223372036854775808, want: 9223372036854775808},
	test_uint64{fn: sub_0_uint64, fnname: "sub_0_uint64", in: 18446744073709551615, want: 1},
	test_uint64{fn: sub_uint64_0, fnname: "sub_uint64_0", in: 18446744073709551615, want: 18446744073709551615},
	test_uint64{fn: sub_1_uint64, fnname: "sub_1_uint64", in: 0, want: 1},
	test_uint64{fn: sub_uint64_1, fnname: "sub_uint64_1", in: 0, want: 18446744073709551615},
	test_uint64{fn: sub_1_uint64, fnname: "sub_1_uint64", in: 1, want: 0},
	test_uint64{fn: sub_uint64_1, fnname: "sub_uint64_1", in: 1, want: 0},
	test_uint64{fn: sub_1_uint64, fnname: "sub_1_uint64", in: 4294967296, want: 18446744069414584321},
	test_uint64{fn: sub_uint64_1, fnname: "sub_uint64_1", in: 4294967296, want: 4294967295},
	test_uint64{fn: sub_1_uint64, fnname: "sub_1_uint64", in: 9223372036854775808, want: 9223372036854775809},
	test_uint64{fn: sub_uint64_1, fnname: "sub_uint64_1", in: 9223372036854775808, want: 9223372036854775807},
	test_uint64{fn: sub_1_uint64, fnname: "sub_1_uint64", in: 18446744073709551615, want: 2},
	test_uint64{fn: sub_uint64_1, fnname: "sub_uint64_1", in: 18446744073709551615, want: 18446744073709551614},
	test_uint64{fn: sub_4294967296_uint64, fnname: "sub_4294967296_uint64", in: 0, want: 4294967296},
	test_uint64{fn: sub_uint64_4294967296, fnname: "sub_uint64_4294967296", in: 0, want: 18446744069414584320},
	test_uint64{fn: sub_4294967296_uint64, fnname: "sub_4294967296_uint64", in: 1, want: 4294967295},
	test_uint64{fn: sub_uint64_4294967296, fnname: "sub_uint64_4294967296", in: 1, want: 18446744069414584321},
	test_uint64{fn: sub_4294967296_uint64, fnname: "sub_4294967296_uint64", in: 4294967296, want: 0},
	test_uint64{fn: sub_uint64_4294967296, fnname: "sub_uint64_4294967296", in: 4294967296, want: 0},
	test_uint64{fn: sub_4294967296_uint64, fnname: "sub_4294967296_uint64", in: 9223372036854775808, want: 9223372041149743104},
	test_uint64{fn: sub_uint64_4294967296, fnname: "sub_uint64_4294967296", in: 9223372036854775808, want: 9223372032559808512},
	test_uint64{fn: sub_4294967296_uint64, fnname: "sub_4294967296_uint64", in: 18446744073709551615, want: 4294967297},
	test_uint64{fn: sub_uint64_4294967296, fnname: "sub_uint64_4294967296", in: 18446744073709551615, want: 18446744069414584319},
	test_uint64{fn: sub_9223372036854775808_uint64, fnname: "sub_9223372036854775808_uint64", in: 0, want: 9223372036854775808},
	test_uint64{fn: sub_uint64_9223372036854775808, fnname: "sub_uint64_9223372036854775808", in: 0, want: 9223372036854775808},
	test_uint64{fn: sub_9223372036854775808_uint64, fnname: "sub_9223372036854775808_uint64", in: 1, want: 9223372036854775807},
	test_uint64{fn: sub_uint64_9223372036854775808, fnname: "sub_uint64_9223372036854775808", in: 1, want: 9223372036854775809},
	test_uint64{fn: sub_9223372036854775808_uint64, fnname: "sub_9223372036854775808_uint64", in: 4294967296, want: 9223372032559808512},
	test_uint64{fn: sub_uint64_9223372036854775808, fnname: "sub_uint64_9223372036854775808", in: 4294967296, want: 9223372041149743104},
	test_uint64{fn: sub_9223372036854775808_uint64, fnname: "sub_9223372036854775808_uint64", in: 9223372036854775808, want: 0},
	test_uint64{fn: sub_uint64_9223372036854775808, fnname: "sub_uint64_9223372036854775808", in: 9223372036854775808, want: 0},
	test_uint64{fn: sub_9223372036854775808_uint64, fnname: "sub_9223372036854775808_uint64", in: 18446744073709551615, want: 9223372036854775809},
	test_uint64{fn: sub_uint64_9223372036854775808, fnname: "sub_uint64_9223372036854775808", in: 18446744073709551615, want: 9223372036854775807},
	test_uint64{fn: sub_18446744073709551615_uint64, fnname: "sub_18446744073709551615_uint64", in: 0, want: 18446744073709551615},
	test_uint64{fn: sub_uint64_18446744073709551615, fnname: "sub_uint64_18446744073709551615", in: 0, want: 1},
	test_uint64{fn: sub_18446744073709551615_uint64, fnname: "sub_18446744073709551615_uint64", in: 1, want: 18446744073709551614},
	test_uint64{fn: sub_uint64_18446744073709551615, fnname: "sub_uint64_18446744073709551615", in: 1, want: 2},
	test_uint64{fn: sub_18446744073709551615_uint64, fnname: "sub_18446744073709551615_uint64", in: 4294967296, want: 18446744069414584319},
	test_uint64{fn: sub_uint64_18446744073709551615, fnname: "sub_uint64_18446744073709551615", in: 4294967296, want: 4294967297},
	test_uint64{fn: sub_18446744073709551615_uint64, fnname: "sub_18446744073709551615_uint64", in: 9223372036854775808, want: 9223372036854775807},
	test_uint64{fn: sub_uint64_18446744073709551615, fnname: "sub_uint64_18446744073709551615", in: 9223372036854775808, want: 9223372036854775809},
	test_uint64{fn: sub_18446744073709551615_uint64, fnname: "sub_18446744073709551615_uint64", in: 18446744073709551615, want: 0},
	test_uint64{fn: sub_uint64_18446744073709551615, fnname: "sub_uint64_18446744073709551615", in: 18446744073709551615, want: 0},
	test_uint64{fn: div_0_uint64, fnname: "div_0_uint64", in: 1, want: 0},
	test_uint64{fn: div_0_uint64, fnname: "div_0_uint64", in: 4294967296, want: 0},
	test_uint64{fn: div_0_uint64, fnname: "div_0_uint64", in: 9223372036854775808, want: 0},
	test_uint64{fn: div_0_uint64, fnname: "div_0_uint64", in: 18446744073709551615, want: 0},
	test_uint64{fn: div_uint64_1, fnname: "div_uint64_1", in: 0, want: 0},
	test_uint64{fn: div_1_uint64, fnname: "div_1_uint64", in: 1, want: 1},
	test_uint64{fn: div_uint64_1, fnname: "div_uint64_1", in: 1, want: 1},
	test_uint64{fn: div_1_uint64, fnname: "div_1_uint64", in: 4294967296, want: 0},
	test_uint64{fn: div_uint64_1, fnname: "div_uint64_1", in: 4294967296, want: 4294967296},
	test_uint64{fn: div_1_uint64, fnname: "div_1_uint64", in: 9223372036854775808, want: 0},
	test_uint64{fn: div_uint64_1, fnname: "div_uint64_1", in: 9223372036854775808, want: 9223372036854775808},
	test_uint64{fn: div_1_uint64, fnname: "div_1_uint64", in: 18446744073709551615, want: 0},
	test_uint64{fn: div_uint64_1, fnname: "div_uint64_1", in: 18446744073709551615, want: 18446744073709551615},
	test_uint64{fn: div_uint64_4294967296, fnname: "div_uint64_4294967296", in: 0, want: 0},
	test_uint64{fn: div_4294967296_uint64, fnname: "div_4294967296_uint64", in: 1, want: 4294967296},
	test_uint64{fn: div_uint64_4294967296, fnname: "div_uint64_4294967296", in: 1, want: 0},
	test_uint64{fn: div_4294967296_uint64, fnname: "div_4294967296_uint64", in: 4294967296, want: 1},
	test_uint64{fn: div_uint64_4294967296, fnname: "div_uint64_4294967296", in: 4294967296, want: 1},
	test_uint64{fn: div_4294967296_uint64, fnname: "div_4294967296_uint64", in: 9223372036854775808, want: 0},
	test_uint64{fn: div_uint64_4294967296, fnname: "div_uint64_4294967296", in: 9223372036854775808, want: 2147483648},
	test_uint64{fn: div_4294967296_uint64, fnname: "div_4294967296_uint64", in: 18446744073709551615, want: 0},
	test_uint64{fn: div_uint64_4294967296, fnname: "div_uint64_4294967296", in: 18446744073709551615, want: 4294967295},
	test_uint64{fn: div_uint64_9223372036854775808, fnname: "div_uint64_9223372036854775808", in: 0, want: 0},
	test_uint64{fn: div_9223372036854775808_uint64, fnname: "div_9223372036854775808_uint64", in: 1, want: 9223372036854775808},
	test_uint64{fn: div_uint64_9223372036854775808, fnname: "div_uint64_9223372036854775808", in: 1, want: 0},
	test_uint64{fn: div_9223372036854775808_uint64, fnname: "div_9223372036854775808_uint64", in: 4294967296, want: 2147483648},
	test_uint64{fn: div_uint64_9223372036854775808, fnname: "div_uint64_9223372036854775808", in: 4294967296, want: 0},
	test_uint64{fn: div_9223372036854775808_uint64, fnname: "div_9223372036854775808_uint64", in: 9223372036854775808, want: 1},
	test_uint64{fn: div_uint64_9223372036854775808, fnname: "div_uint64_9223372036854775808", in: 9223372036854775808, want: 1},
	test_uint64{fn: div_9223372036854775808_uint64, fnname: "div_9223372036854775808_uint64", in: 18446744073709551615, want: 0},
	test_uint64{fn: div_uint64_9223372036854775808, fnname: "div_uint64_9223372036854775808", in: 18446744073709551615, want: 1},
	test_uint64{fn: div_uint64_18446744073709551615, fnname: "div_uint64_18446744073709551615", in: 0, want: 0},
	test_uint64{fn: div_18446744073709551615_uint64, fnname: "div_18446744073709551615_uint64", in: 1, want: 18446744073709551615},
	test_uint64{fn: div_uint64_18446744073709551615, fnname: "div_uint64_18446744073709551615", in: 1, want: 0},
	test_uint64{fn: div_18446744073709551615_uint64, fnname: "div_18446744073709551615_uint64", in: 4294967296, want: 4294967295},
	test_uint64{fn: div_uint64_18446744073709551615, fnname: "div_uint64_18446744073709551615", in: 4294967296, want: 0},
	test_uint64{fn: div_18446744073709551615_uint64, fnname: "div_18446744073709551615_uint64", in: 9223372036854775808, want: 1},
	test_uint64{fn: div_uint64_18446744073709551615, fnname: "div_uint64_18446744073709551615", in: 9223372036854775808, want: 0},
	test_uint64{fn: div_18446744073709551615_uint64, fnname: "div_18446744073709551615_uint64", in: 18446744073709551615, want: 1},
	test_uint64{fn: div_uint64_18446744073709551615, fnname: "div_uint64_18446744073709551615", in: 18446744073709551615, want: 1},
	test_uint64{fn: mul_0_uint64, fnname: "mul_0_uint64", in: 0, want: 0},
	test_uint64{fn: mul_uint64_0, fnname: "mul_uint64_0", in: 0, want: 0},
	test_uint64{fn: mul_0_uint64, fnname: "mul_0_uint64", in: 1, want: 0},
	test_uint64{fn: mul_uint64_0, fnname: "mul_uint64_0", in: 1, want: 0},
	test_uint64{fn: mul_0_uint64, fnname: "mul_0_uint64", in: 4294967296, want: 0},
	test_uint64{fn: mul_uint64_0, fnname: "mul_uint64_0", in: 4294967296, want: 0},
	test_uint64{fn: mul_0_uint64, fnname: "mul_0_uint64", in: 9223372036854775808, want: 0},
	test_uint64{fn: mul_uint64_0, fnname: "mul_uint64_0", in: 9223372036854775808, want: 0},
	test_uint64{fn: mul_0_uint64, fnname: "mul_0_uint64", in: 18446744073709551615, want: 0},
	test_uint64{fn: mul_uint64_0, fnname: "mul_uint64_0", in: 18446744073709551615, want: 0},
	test_uint64{fn: mul_1_uint64, fnname: "mul_1_uint64", in: 0, want: 0},
	test_uint64{fn: mul_uint64_1, fnname: "mul_uint64_1", in: 0, want: 0},
	test_uint64{fn: mul_1_uint64, fnname: "mul_1_uint64", in: 1, want: 1},
	test_uint64{fn: mul_uint64_1, fnname: "mul_uint64_1", in: 1, want: 1},
	test_uint64{fn: mul_1_uint64, fnname: "mul_1_uint64", in: 4294967296, want: 4294967296},
	test_uint64{fn: mul_uint64_1, fnname: "mul_uint64_1", in: 4294967296, want: 4294967296},
	test_uint64{fn: mul_1_uint64, fnname: "mul_1_uint64", in: 9223372036854775808, want: 9223372036854775808},
	test_uint64{fn: mul_uint64_1, fnname: "mul_uint64_1", in: 9223372036854775808, want: 9223372036854775808},
	test_uint64{fn: mul_1_uint64, fnname: "mul_1_uint64", in: 18446744073709551615, want: 18446744073709551615},
	test_uint64{fn: mul_uint64_1, fnname: "mul_uint64_1", in: 18446744073709551615, want: 18446744073709551615},
	test_uint64{fn: mul_4294967296_uint64, fnname: "mul_4294967296_uint64", in: 0, want: 0},
	test_uint64{fn: mul_uint64_4294967296, fnname: "mul_uint64_4294967296", in: 0, want: 0},
	test_uint64{fn: mul_4294967296_uint64, fnname: "mul_4294967296_uint64", in: 1, want: 4294967296},
	test_uint64{fn: mul_uint64_4294967296, fnname: "mul_uint64_4294967296", in: 1, want: 4294967296},
	test_uint64{fn: mul_4294967296_uint64, fnname: "mul_4294967296_uint64", in: 4294967296, want: 0},
	test_uint64{fn: mul_uint64_4294967296, fnname: "mul_uint64_4294967296", in: 4294967296, want: 0},
	test_uint64{fn: mul_4294967296_uint64, fnname: "mul_4294967296_uint64", in: 9223372036854775808, want: 0},
	test_uint64{fn: mul_uint64_4294967296, fnname: "mul_uint64_4294967296", in: 9223372036854775808, want: 0},
	test_uint64{fn: mul_4294967296_uint64, fnname: "mul_4294967296_uint64", in: 18446744073709551615, want: 18446744069414584320},
	test_uint64{fn: mul_uint64_4294967296, fnname: "mul_uint64_4294967296", in: 18446744073709551615, want: 18446744069414584320},
	test_uint64{fn: mul_9223372036854775808_uint64, fnname: "mul_9223372036854775808_uint64", in: 0, want: 0},
	test_uint64{fn: mul_uint64_9223372036854775808, fnname: "mul_uint64_9223372036854775808", in: 0, want: 0},
	test_uint64{fn: mul_9223372036854775808_uint64, fnname: "mul_9223372036854775808_uint64", in: 1, want: 9223372036854775808},
	test_uint64{fn: mul_uint64_9223372036854775808, fnname: "mul_uint64_9223372036854775808", in: 1, want: 9223372036854775808},
	test_uint64{fn: mul_9223372036854775808_uint64, fnname: "mul_9223372036854775808_uint64", in: 4294967296, want: 0},
	test_uint64{fn: mul_uint64_9223372036854775808, fnname: "mul_uint64_9223372036854775808", in: 4294967296, want: 0},
	test_uint64{fn: mul_9223372036854775808_uint64, fnname: "mul_9223372036854775808_uint64", in: 9223372036854775808, want: 0},
	test_uint64{fn: mul_uint64_9223372036854775808, fnname: "mul_uint64_9223372036854775808", in: 9223372036854775808, want: 0},
	test_uint64{fn: mul_9223372036854775808_uint64, fnname: "mul_9223372036854775808_uint64", in: 18446744073709551615, want: 9223372036854775808},
	test_uint64{fn: mul_uint64_9223372036854775808, fnname: "mul_uint64_9223372036854775808", in: 18446744073709551615, want: 9223372036854775808},
	test_uint64{fn: mul_18446744073709551615_uint64, fnname: "mul_18446744073709551615_uint64", in: 0, want: 0},
	test_uint64{fn: mul_uint64_18446744073709551615, fnname: "mul_uint64_18446744073709551615", in: 0, want: 0},
	test_uint64{fn: mul_18446744073709551615_uint64, fnname: "mul_18446744073709551615_uint64", in: 1, want: 18446744073709551615},
	test_uint64{fn: mul_uint64_18446744073709551615, fnname: "mul_uint64_18446744073709551615", in: 1, want: 18446744073709551615},
	test_uint64{fn: mul_18446744073709551615_uint64, fnname: "mul_18446744073709551615_uint64", in: 4294967296, want: 18446744069414584320},
	test_uint64{fn: mul_uint64_18446744073709551615, fnname: "mul_uint64_18446744073709551615", in: 4294967296, want: 18446744069414584320},
	test_uint64{fn: mul_18446744073709551615_uint64, fnname: "mul_18446744073709551615_uint64", in: 9223372036854775808, want: 9223372036854775808},
	test_uint64{fn: mul_uint64_18446744073709551615, fnname: "mul_uint64_18446744073709551615", in: 9223372036854775808, want: 9223372036854775808},
	test_uint64{fn: mul_18446744073709551615_uint64, fnname: "mul_18446744073709551615_uint64", in: 18446744073709551615, want: 1},
	test_uint64{fn: mul_uint64_18446744073709551615, fnname: "mul_uint64_18446744073709551615", in: 18446744073709551615, want: 1},
	test_uint64{fn: lsh_0_uint64, fnname: "lsh_0_uint64", in: 0, want: 0},
	test_uint64{fn: lsh_uint64_0, fnname: "lsh_uint64_0", in: 0, want: 0},
	test_uint64{fn: lsh_0_uint64, fnname: "lsh_0_uint64", in: 1, want: 0},
	test_uint64{fn: lsh_uint64_0, fnname: "lsh_uint64_0", in: 1, want: 1},
	test_uint64{fn: lsh_0_uint64, fnname: "lsh_0_uint64", in: 4294967296, want: 0},
	test_uint64{fn: lsh_uint64_0, fnname: "lsh_uint64_0", in: 4294967296, want: 4294967296},
	test_uint64{fn: lsh_0_uint64, fnname: "lsh_0_uint64", in: 9223372036854775808, want: 0},
	test_uint64{fn: lsh_uint64_0, fnname: "lsh_uint64_0", in: 9223372036854775808, want: 9223372036854775808},
	test_uint64{fn: lsh_0_uint64, fnname: "lsh_0_uint64", in: 18446744073709551615, want: 0},
	test_uint64{fn: lsh_uint64_0, fnname: "lsh_uint64_0", in: 18446744073709551615, want: 18446744073709551615},
	test_uint64{fn: lsh_1_uint64, fnname: "lsh_1_uint64", in: 0, want: 1},
	test_uint64{fn: lsh_uint64_1, fnname: "lsh_uint64_1", in: 0, want: 0},
	test_uint64{fn: lsh_1_uint64, fnname: "lsh_1_uint64", in: 1, want: 2},
	test_uint64{fn: lsh_uint64_1, fnname: "lsh_uint64_1", in: 1, want: 2},
	test_uint64{fn: lsh_1_uint64, fnname: "lsh_1_uint64", in: 4294967296, want: 0},
	test_uint64{fn: lsh_uint64_1, fnname: "lsh_uint64_1", in: 4294967296, want: 8589934592},
	test_uint64{fn: lsh_1_uint64, fnname: "lsh_1_uint64", in: 9223372036854775808, want: 0},
	test_uint64{fn: lsh_uint64_1, fnname: "lsh_uint64_1", in: 9223372036854775808, want: 0},
	test_uint64{fn: lsh_1_uint64, fnname: "lsh_1_uint64", in: 18446744073709551615, want: 0},
	test_uint64{fn: lsh_uint64_1, fnname: "lsh_uint64_1", in: 18446744073709551615, want: 18446744073709551614},
	test_uint64{fn: lsh_4294967296_uint64, fnname: "lsh_4294967296_uint64", in: 0, want: 4294967296},
	test_uint64{fn: lsh_uint64_4294967296, fnname: "lsh_uint64_4294967296", in: 0, want: 0},
	test_uint64{fn: lsh_4294967296_uint64, fnname: "lsh_4294967296_uint64", in: 1, want: 8589934592},
	test_uint64{fn: lsh_uint64_4294967296, fnname: "lsh_uint64_4294967296", in: 1, want: 0},
	test_uint64{fn: lsh_4294967296_uint64, fnname: "lsh_4294967296_uint64", in: 4294967296, want: 0},
	test_uint64{fn: lsh_uint64_4294967296, fnname: "lsh_uint64_4294967296", in: 4294967296, want: 0},
	test_uint64{fn: lsh_4294967296_uint64, fnname: "lsh_4294967296_uint64", in: 9223372036854775808, want: 0},
	test_uint64{fn: lsh_uint64_4294967296, fnname: "lsh_uint64_4294967296", in: 9223372036854775808, want: 0},
	test_uint64{fn: lsh_4294967296_uint64, fnname: "lsh_4294967296_uint64", in: 18446744073709551615, want: 0},
	test_uint64{fn: lsh_uint64_4294967296, fnname: "lsh_uint64_4294967296", in: 18446744073709551615, want: 0},
	test_uint64{fn: lsh_9223372036854775808_uint64, fnname: "lsh_9223372036854775808_uint64", in: 0, want: 9223372036854775808},
	test_uint64{fn: lsh_uint64_9223372036854775808, fnname: "lsh_uint64_9223372036854775808", in: 0, want: 0},
	test_uint64{fn: lsh_9223372036854775808_uint64, fnname: "lsh_9223372036854775808_uint64", in: 1, want: 0},
	test_uint64{fn: lsh_uint64_9223372036854775808, fnname: "lsh_uint64_9223372036854775808", in: 1, want: 0},
	test_uint64{fn: lsh_9223372036854775808_uint64, fnname: "lsh_9223372036854775808_uint64", in: 4294967296, want: 0},
	test_uint64{fn: lsh_uint64_9223372036854775808, fnname: "lsh_uint64_9223372036854775808", in: 4294967296, want: 0},
	test_uint64{fn: lsh_9223372036854775808_uint64, fnname: "lsh_9223372036854775808_uint64", in: 9223372036854775808, want: 0},
	test_uint64{fn: lsh_uint64_9223372036854775808, fnname: "lsh_uint64_9223372036854775808", in: 9223372036854775808, want: 0},
	test_uint64{fn: lsh_9223372036854775808_uint64, fnname: "lsh_9223372036854775808_uint64", in: 18446744073709551615, want: 0},
	test_uint64{fn: lsh_uint64_9223372036854775808, fnname: "lsh_uint64_9223372036854775808", in: 18446744073709551615, want: 0},
	test_uint64{fn: lsh_18446744073709551615_uint64, fnname: "lsh_18446744073709551615_uint64", in: 0, want: 18446744073709551615},
	test_uint64{fn: lsh_uint64_18446744073709551615, fnname: "lsh_uint64_18446744073709551615", in: 0, want: 0},
	test_uint64{fn: lsh_18446744073709551615_uint64, fnname: "lsh_18446744073709551615_uint64", in: 1, want: 18446744073709551614},
	test_uint64{fn: lsh_uint64_18446744073709551615, fnname: "lsh_uint64_18446744073709551615", in: 1, want: 0},
	test_uint64{fn: lsh_18446744073709551615_uint64, fnname: "lsh_18446744073709551615_uint64", in: 4294967296, want: 0},
	test_uint64{fn: lsh_uint64_18446744073709551615, fnname: "lsh_uint64_18446744073709551615", in: 4294967296, want: 0},
	test_uint64{fn: lsh_18446744073709551615_uint64, fnname: "lsh_18446744073709551615_uint64", in: 9223372036854775808, want: 0},
	test_uint64{fn: lsh_uint64_18446744073709551615, fnname: "lsh_uint64_18446744073709551615", in: 9223372036854775808, want: 0},
	test_uint64{fn: lsh_18446744073709551615_uint64, fnname: "lsh_18446744073709551615_uint64", in: 18446744073709551615, want: 0},
	test_uint64{fn: lsh_uint64_18446744073709551615, fnname: "lsh_uint64_18446744073709551615", in: 18446744073709551615, want: 0},
	test_uint64{fn: rsh_0_uint64, fnname: "rsh_0_uint64", in: 0, want: 0},
	test_uint64{fn: rsh_uint64_0, fnname: "rsh_uint64_0", in: 0, want: 0},
	test_uint64{fn: rsh_0_uint64, fnname: "rsh_0_uint64", in: 1, want: 0},
	test_uint64{fn: rsh_uint64_0, fnname: "rsh_uint64_0", in: 1, want: 1},
	test_uint64{fn: rsh_0_uint64, fnname: "rsh_0_uint64", in: 4294967296, want: 0},
	test_uint64{fn: rsh_uint64_0, fnname: "rsh_uint64_0", in: 4294967296, want: 4294967296},
	test_uint64{fn: rsh_0_uint64, fnname: "rsh_0_uint64", in: 9223372036854775808, want: 0},
	test_uint64{fn: rsh_uint64_0, fnname: "rsh_uint64_0", in: 9223372036854775808, want: 9223372036854775808},
	test_uint64{fn: rsh_0_uint64, fnname: "rsh_0_uint64", in: 18446744073709551615, want: 0},
	test_uint64{fn: rsh_uint64_0, fnname: "rsh_uint64_0", in: 18446744073709551615, want: 18446744073709551615},
	test_uint64{fn: rsh_1_uint64, fnname: "rsh_1_uint64", in: 0, want: 1},
	test_uint64{fn: rsh_uint64_1, fnname: "rsh_uint64_1", in: 0, want: 0},
	test_uint64{fn: rsh_1_uint64, fnname: "rsh_1_uint64", in: 1, want: 0},
	test_uint64{fn: rsh_uint64_1, fnname: "rsh_uint64_1", in: 1, want: 0},
	test_uint64{fn: rsh_1_uint64, fnname: "rsh_1_uint64", in: 4294967296, want: 0},
	test_uint64{fn: rsh_uint64_1, fnname: "rsh_uint64_1", in: 4294967296, want: 2147483648},
	test_uint64{fn: rsh_1_uint64, fnname: "rsh_1_uint64", in: 9223372036854775808, want: 0},
	test_uint64{fn: rsh_uint64_1, fnname: "rsh_uint64_1", in: 9223372036854775808, want: 4611686018427387904},
	test_uint64{fn: rsh_1_uint64, fnname: "rsh_1_uint64", in: 18446744073709551615, want: 0},
	test_uint64{fn: rsh_uint64_1, fnname: "rsh_uint64_1", in: 18446744073709551615, want: 9223372036854775807},
	test_uint64{fn: rsh_4294967296_uint64, fnname: "rsh_4294967296_uint64", in: 0, want: 4294967296},
	test_uint64{fn: rsh_uint64_4294967296, fnname: "rsh_uint64_4294967296", in: 0, want: 0},
	test_uint64{fn: rsh_4294967296_uint64, fnname: "rsh_4294967296_uint64", in: 1, want: 2147483648},
	test_uint64{fn: rsh_uint64_4294967296, fnname: "rsh_uint64_4294967296", in: 1, want: 0},
	test_uint64{fn: rsh_4294967296_uint64, fnname: "rsh_4294967296_uint64", in: 4294967296, want: 0},
	test_uint64{fn: rsh_uint64_4294967296, fnname: "rsh_uint64_4294967296", in: 4294967296, want: 0},
	test_uint64{fn: rsh_4294967296_uint64, fnname: "rsh_4294967296_uint64", in: 9223372036854775808, want: 0},
	test_uint64{fn: rsh_uint64_4294967296, fnname: "rsh_uint64_4294967296", in: 9223372036854775808, want: 0},
	test_uint64{fn: rsh_4294967296_uint64, fnname: "rsh_4294967296_uint64", in: 18446744073709551615, want: 0},
	test_uint64{fn: rsh_uint64_4294967296, fnname: "rsh_uint64_4294967296", in: 18446744073709551615, want: 0},
	test_uint64{fn: rsh_9223372036854775808_uint64, fnname: "rsh_9223372036854775808_uint64", in: 0, want: 9223372036854775808},
	test_uint64{fn: rsh_uint64_9223372036854775808, fnname: "rsh_uint64_9223372036854775808", in: 0, want: 0},
	test_uint64{fn: rsh_9223372036854775808_uint64, fnname: "rsh_9223372036854775808_uint64", in: 1, want: 4611686018427387904},
	test_uint64{fn: rsh_uint64_9223372036854775808, fnname: "rsh_uint64_9223372036854775808", in: 1, want: 0},
	test_uint64{fn: rsh_9223372036854775808_uint64, fnname: "rsh_9223372036854775808_uint64", in: 4294967296, want: 0},
	test_uint64{fn: rsh_uint64_9223372036854775808, fnname: "rsh_uint64_9223372036854775808", in: 4294967296, want: 0},
	test_uint64{fn: rsh_9223372036854775808_uint64, fnname: "rsh_9223372036854775808_uint64", in: 9223372036854775808, want: 0},
	test_uint64{fn: rsh_uint64_9223372036854775808, fnname: "rsh_uint64_9223372036854775808", in: 9223372036854775808, want: 0},
	test_uint64{fn: rsh_9223372036854775808_uint64, fnname: "rsh_9223372036854775808_uint64", in: 18446744073709551615, want: 0},
	test_uint64{fn: rsh_uint64_9223372036854775808, fnname: "rsh_uint64_9223372036854775808", in: 18446744073709551615, want: 0},
	test_uint64{fn: rsh_18446744073709551615_uint64, fnname: "rsh_18446744073709551615_uint64", in: 0, want: 18446744073709551615},
	test_uint64{fn: rsh_uint64_18446744073709551615, fnname: "rsh_uint64_18446744073709551615", in: 0, want: 0},
	test_uint64{fn: rsh_18446744073709551615_uint64, fnname: "rsh_18446744073709551615_uint64", in: 1, want: 9223372036854775807},
	test_uint64{fn: rsh_uint64_18446744073709551615, fnname: "rsh_uint64_18446744073709551615", in: 1, want: 0},
	test_uint64{fn: rsh_18446744073709551615_uint64, fnname: "rsh_18446744073709551615_uint64", in: 4294967296, want: 0},
	test_uint64{fn: rsh_uint64_18446744073709551615, fnname: "rsh_uint64_18446744073709551615", in: 4294967296, want: 0},
	test_uint64{fn: rsh_18446744073709551615_uint64, fnname: "rsh_18446744073709551615_uint64", in: 9223372036854775808, want: 0},
	test_uint64{fn: rsh_uint64_18446744073709551615, fnname: "rsh_uint64_18446744073709551615", in: 9223372036854775808, want: 0},
	test_uint64{fn: rsh_18446744073709551615_uint64, fnname: "rsh_18446744073709551615_uint64", in: 18446744073709551615, want: 0},
	test_uint64{fn: rsh_uint64_18446744073709551615, fnname: "rsh_uint64_18446744073709551615", in: 18446744073709551615, want: 0},
	test_uint64{fn: mod_0_uint64, fnname: "mod_0_uint64", in: 1, want: 0},
	test_uint64{fn: mod_0_uint64, fnname: "mod_0_uint64", in: 4294967296, want: 0},
	test_uint64{fn: mod_0_uint64, fnname: "mod_0_uint64", in: 9223372036854775808, want: 0},
	test_uint64{fn: mod_0_uint64, fnname: "mod_0_uint64", in: 18446744073709551615, want: 0},
	test_uint64{fn: mod_uint64_1, fnname: "mod_uint64_1", in: 0, want: 0},
	test_uint64{fn: mod_1_uint64, fnname: "mod_1_uint64", in: 1, want: 0},
	test_uint64{fn: mod_uint64_1, fnname: "mod_uint64_1", in: 1, want: 0},
	test_uint64{fn: mod_1_uint64, fnname: "mod_1_uint64", in: 4294967296, want: 1},
	test_uint64{fn: mod_uint64_1, fnname: "mod_uint64_1", in: 4294967296, want: 0},
	test_uint64{fn: mod_1_uint64, fnname: "mod_1_uint64", in: 9223372036854775808, want: 1},
	test_uint64{fn: mod_uint64_1, fnname: "mod_uint64_1", in: 9223372036854775808, want: 0},
	test_uint64{fn: mod_1_uint64, fnname: "mod_1_uint64", in: 18446744073709551615, want: 1},
	test_uint64{fn: mod_uint64_1, fnname: "mod_uint64_1", in: 18446744073709551615, want: 0},
	test_uint64{fn: mod_uint64_4294967296, fnname: "mod_uint64_4294967296", in: 0, want: 0},
	test_uint64{fn: mod_4294967296_uint64, fnname: "mod_4294967296_uint64", in: 1, want: 0},
	test_uint64{fn: mod_uint64_4294967296, fnname: "mod_uint64_4294967296", in: 1, want: 1},
	test_uint64{fn: mod_4294967296_uint64, fnname: "mod_4294967296_uint64", in: 4294967296, want: 0},
	test_uint64{fn: mod_uint64_4294967296, fnname: "mod_uint64_4294967296", in: 4294967296, want: 0},
	test_uint64{fn: mod_4294967296_uint64, fnname: "mod_4294967296_uint64", in: 9223372036854775808, want: 4294967296},
	test_uint64{fn: mod_uint64_4294967296, fnname: "mod_uint64_4294967296", in: 9223372036854775808, want: 0},
	test_uint64{fn: mod_4294967296_uint64, fnname: "mod_4294967296_uint64", in: 18446744073709551615, want: 4294967296},
	test_uint64{fn: mod_uint64_4294967296, fnname: "mod_uint64_4294967296", in: 18446744073709551615, want: 4294967295},
	test_uint64{fn: mod_uint64_9223372036854775808, fnname: "mod_uint64_9223372036854775808", in: 0, want: 0},
	test_uint64{fn: mod_9223372036854775808_uint64, fnname: "mod_9223372036854775808_uint64", in: 1, want: 0},
	test_uint64{fn: mod_uint64_9223372036854775808, fnname: "mod_uint64_9223372036854775808", in: 1, want: 1},
	test_uint64{fn: mod_9223372036854775808_uint64, fnname: "mod_9223372036854775808_uint64", in: 4294967296, want: 0},
	test_uint64{fn: mod_uint64_9223372036854775808, fnname: "mod_uint64_9223372036854775808", in: 4294967296, want: 4294967296},
	test_uint64{fn: mod_9223372036854775808_uint64, fnname: "mod_9223372036854775808_uint64", in: 9223372036854775808, want: 0},
	test_uint64{fn: mod_uint64_9223372036854775808, fnname: "mod_uint64_9223372036854775808", in: 9223372036854775808, want: 0},
	test_uint64{fn: mod_9223372036854775808_uint64, fnname: "mod_9223372036854775808_uint64", in: 18446744073709551615, want: 9223372036854775808},
	test_uint64{fn: mod_uint64_9223372036854775808, fnname: "mod_uint64_9223372036854775808", in: 18446744073709551615, want: 9223372036854775807},
	test_uint64{fn: mod_uint64_18446744073709551615, fnname: "mod_uint64_18446744073709551615", in: 0, want: 0},
	test_uint64{fn: mod_18446744073709551615_uint64, fnname: "mod_18446744073709551615_uint64", in: 1, want: 0},
	test_uint64{fn: mod_uint64_18446744073709551615, fnname: "mod_uint64_18446744073709551615", in: 1, want: 1},
	test_uint64{fn: mod_18446744073709551615_uint64, fnname: "mod_18446744073709551615_uint64", in: 4294967296, want: 4294967295},
	test_uint64{fn: mod_uint64_18446744073709551615, fnname: "mod_uint64_18446744073709551615", in: 4294967296, want: 4294967296},
	test_uint64{fn: mod_18446744073709551615_uint64, fnname: "mod_18446744073709551615_uint64", in: 9223372036854775808, want: 9223372036854775807},
	test_uint64{fn: mod_uint64_18446744073709551615, fnname: "mod_uint64_18446744073709551615", in: 9223372036854775808, want: 9223372036854775808},
	test_uint64{fn: mod_18446744073709551615_uint64, fnname: "mod_18446744073709551615_uint64", in: 18446744073709551615, want: 0},
	test_uint64{fn: mod_uint64_18446744073709551615, fnname: "mod_uint64_18446744073709551615", in: 18446744073709551615, want: 0},
	test_uint64{fn: and_0_uint64, fnname: "and_0_uint64", in: 0, want: 0},
	test_uint64{fn: and_uint64_0, fnname: "and_uint64_0", in: 0, want: 0},
	test_uint64{fn: and_0_uint64, fnname: "and_0_uint64", in: 1, want: 0},
	test_uint64{fn: and_uint64_0, fnname: "and_uint64_0", in: 1, want: 0},
	test_uint64{fn: and_0_uint64, fnname: "and_0_uint64", in: 4294967296, want: 0},
	test_uint64{fn: and_uint64_0, fnname: "and_uint64_0", in: 4294967296, want: 0},
	test_uint64{fn: and_0_uint64, fnname: "and_0_uint64", in: 9223372036854775808, want: 0},
	test_uint64{fn: and_uint64_0, fnname: "and_uint64_0", in: 9223372036854775808, want: 0},
	test_uint64{fn: and_0_uint64, fnname: "and_0_uint64", in: 18446744073709551615, want: 0},
	test_uint64{fn: and_uint64_0, fnname: "and_uint64_0", in: 18446744073709551615, want: 0},
	test_uint64{fn: and_1_uint64, fnname: "and_1_uint64", in: 0, want: 0},
	test_uint64{fn: and_uint64_1, fnname: "and_uint64_1", in: 0, want: 0},
	test_uint64{fn: and_1_uint64, fnname: "and_1_uint64", in: 1, want: 1},
	test_uint64{fn: and_uint64_1, fnname: "and_uint64_1", in: 1, want: 1},
	test_uint64{fn: and_1_uint64, fnname: "and_1_uint64", in: 4294967296, want: 0},
	test_uint64{fn: and_uint64_1, fnname: "and_uint64_1", in: 4294967296, want: 0},
	test_uint64{fn: and_1_uint64, fnname: "and_1_uint64", in: 9223372036854775808, want: 0},
	test_uint64{fn: and_uint64_1, fnname: "and_uint64_1", in: 9223372036854775808, want: 0},
	test_uint64{fn: and_1_uint64, fnname: "and_1_uint64", in: 18446744073709551615, want: 1},
	test_uint64{fn: and_uint64_1, fnname: "and_uint64_1", in: 18446744073709551615, want: 1},
	test_uint64{fn: and_4294967296_uint64, fnname: "and_4294967296_uint64", in: 0, want: 0},
	test_uint64{fn: and_uint64_4294967296, fnname: "and_uint64_4294967296", in: 0, want: 0},
	test_uint64{fn: and_4294967296_uint64, fnname: "and_4294967296_uint64", in: 1, want: 0},
	test_uint64{fn: and_uint64_4294967296, fnname: "and_uint64_4294967296", in: 1, want: 0},
	test_uint64{fn: and_4294967296_uint64, fnname: "and_4294967296_uint64", in: 4294967296, want: 4294967296},
	test_uint64{fn: and_uint64_4294967296, fnname: "and_uint64_4294967296", in: 4294967296, want: 4294967296},
	test_uint64{fn: and_4294967296_uint64, fnname: "and_4294967296_uint64", in: 9223372036854775808, want: 0},
	test_uint64{fn: and_uint64_4294967296, fnname: "and_uint64_4294967296", in: 9223372036854775808, want: 0},
	test_uint64{fn: and_4294967296_uint64, fnname: "and_4294967296_uint64", in: 18446744073709551615, want: 4294967296},
	test_uint64{fn: and_uint64_4294967296, fnname: "and_uint64_4294967296", in: 18446744073709551615, want: 4294967296},
	test_uint64{fn: and_9223372036854775808_uint64, fnname: "and_9223372036854775808_uint64", in: 0, want: 0},
	test_uint64{fn: and_uint64_9223372036854775808, fnname: "and_uint64_9223372036854775808", in: 0, want: 0},
	test_uint64{fn: and_9223372036854775808_uint64, fnname: "and_9223372036854775808_uint64", in: 1, want: 0},
	test_uint64{fn: and_uint64_9223372036854775808, fnname: "and_uint64_9223372036854775808", in: 1, want: 0},
	test_uint64{fn: and_9223372036854775808_uint64, fnname: "and_9223372036854775808_uint64", in: 4294967296, want: 0},
	test_uint64{fn: and_uint64_9223372036854775808, fnname: "and_uint64_9223372036854775808", in: 4294967296, want: 0},
	test_uint64{fn: and_9223372036854775808_uint64, fnname: "and_9223372036854775808_uint64", in: 9223372036854775808, want: 9223372036854775808},
	test_uint64{fn: and_uint64_9223372036854775808, fnname: "and_uint64_9223372036854775808", in: 9223372036854775808, want: 9223372036854775808},
	test_uint64{fn: and_9223372036854775808_uint64, fnname: "and_9223372036854775808_uint64", in: 18446744073709551615, want: 9223372036854775808},
	test_uint64{fn: and_uint64_9223372036854775808, fnname: "and_uint64_9223372036854775808", in: 18446744073709551615, want: 9223372036854775808},
	test_uint64{fn: and_18446744073709551615_uint64, fnname: "and_18446744073709551615_uint64", in: 0, want: 0},
	test_uint64{fn: and_uint64_18446744073709551615, fnname: "and_uint64_18446744073709551615", in: 0, want: 0},
	test_uint64{fn: and_18446744073709551615_uint64, fnname: "and_18446744073709551615_uint64", in: 1, want: 1},
	test_uint64{fn: and_uint64_18446744073709551615, fnname: "and_uint64_18446744073709551615", in: 1, want: 1},
	test_uint64{fn: and_18446744073709551615_uint64, fnname: "and_18446744073709551615_uint64", in: 4294967296, want: 4294967296},
	test_uint64{fn: and_uint64_18446744073709551615, fnname: "and_uint64_18446744073709551615", in: 4294967296, want: 4294967296},
	test_uint64{fn: and_18446744073709551615_uint64, fnname: "and_18446744073709551615_uint64", in: 9223372036854775808, want: 9223372036854775808},
	test_uint64{fn: and_uint64_18446744073709551615, fnname: "and_uint64_18446744073709551615", in: 9223372036854775808, want: 9223372036854775808},
	test_uint64{fn: and_18446744073709551615_uint64, fnname: "and_18446744073709551615_uint64", in: 18446744073709551615, want: 18446744073709551615},
	test_uint64{fn: and_uint64_18446744073709551615, fnname: "and_uint64_18446744073709551615", in: 18446744073709551615, want: 18446744073709551615},
	test_uint64{fn: or_0_uint64, fnname: "or_0_uint64", in: 0, want: 0},
	test_uint64{fn: or_uint64_0, fnname: "or_uint64_0", in: 0, want: 0},
	test_uint64{fn: or_0_uint64, fnname: "or_0_uint64", in: 1, want: 1},
	test_uint64{fn: or_uint64_0, fnname: "or_uint64_0", in: 1, want: 1},
	test_uint64{fn: or_0_uint64, fnname: "or_0_uint64", in: 4294967296, want: 4294967296},
	test_uint64{fn: or_uint64_0, fnname: "or_uint64_0", in: 4294967296, want: 4294967296},
	test_uint64{fn: or_0_uint64, fnname: "or_0_uint64", in: 9223372036854775808, want: 9223372036854775808},
	test_uint64{fn: or_uint64_0, fnname: "or_uint64_0", in: 9223372036854775808, want: 9223372036854775808},
	test_uint64{fn: or_0_uint64, fnname: "or_0_uint64", in: 18446744073709551615, want: 18446744073709551615},
	test_uint64{fn: or_uint64_0, fnname: "or_uint64_0", in: 18446744073709551615, want: 18446744073709551615},
	test_uint64{fn: or_1_uint64, fnname: "or_1_uint64", in: 0, want: 1},
	test_uint64{fn: or_uint64_1, fnname: "or_uint64_1", in: 0, want: 1},
	test_uint64{fn: or_1_uint64, fnname: "or_1_uint64", in: 1, want: 1},
	test_uint64{fn: or_uint64_1, fnname: "or_uint64_1", in: 1, want: 1},
	test_uint64{fn: or_1_uint64, fnname: "or_1_uint64", in: 4294967296, want: 4294967297},
	test_uint64{fn: or_uint64_1, fnname: "or_uint64_1", in: 4294967296, want: 4294967297},
	test_uint64{fn: or_1_uint64, fnname: "or_1_uint64", in: 9223372036854775808, want: 9223372036854775809},
	test_uint64{fn: or_uint64_1, fnname: "or_uint64_1", in: 9223372036854775808, want: 9223372036854775809},
	test_uint64{fn: or_1_uint64, fnname: "or_1_uint64", in: 18446744073709551615, want: 18446744073709551615},
	test_uint64{fn: or_uint64_1, fnname: "or_uint64_1", in: 18446744073709551615, want: 18446744073709551615},
	test_uint64{fn: or_4294967296_uint64, fnname: "or_4294967296_uint64", in: 0, want: 4294967296},
	test_uint64{fn: or_uint64_4294967296, fnname: "or_uint64_4294967296", in: 0, want: 4294967296},
	test_uint64{fn: or_4294967296_uint64, fnname: "or_4294967296_uint64", in: 1, want: 4294967297},
	test_uint64{fn: or_uint64_4294967296, fnname: "or_uint64_4294967296", in: 1, want: 4294967297},
	test_uint64{fn: or_4294967296_uint64, fnname: "or_4294967296_uint64", in: 4294967296, want: 4294967296},
	test_uint64{fn: or_uint64_4294967296, fnname: "or_uint64_4294967296", in: 4294967296, want: 4294967296},
	test_uint64{fn: or_4294967296_uint64, fnname: "or_4294967296_uint64", in: 9223372036854775808, want: 9223372041149743104},
	test_uint64{fn: or_uint64_4294967296, fnname: "or_uint64_4294967296", in: 9223372036854775808, want: 9223372041149743104},
	test_uint64{fn: or_4294967296_uint64, fnname: "or_4294967296_uint64", in: 18446744073709551615, want: 18446744073709551615},
	test_uint64{fn: or_uint64_4294967296, fnname: "or_uint64_4294967296", in: 18446744073709551615, want: 18446744073709551615},
	test_uint64{fn: or_9223372036854775808_uint64, fnname: "or_9223372036854775808_uint64", in: 0, want: 9223372036854775808},
	test_uint64{fn: or_uint64_9223372036854775808, fnname: "or_uint64_9223372036854775808", in: 0, want: 9223372036854775808},
	test_uint64{fn: or_9223372036854775808_uint64, fnname: "or_9223372036854775808_uint64", in: 1, want: 9223372036854775809},
	test_uint64{fn: or_uint64_9223372036854775808, fnname: "or_uint64_9223372036854775808", in: 1, want: 9223372036854775809},
	test_uint64{fn: or_9223372036854775808_uint64, fnname: "or_9223372036854775808_uint64", in: 4294967296, want: 9223372041149743104},
	test_uint64{fn: or_uint64_9223372036854775808, fnname: "or_uint64_9223372036854775808", in: 4294967296, want: 9223372041149743104},
	test_uint64{fn: or_9223372036854775808_uint64, fnname: "or_9223372036854775808_uint64", in: 9223372036854775808, want: 9223372036854775808},
	test_uint64{fn: or_uint64_9223372036854775808, fnname: "or_uint64_9223372036854775808", in: 9223372036854775808, want: 9223372036854775808},
	test_uint64{fn: or_9223372036854775808_uint64, fnname: "or_9223372036854775808_uint64", in: 18446744073709551615, want: 18446744073709551615},
	test_uint64{fn: or_uint64_9223372036854775808, fnname: "or_uint64_9223372036854775808", in: 18446744073709551615, want: 18446744073709551615},
	test_uint64{fn: or_18446744073709551615_uint64, fnname: "or_18446744073709551615_uint64", in: 0, want: 18446744073709551615},
	test_uint64{fn: or_uint64_18446744073709551615, fnname: "or_uint64_18446744073709551615", in: 0, want: 18446744073709551615},
	test_uint64{fn: or_18446744073709551615_uint64, fnname: "or_18446744073709551615_uint64", in: 1, want: 18446744073709551615},
	test_uint64{fn: or_uint64_18446744073709551615, fnname: "or_uint64_18446744073709551615", in: 1, want: 18446744073709551615},
	test_uint64{fn: or_18446744073709551615_uint64, fnname: "or_18446744073709551615_uint64", in: 4294967296, want: 18446744073709551615},
	test_uint64{fn: or_uint64_18446744073709551615, fnname: "or_uint64_18446744073709551615", in: 4294967296, want: 18446744073709551615},
	test_uint64{fn: or_18446744073709551615_uint64, fnname: "or_18446744073709551615_uint64", in: 9223372036854775808, want: 18446744073709551615},
	test_uint64{fn: or_uint64_18446744073709551615, fnname: "or_uint64_18446744073709551615", in: 9223372036854775808, want: 18446744073709551615},
	test_uint64{fn: or_18446744073709551615_uint64, fnname: "or_18446744073709551615_uint64", in: 18446744073709551615, want: 18446744073709551615},
	test_uint64{fn: or_uint64_18446744073709551615, fnname: "or_uint64_18446744073709551615", in: 18446744073709551615, want: 18446744073709551615},
	test_uint64{fn: xor_0_uint64, fnname: "xor_0_uint64", in: 0, want: 0},
	test_uint64{fn: xor_uint64_0, fnname: "xor_uint64_0", in: 0, want: 0},
	test_uint64{fn: xor_0_uint64, fnname: "xor_0_uint64", in: 1, want: 1},
	test_uint64{fn: xor_uint64_0, fnname: "xor_uint64_0", in: 1, want: 1},
	test_uint64{fn: xor_0_uint64, fnname: "xor_0_uint64", in: 4294967296, want: 4294967296},
	test_uint64{fn: xor_uint64_0, fnname: "xor_uint64_0", in: 4294967296, want: 4294967296},
	test_uint64{fn: xor_0_uint64, fnname: "xor_0_uint64", in: 9223372036854775808, want: 9223372036854775808},
	test_uint64{fn: xor_uint64_0, fnname: "xor_uint64_0", in: 9223372036854775808, want: 9223372036854775808},
	test_uint64{fn: xor_0_uint64, fnname: "xor_0_uint64", in: 18446744073709551615, want: 18446744073709551615},
	test_uint64{fn: xor_uint64_0, fnname: "xor_uint64_0", in: 18446744073709551615, want: 18446744073709551615},
	test_uint64{fn: xor_1_uint64, fnname: "xor_1_uint64", in: 0, want: 1},
	test_uint64{fn: xor_uint64_1, fnname: "xor_uint64_1", in: 0, want: 1},
	test_uint64{fn: xor_1_uint64, fnname: "xor_1_uint64", in: 1, want: 0},
	test_uint64{fn: xor_uint64_1, fnname: "xor_uint64_1", in: 1, want: 0},
	test_uint64{fn: xor_1_uint64, fnname: "xor_1_uint64", in: 4294967296, want: 4294967297},
	test_uint64{fn: xor_uint64_1, fnname: "xor_uint64_1", in: 4294967296, want: 4294967297},
	test_uint64{fn: xor_1_uint64, fnname: "xor_1_uint64", in: 9223372036854775808, want: 9223372036854775809},
	test_uint64{fn: xor_uint64_1, fnname: "xor_uint64_1", in: 9223372036854775808, want: 9223372036854775809},
	test_uint64{fn: xor_1_uint64, fnname: "xor_1_uint64", in: 18446744073709551615, want: 18446744073709551614},
	test_uint64{fn: xor_uint64_1, fnname: "xor_uint64_1", in: 18446744073709551615, want: 18446744073709551614},
	test_uint64{fn: xor_4294967296_uint64, fnname: "xor_4294967296_uint64", in: 0, want: 4294967296},
	test_uint64{fn: xor_uint64_4294967296, fnname: "xor_uint64_4294967296", in: 0, want: 4294967296},
	test_uint64{fn: xor_4294967296_uint64, fnname: "xor_4294967296_uint64", in: 1, want: 4294967297},
	test_uint64{fn: xor_uint64_4294967296, fnname: "xor_uint64_4294967296", in: 1, want: 4294967297},
	test_uint64{fn: xor_4294967296_uint64, fnname: "xor_4294967296_uint64", in: 4294967296, want: 0},
	test_uint64{fn: xor_uint64_4294967296, fnname: "xor_uint64_4294967296", in: 4294967296, want: 0},
	test_uint64{fn: xor_4294967296_uint64, fnname: "xor_4294967296_uint64", in: 9223372036854775808, want: 9223372041149743104},
	test_uint64{fn: xor_uint64_4294967296, fnname: "xor_uint64_4294967296", in: 9223372036854775808, want: 9223372041149743104},
	test_uint64{fn: xor_4294967296_uint64, fnname: "xor_4294967296_uint64", in: 18446744073709551615, want: 18446744069414584319},
	test_uint64{fn: xor_uint64_4294967296, fnname: "xor_uint64_4294967296", in: 18446744073709551615, want: 18446744069414584319},
	test_uint64{fn: xor_9223372036854775808_uint64, fnname: "xor_9223372036854775808_uint64", in: 0, want: 9223372036854775808},
	test_uint64{fn: xor_uint64_9223372036854775808, fnname: "xor_uint64_9223372036854775808", in: 0, want: 9223372036854775808},
	test_uint64{fn: xor_9223372036854775808_uint64, fnname: "xor_9223372036854775808_uint64", in: 1, want: 9223372036854775809},
	test_uint64{fn: xor_uint64_9223372036854775808, fnname: "xor_uint64_9223372036854775808", in: 1, want: 9223372036854775809},
	test_uint64{fn: xor_9223372036854775808_uint64, fnname: "xor_9223372036854775808_uint64", in: 4294967296, want: 9223372041149743104},
	test_uint64{fn: xor_uint64_9223372036854775808, fnname: "xor_uint64_9223372036854775808", in: 4294967296, want: 9223372041149743104},
	test_uint64{fn: xor_9223372036854775808_uint64, fnname: "xor_9223372036854775808_uint64", in: 9223372036854775808, want: 0},
	test_uint64{fn: xor_uint64_9223372036854775808, fnname: "xor_uint64_9223372036854775808", in: 9223372036854775808, want: 0},
	test_uint64{fn: xor_9223372036854775808_uint64, fnname: "xor_9223372036854775808_uint64", in: 18446744073709551615, want: 9223372036854775807},
	test_uint64{fn: xor_uint64_9223372036854775808, fnname: "xor_uint64_9223372036854775808", in: 18446744073709551615, want: 9223372036854775807},
	test_uint64{fn: xor_18446744073709551615_uint64, fnname: "xor_18446744073709551615_uint64", in: 0, want: 18446744073709551615},
	test_uint64{fn: xor_uint64_18446744073709551615, fnname: "xor_uint64_18446744073709551615", in: 0, want: 18446744073709551615},
	test_uint64{fn: xor_18446744073709551615_uint64, fnname: "xor_18446744073709551615_uint64", in: 1, want: 18446744073709551614},
	test_uint64{fn: xor_uint64_18446744073709551615, fnname: "xor_uint64_18446744073709551615", in: 1, want: 18446744073709551614},
	test_uint64{fn: xor_18446744073709551615_uint64, fnname: "xor_18446744073709551615_uint64", in: 4294967296, want: 18446744069414584319},
	test_uint64{fn: xor_uint64_18446744073709551615, fnname: "xor_uint64_18446744073709551615", in: 4294967296, want: 18446744069414584319},
	test_uint64{fn: xor_18446744073709551615_uint64, fnname: "xor_18446744073709551615_uint64", in: 9223372036854775808, want: 9223372036854775807},
	test_uint64{fn: xor_uint64_18446744073709551615, fnname: "xor_uint64_18446744073709551615", in: 9223372036854775808, want: 9223372036854775807},
	test_uint64{fn: xor_18446744073709551615_uint64, fnname: "xor_18446744073709551615_uint64", in: 18446744073709551615, want: 0},
	test_uint64{fn: xor_uint64_18446744073709551615, fnname: "xor_uint64_18446744073709551615", in: 18446744073709551615, want: 0}}

type test_int64 struct {
	fn     func(int64) int64
	fnname string
	in     int64
	want   int64
}

var tests_int64 = []test_int64{

	test_int64{fn: add_Neg9223372036854775808_int64, fnname: "add_Neg9223372036854775808_int64", in: -9223372036854775808, want: 0},
	test_int64{fn: add_int64_Neg9223372036854775808, fnname: "add_int64_Neg9223372036854775808", in: -9223372036854775808, want: 0},
	test_int64{fn: add_Neg9223372036854775808_int64, fnname: "add_Neg9223372036854775808_int64", in: -9223372036854775807, want: 1},
	test_int64{fn: add_int64_Neg9223372036854775808, fnname: "add_int64_Neg9223372036854775808", in: -9223372036854775807, want: 1},
	test_int64{fn: add_Neg9223372036854775808_int64, fnname: "add_Neg9223372036854775808_int64", in: -4294967296, want: 9223372032559808512},
	test_int64{fn: add_int64_Neg9223372036854775808, fnname: "add_int64_Neg9223372036854775808", in: -4294967296, want: 9223372032559808512},
	test_int64{fn: add_Neg9223372036854775808_int64, fnname: "add_Neg9223372036854775808_int64", in: -1, want: 9223372036854775807},
	test_int64{fn: add_int64_Neg9223372036854775808, fnname: "add_int64_Neg9223372036854775808", in: -1, want: 9223372036854775807},
	test_int64{fn: add_Neg9223372036854775808_int64, fnname: "add_Neg9223372036854775808_int64", in: 0, want: -9223372036854775808},
	test_int64{fn: add_int64_Neg9223372036854775808, fnname: "add_int64_Neg9223372036854775808", in: 0, want: -9223372036854775808},
	test_int64{fn: add_Neg9223372036854775808_int64, fnname: "add_Neg9223372036854775808_int64", in: 1, want: -9223372036854775807},
	test_int64{fn: add_int64_Neg9223372036854775808, fnname: "add_int64_Neg9223372036854775808", in: 1, want: -9223372036854775807},
	test_int64{fn: add_Neg9223372036854775808_int64, fnname: "add_Neg9223372036854775808_int64", in: 4294967296, want: -9223372032559808512},
	test_int64{fn: add_int64_Neg9223372036854775808, fnname: "add_int64_Neg9223372036854775808", in: 4294967296, want: -9223372032559808512},
	test_int64{fn: add_Neg9223372036854775808_int64, fnname: "add_Neg9223372036854775808_int64", in: 9223372036854775806, want: -2},
	test_int64{fn: add_int64_Neg9223372036854775808, fnname: "add_int64_Neg9223372036854775808", in: 9223372036854775806, want: -2},
	test_int64{fn: add_Neg9223372036854775808_int64, fnname: "add_Neg9223372036854775808_int64", in: 9223372036854775807, want: -1},
	test_int64{fn: add_int64_Neg9223372036854775808, fnname: "add_int64_Neg9223372036854775808", in: 9223372036854775807, want: -1},
	test_int64{fn: add_Neg9223372036854775807_int64, fnname: "add_Neg9223372036854775807_int64", in: -9223372036854775808, want: 1},
	test_int64{fn: add_int64_Neg9223372036854775807, fnname: "add_int64_Neg9223372036854775807", in: -9223372036854775808, want: 1},
	test_int64{fn: add_Neg9223372036854775807_int64, fnname: "add_Neg9223372036854775807_int64", in: -9223372036854775807, want: 2},
	test_int64{fn: add_int64_Neg9223372036854775807, fnname: "add_int64_Neg9223372036854775807", in: -9223372036854775807, want: 2},
	test_int64{fn: add_Neg9223372036854775807_int64, fnname: "add_Neg9223372036854775807_int64", in: -4294967296, want: 9223372032559808513},
	test_int64{fn: add_int64_Neg9223372036854775807, fnname: "add_int64_Neg9223372036854775807", in: -4294967296, want: 9223372032559808513},
	test_int64{fn: add_Neg9223372036854775807_int64, fnname: "add_Neg9223372036854775807_int64", in: -1, want: -9223372036854775808},
	test_int64{fn: add_int64_Neg9223372036854775807, fnname: "add_int64_Neg9223372036854775807", in: -1, want: -9223372036854775808},
	test_int64{fn: add_Neg9223372036854775807_int64, fnname: "add_Neg9223372036854775807_int64", in: 0, want: -9223372036854775807},
	test_int64{fn: add_int64_Neg9223372036854775807, fnname: "add_int64_Neg9223372036854775807", in: 0, want: -9223372036854775807},
	test_int64{fn: add_Neg9223372036854775807_int64, fnname: "add_Neg9223372036854775807_int64", in: 1, want: -9223372036854775806},
	test_int64{fn: add_int64_Neg9223372036854775807, fnname: "add_int64_Neg9223372036854775807", in: 1, want: -9223372036854775806},
	test_int64{fn: add_Neg9223372036854775807_int64, fnname: "add_Neg9223372036854775807_int64", in: 4294967296, want: -9223372032559808511},
	test_int64{fn: add_int64_Neg9223372036854775807, fnname: "add_int64_Neg9223372036854775807", in: 4294967296, want: -9223372032559808511},
	test_int64{fn: add_Neg9223372036854775807_int64, fnname: "add_Neg9223372036854775807_int64", in: 9223372036854775806, want: -1},
	test_int64{fn: add_int64_Neg9223372036854775807, fnname: "add_int64_Neg9223372036854775807", in: 9223372036854775806, want: -1},
	test_int64{fn: add_Neg9223372036854775807_int64, fnname: "add_Neg9223372036854775807_int64", in: 9223372036854775807, want: 0},
	test_int64{fn: add_int64_Neg9223372036854775807, fnname: "add_int64_Neg9223372036854775807", in: 9223372036854775807, want: 0},
	test_int64{fn: add_Neg4294967296_int64, fnname: "add_Neg4294967296_int64", in: -9223372036854775808, want: 9223372032559808512},
	test_int64{fn: add_int64_Neg4294967296, fnname: "add_int64_Neg4294967296", in: -9223372036854775808, want: 9223372032559808512},
	test_int64{fn: add_Neg4294967296_int64, fnname: "add_Neg4294967296_int64", in: -9223372036854775807, want: 9223372032559808513},
	test_int64{fn: add_int64_Neg4294967296, fnname: "add_int64_Neg4294967296", in: -9223372036854775807, want: 9223372032559808513},
	test_int64{fn: add_Neg4294967296_int64, fnname: "add_Neg4294967296_int64", in: -4294967296, want: -8589934592},
	test_int64{fn: add_int64_Neg4294967296, fnname: "add_int64_Neg4294967296", in: -4294967296, want: -8589934592},
	test_int64{fn: add_Neg4294967296_int64, fnname: "add_Neg4294967296_int64", in: -1, want: -4294967297},
	test_int64{fn: add_int64_Neg4294967296, fnname: "add_int64_Neg4294967296", in: -1, want: -4294967297},
	test_int64{fn: add_Neg4294967296_int64, fnname: "add_Neg4294967296_int64", in: 0, want: -4294967296},
	test_int64{fn: add_int64_Neg4294967296, fnname: "add_int64_Neg4294967296", in: 0, want: -4294967296},
	test_int64{fn: add_Neg4294967296_int64, fnname: "add_Neg4294967296_int64", in: 1, want: -4294967295},
	test_int64{fn: add_int64_Neg4294967296, fnname: "add_int64_Neg4294967296", in: 1, want: -4294967295},
	test_int64{fn: add_Neg4294967296_int64, fnname: "add_Neg4294967296_int64", in: 4294967296, want: 0},
	test_int64{fn: add_int64_Neg4294967296, fnname: "add_int64_Neg4294967296", in: 4294967296, want: 0},
	test_int64{fn: add_Neg4294967296_int64, fnname: "add_Neg4294967296_int64", in: 9223372036854775806, want: 9223372032559808510},
	test_int64{fn: add_int64_Neg4294967296, fnname: "add_int64_Neg4294967296", in: 9223372036854775806, want: 9223372032559808510},
	test_int64{fn: add_Neg4294967296_int64, fnname: "add_Neg4294967296_int64", in: 9223372036854775807, want: 9223372032559808511},
	test_int64{fn: add_int64_Neg4294967296, fnname: "add_int64_Neg4294967296", in: 9223372036854775807, want: 9223372032559808511},
	test_int64{fn: add_Neg1_int64, fnname: "add_Neg1_int64", in: -9223372036854775808, want: 9223372036854775807},
	test_int64{fn: add_int64_Neg1, fnname: "add_int64_Neg1", in: -9223372036854775808, want: 9223372036854775807},
	test_int64{fn: add_Neg1_int64, fnname: "add_Neg1_int64", in: -9223372036854775807, want: -9223372036854775808},
	test_int64{fn: add_int64_Neg1, fnname: "add_int64_Neg1", in: -9223372036854775807, want: -9223372036854775808},
	test_int64{fn: add_Neg1_int64, fnname: "add_Neg1_int64", in: -4294967296, want: -4294967297},
	test_int64{fn: add_int64_Neg1, fnname: "add_int64_Neg1", in: -4294967296, want: -4294967297},
	test_int64{fn: add_Neg1_int64, fnname: "add_Neg1_int64", in: -1, want: -2},
	test_int64{fn: add_int64_Neg1, fnname: "add_int64_Neg1", in: -1, want: -2},
	test_int64{fn: add_Neg1_int64, fnname: "add_Neg1_int64", in: 0, want: -1},
	test_int64{fn: add_int64_Neg1, fnname: "add_int64_Neg1", in: 0, want: -1},
	test_int64{fn: add_Neg1_int64, fnname: "add_Neg1_int64", in: 1, want: 0},
	test_int64{fn: add_int64_Neg1, fnname: "add_int64_Neg1", in: 1, want: 0},
	test_int64{fn: add_Neg1_int64, fnname: "add_Neg1_int64", in: 4294967296, want: 4294967295},
	test_int64{fn: add_int64_Neg1, fnname: "add_int64_Neg1", in: 4294967296, want: 4294967295},
	test_int64{fn: add_Neg1_int64, fnname: "add_Neg1_int64", in: 9223372036854775806, want: 9223372036854775805},
	test_int64{fn: add_int64_Neg1, fnname: "add_int64_Neg1", in: 9223372036854775806, want: 9223372036854775805},
	test_int64{fn: add_Neg1_int64, fnname: "add_Neg1_int64", in: 9223372036854775807, want: 9223372036854775806},
	test_int64{fn: add_int64_Neg1, fnname: "add_int64_Neg1", in: 9223372036854775807, want: 9223372036854775806},
	test_int64{fn: add_0_int64, fnname: "add_0_int64", in: -9223372036854775808, want: -9223372036854775808},
	test_int64{fn: add_int64_0, fnname: "add_int64_0", in: -9223372036854775808, want: -9223372036854775808},
	test_int64{fn: add_0_int64, fnname: "add_0_int64", in: -9223372036854775807, want: -9223372036854775807},
	test_int64{fn: add_int64_0, fnname: "add_int64_0", in: -9223372036854775807, want: -9223372036854775807},
	test_int64{fn: add_0_int64, fnname: "add_0_int64", in: -4294967296, want: -4294967296},
	test_int64{fn: add_int64_0, fnname: "add_int64_0", in: -4294967296, want: -4294967296},
	test_int64{fn: add_0_int64, fnname: "add_0_int64", in: -1, want: -1},
	test_int64{fn: add_int64_0, fnname: "add_int64_0", in: -1, want: -1},
	test_int64{fn: add_0_int64, fnname: "add_0_int64", in: 0, want: 0},
	test_int64{fn: add_int64_0, fnname: "add_int64_0", in: 0, want: 0},
	test_int64{fn: add_0_int64, fnname: "add_0_int64", in: 1, want: 1},
	test_int64{fn: add_int64_0, fnname: "add_int64_0", in: 1, want: 1},
	test_int64{fn: add_0_int64, fnname: "add_0_int64", in: 4294967296, want: 4294967296},
	test_int64{fn: add_int64_0, fnname: "add_int64_0", in: 4294967296, want: 4294967296},
	test_int64{fn: add_0_int64, fnname: "add_0_int64", in: 9223372036854775806, want: 9223372036854775806},
	test_int64{fn: add_int64_0, fnname: "add_int64_0", in: 9223372036854775806, want: 9223372036854775806},
	test_int64{fn: add_0_int64, fnname: "add_0_int64", in: 9223372036854775807, want: 9223372036854775807},
	test_int64{fn: add_int64_0, fnname: "add_int64_0", in: 9223372036854775807, want: 9223372036854775807},
	test_int64{fn: add_1_int64, fnname: "add_1_int64", in: -9223372036854775808, want: -9223372036854775807},
	test_int64{fn: add_int64_1, fnname: "add_int64_1", in: -9223372036854775808, want: -9223372036854775807},
	test_int64{fn: add_1_int64, fnname: "add_1_int64", in: -9223372036854775807, want: -9223372036854775806},
	test_int64{fn: add_int64_1, fnname: "add_int64_1", in: -9223372036854775807, want: -9223372036854775806},
	test_int64{fn: add_1_int64, fnname: "add_1_int64", in: -4294967296, want: -4294967295},
	test_int64{fn: add_int64_1, fnname: "add_int64_1", in: -4294967296, want: -4294967295},
	test_int64{fn: add_1_int64, fnname: "add_1_int64", in: -1, want: 0},
	test_int64{fn: add_int64_1, fnname: "add_int64_1", in: -1, want: 0},
	test_int64{fn: add_1_int64, fnname: "add_1_int64", in: 0, want: 1},
	test_int64{fn: add_int64_1, fnname: "add_int64_1", in: 0, want: 1},
	test_int64{fn: add_1_int64, fnname: "add_1_int64", in: 1, want: 2},
	test_int64{fn: add_int64_1, fnname: "add_int64_1", in: 1, want: 2},
	test_int64{fn: add_1_int64, fnname: "add_1_int64", in: 4294967296, want: 4294967297},
	test_int64{fn: add_int64_1, fnname: "add_int64_1", in: 4294967296, want: 4294967297},
	test_int64{fn: add_1_int64, fnname: "add_1_int64", in: 9223372036854775806, want: 9223372036854775807},
	test_int64{fn: add_int64_1, fnname: "add_int64_1", in: 9223372036854775806, want: 9223372036854775807},
	test_int64{fn: add_1_int64, fnname: "add_1_int64", in: 9223372036854775807, want: -9223372036854775808},
	test_int64{fn: add_int64_1, fnname: "add_int64_1", in: 9223372036854775807, want: -9223372036854775808},
	test_int64{fn: add_4294967296_int64, fnname: "add_4294967296_int64", in: -9223372036854775808, want: -9223372032559808512},
	test_int64{fn: add_int64_4294967296, fnname: "add_int64_4294967296", in: -9223372036854775808, want: -9223372032559808512},
	test_int64{fn: add_4294967296_int64, fnname: "add_4294967296_int64", in: -9223372036854775807, want: -9223372032559808511},
	test_int64{fn: add_int64_4294967296, fnname: "add_int64_4294967296", in: -9223372036854775807, want: -9223372032559808511},
	test_int64{fn: add_4294967296_int64, fnname: "add_4294967296_int64", in: -4294967296, want: 0},
	test_int64{fn: add_int64_4294967296, fnname: "add_int64_4294967296", in: -4294967296, want: 0},
	test_int64{fn: add_4294967296_int64, fnname: "add_4294967296_int64", in: -1, want: 4294967295},
	test_int64{fn: add_int64_4294967296, fnname: "add_int64_4294967296", in: -1, want: 4294967295},
	test_int64{fn: add_4294967296_int64, fnname: "add_4294967296_int64", in: 0, want: 4294967296},
	test_int64{fn: add_int64_4294967296, fnname: "add_int64_4294967296", in: 0, want: 4294967296},
	test_int64{fn: add_4294967296_int64, fnname: "add_4294967296_int64", in: 1, want: 4294967297},
	test_int64{fn: add_int64_4294967296, fnname: "add_int64_4294967296", in: 1, want: 4294967297},
	test_int64{fn: add_4294967296_int64, fnname: "add_4294967296_int64", in: 4294967296, want: 8589934592},
	test_int64{fn: add_int64_4294967296, fnname: "add_int64_4294967296", in: 4294967296, want: 8589934592},
	test_int64{fn: add_4294967296_int64, fnname: "add_4294967296_int64", in: 9223372036854775806, want: -9223372032559808514},
	test_int64{fn: add_int64_4294967296, fnname: "add_int64_4294967296", in: 9223372036854775806, want: -9223372032559808514},
	test_int64{fn: add_4294967296_int64, fnname: "add_4294967296_int64", in: 9223372036854775807, want: -9223372032559808513},
	test_int64{fn: add_int64_4294967296, fnname: "add_int64_4294967296", in: 9223372036854775807, want: -9223372032559808513},
	test_int64{fn: add_9223372036854775806_int64, fnname: "add_9223372036854775806_int64", in: -9223372036854775808, want: -2},
	test_int64{fn: add_int64_9223372036854775806, fnname: "add_int64_9223372036854775806", in: -9223372036854775808, want: -2},
	test_int64{fn: add_9223372036854775806_int64, fnname: "add_9223372036854775806_int64", in: -9223372036854775807, want: -1},
	test_int64{fn: add_int64_9223372036854775806, fnname: "add_int64_9223372036854775806", in: -9223372036854775807, want: -1},
	test_int64{fn: add_9223372036854775806_int64, fnname: "add_9223372036854775806_int64", in: -4294967296, want: 9223372032559808510},
	test_int64{fn: add_int64_9223372036854775806, fnname: "add_int64_9223372036854775806", in: -4294967296, want: 9223372032559808510},
	test_int64{fn: add_9223372036854775806_int64, fnname: "add_9223372036854775806_int64", in: -1, want: 9223372036854775805},
	test_int64{fn: add_int64_9223372036854775806, fnname: "add_int64_9223372036854775806", in: -1, want: 9223372036854775805},
	test_int64{fn: add_9223372036854775806_int64, fnname: "add_9223372036854775806_int64", in: 0, want: 9223372036854775806},
	test_int64{fn: add_int64_9223372036854775806, fnname: "add_int64_9223372036854775806", in: 0, want: 9223372036854775806},
	test_int64{fn: add_9223372036854775806_int64, fnname: "add_9223372036854775806_int64", in: 1, want: 9223372036854775807},
	test_int64{fn: add_int64_9223372036854775806, fnname: "add_int64_9223372036854775806", in: 1, want: 9223372036854775807},
	test_int64{fn: add_9223372036854775806_int64, fnname: "add_9223372036854775806_int64", in: 4294967296, want: -9223372032559808514},
	test_int64{fn: add_int64_9223372036854775806, fnname: "add_int64_9223372036854775806", in: 4294967296, want: -9223372032559808514},
	test_int64{fn: add_9223372036854775806_int64, fnname: "add_9223372036854775806_int64", in: 9223372036854775806, want: -4},
	test_int64{fn: add_int64_9223372036854775806, fnname: "add_int64_9223372036854775806", in: 9223372036854775806, want: -4},
	test_int64{fn: add_9223372036854775806_int64, fnname: "add_9223372036854775806_int64", in: 9223372036854775807, want: -3},
	test_int64{fn: add_int64_9223372036854775806, fnname: "add_int64_9223372036854775806", in: 9223372036854775807, want: -3},
	test_int64{fn: add_9223372036854775807_int64, fnname: "add_9223372036854775807_int64", in: -9223372036854775808, want: -1},
	test_int64{fn: add_int64_9223372036854775807, fnname: "add_int64_9223372036854775807", in: -9223372036854775808, want: -1},
	test_int64{fn: add_9223372036854775807_int64, fnname: "add_9223372036854775807_int64", in: -9223372036854775807, want: 0},
	test_int64{fn: add_int64_9223372036854775807, fnname: "add_int64_9223372036854775807", in: -9223372036854775807, want: 0},
	test_int64{fn: add_9223372036854775807_int64, fnname: "add_9223372036854775807_int64", in: -4294967296, want: 9223372032559808511},
	test_int64{fn: add_int64_9223372036854775807, fnname: "add_int64_9223372036854775807", in: -4294967296, want: 9223372032559808511},
	test_int64{fn: add_9223372036854775807_int64, fnname: "add_9223372036854775807_int64", in: -1, want: 9223372036854775806},
	test_int64{fn: add_int64_9223372036854775807, fnname: "add_int64_9223372036854775807", in: -1, want: 9223372036854775806},
	test_int64{fn: add_9223372036854775807_int64, fnname: "add_9223372036854775807_int64", in: 0, want: 9223372036854775807},
	test_int64{fn: add_int64_9223372036854775807, fnname: "add_int64_9223372036854775807", in: 0, want: 9223372036854775807},
	test_int64{fn: add_9223372036854775807_int64, fnname: "add_9223372036854775807_int64", in: 1, want: -9223372036854775808},
	test_int64{fn: add_int64_9223372036854775807, fnname: "add_int64_9223372036854775807", in: 1, want: -9223372036854775808},
	test_int64{fn: add_9223372036854775807_int64, fnname: "add_9223372036854775807_int64", in: 4294967296, want: -9223372032559808513},
	test_int64{fn: add_int64_9223372036854775807, fnname: "add_int64_9223372036854775807", in: 4294967296, want: -9223372032559808513},
	test_int64{fn: add_9223372036854775807_int64, fnname: "add_9223372036854775807_int64", in: 9223372036854775806, want: -3},
	test_int64{fn: add_int64_9223372036854775807, fnname: "add_int64_9223372036854775807", in: 9223372036854775806, want: -3},
	test_int64{fn: add_9223372036854775807_int64, fnname: "add_9223372036854775807_int64", in: 9223372036854775807, want: -2},
	test_int64{fn: add_int64_9223372036854775807, fnname: "add_int64_9223372036854775807", in: 9223372036854775807, want: -2},
	test_int64{fn: sub_Neg9223372036854775808_int64, fnname: "sub_Neg9223372036854775808_int64", in: -9223372036854775808, want: 0},
	test_int64{fn: sub_int64_Neg9223372036854775808, fnname: "sub_int64_Neg9223372036854775808", in: -9223372036854775808, want: 0},
	test_int64{fn: sub_Neg9223372036854775808_int64, fnname: "sub_Neg9223372036854775808_int64", in: -9223372036854775807, want: -1},
	test_int64{fn: sub_int64_Neg9223372036854775808, fnname: "sub_int64_Neg9223372036854775808", in: -9223372036854775807, want: 1},
	test_int64{fn: sub_Neg9223372036854775808_int64, fnname: "sub_Neg9223372036854775808_int64", in: -4294967296, want: -9223372032559808512},
	test_int64{fn: sub_int64_Neg9223372036854775808, fnname: "sub_int64_Neg9223372036854775808", in: -4294967296, want: 9223372032559808512},
	test_int64{fn: sub_Neg9223372036854775808_int64, fnname: "sub_Neg9223372036854775808_int64", in: -1, want: -9223372036854775807},
	test_int64{fn: sub_int64_Neg9223372036854775808, fnname: "sub_int64_Neg9223372036854775808", in: -1, want: 9223372036854775807},
	test_int64{fn: sub_Neg9223372036854775808_int64, fnname: "sub_Neg9223372036854775808_int64", in: 0, want: -9223372036854775808},
	test_int64{fn: sub_int64_Neg9223372036854775808, fnname: "sub_int64_Neg9223372036854775808", in: 0, want: -9223372036854775808},
	test_int64{fn: sub_Neg9223372036854775808_int64, fnname: "sub_Neg9223372036854775808_int64", in: 1, want: 9223372036854775807},
	test_int64{fn: sub_int64_Neg9223372036854775808, fnname: "sub_int64_Neg9223372036854775808", in: 1, want: -9223372036854775807},
	test_int64{fn: sub_Neg9223372036854775808_int64, fnname: "sub_Neg9223372036854775808_int64", in: 4294967296, want: 9223372032559808512},
	test_int64{fn: sub_int64_Neg9223372036854775808, fnname: "sub_int64_Neg9223372036854775808", in: 4294967296, want: -9223372032559808512},
	test_int64{fn: sub_Neg9223372036854775808_int64, fnname: "sub_Neg9223372036854775808_int64", in: 9223372036854775806, want: 2},
	test_int64{fn: sub_int64_Neg9223372036854775808, fnname: "sub_int64_Neg9223372036854775808", in: 9223372036854775806, want: -2},
	test_int64{fn: sub_Neg9223372036854775808_int64, fnname: "sub_Neg9223372036854775808_int64", in: 9223372036854775807, want: 1},
	test_int64{fn: sub_int64_Neg9223372036854775808, fnname: "sub_int64_Neg9223372036854775808", in: 9223372036854775807, want: -1},
	test_int64{fn: sub_Neg9223372036854775807_int64, fnname: "sub_Neg9223372036854775807_int64", in: -9223372036854775808, want: 1},
	test_int64{fn: sub_int64_Neg9223372036854775807, fnname: "sub_int64_Neg9223372036854775807", in: -9223372036854775808, want: -1},
	test_int64{fn: sub_Neg9223372036854775807_int64, fnname: "sub_Neg9223372036854775807_int64", in: -9223372036854775807, want: 0},
	test_int64{fn: sub_int64_Neg9223372036854775807, fnname: "sub_int64_Neg9223372036854775807", in: -9223372036854775807, want: 0},
	test_int64{fn: sub_Neg9223372036854775807_int64, fnname: "sub_Neg9223372036854775807_int64", in: -4294967296, want: -9223372032559808511},
	test_int64{fn: sub_int64_Neg9223372036854775807, fnname: "sub_int64_Neg9223372036854775807", in: -4294967296, want: 9223372032559808511},
	test_int64{fn: sub_Neg9223372036854775807_int64, fnname: "sub_Neg9223372036854775807_int64", in: -1, want: -9223372036854775806},
	test_int64{fn: sub_int64_Neg9223372036854775807, fnname: "sub_int64_Neg9223372036854775807", in: -1, want: 9223372036854775806},
	test_int64{fn: sub_Neg9223372036854775807_int64, fnname: "sub_Neg9223372036854775807_int64", in: 0, want: -9223372036854775807},
	test_int64{fn: sub_int64_Neg9223372036854775807, fnname: "sub_int64_Neg9223372036854775807", in: 0, want: 9223372036854775807},
	test_int64{fn: sub_Neg9223372036854775807_int64, fnname: "sub_Neg9223372036854775807_int64", in: 1, want: -9223372036854775808},
	test_int64{fn: sub_int64_Neg9223372036854775807, fnname: "sub_int64_Neg9223372036854775807", in: 1, want: -9223372036854775808},
	test_int64{fn: sub_Neg9223372036854775807_int64, fnname: "sub_Neg9223372036854775807_int64", in: 4294967296, want: 9223372032559808513},
	test_int64{fn: sub_int64_Neg9223372036854775807, fnname: "sub_int64_Neg9223372036854775807", in: 4294967296, want: -9223372032559808513},
	test_int64{fn: sub_Neg9223372036854775807_int64, fnname: "sub_Neg9223372036854775807_int64", in: 9223372036854775806, want: 3},
	test_int64{fn: sub_int64_Neg9223372036854775807, fnname: "sub_int64_Neg9223372036854775807", in: 9223372036854775806, want: -3},
	test_int64{fn: sub_Neg9223372036854775807_int64, fnname: "sub_Neg9223372036854775807_int64", in: 9223372036854775807, want: 2},
	test_int64{fn: sub_int64_Neg9223372036854775807, fnname: "sub_int64_Neg9223372036854775807", in: 9223372036854775807, want: -2},
	test_int64{fn: sub_Neg4294967296_int64, fnname: "sub_Neg4294967296_int64", in: -9223372036854775808, want: 9223372032559808512},
	test_int64{fn: sub_int64_Neg4294967296, fnname: "sub_int64_Neg4294967296", in: -9223372036854775808, want: -9223372032559808512},
	test_int64{fn: sub_Neg4294967296_int64, fnname: "sub_Neg4294967296_int64", in: -9223372036854775807, want: 9223372032559808511},
	test_int64{fn: sub_int64_Neg4294967296, fnname: "sub_int64_Neg4294967296", in: -9223372036854775807, want: -9223372032559808511},
	test_int64{fn: sub_Neg4294967296_int64, fnname: "sub_Neg4294967296_int64", in: -4294967296, want: 0},
	test_int64{fn: sub_int64_Neg4294967296, fnname: "sub_int64_Neg4294967296", in: -4294967296, want: 0},
	test_int64{fn: sub_Neg4294967296_int64, fnname: "sub_Neg4294967296_int64", in: -1, want: -4294967295},
	test_int64{fn: sub_int64_Neg4294967296, fnname: "sub_int64_Neg4294967296", in: -1, want: 4294967295},
	test_int64{fn: sub_Neg4294967296_int64, fnname: "sub_Neg4294967296_int64", in: 0, want: -4294967296},
	test_int64{fn: sub_int64_Neg4294967296, fnname: "sub_int64_Neg4294967296", in: 0, want: 4294967296},
	test_int64{fn: sub_Neg4294967296_int64, fnname: "sub_Neg4294967296_int64", in: 1, want: -4294967297},
	test_int64{fn: sub_int64_Neg4294967296, fnname: "sub_int64_Neg4294967296", in: 1, want: 4294967297},
	test_int64{fn: sub_Neg4294967296_int64, fnname: "sub_Neg4294967296_int64", in: 4294967296, want: -8589934592},
	test_int64{fn: sub_int64_Neg4294967296, fnname: "sub_int64_Neg4294967296", in: 4294967296, want: 8589934592},
	test_int64{fn: sub_Neg4294967296_int64, fnname: "sub_Neg4294967296_int64", in: 9223372036854775806, want: 9223372032559808514},
	test_int64{fn: sub_int64_Neg4294967296, fnname: "sub_int64_Neg4294967296", in: 9223372036854775806, want: -9223372032559808514},
	test_int64{fn: sub_Neg4294967296_int64, fnname: "sub_Neg4294967296_int64", in: 9223372036854775807, want: 9223372032559808513},
	test_int64{fn: sub_int64_Neg4294967296, fnname: "sub_int64_Neg4294967296", in: 9223372036854775807, want: -9223372032559808513},
	test_int64{fn: sub_Neg1_int64, fnname: "sub_Neg1_int64", in: -9223372036854775808, want: 9223372036854775807},
	test_int64{fn: sub_int64_Neg1, fnname: "sub_int64_Neg1", in: -9223372036854775808, want: -9223372036854775807},
	test_int64{fn: sub_Neg1_int64, fnname: "sub_Neg1_int64", in: -9223372036854775807, want: 9223372036854775806},
	test_int64{fn: sub_int64_Neg1, fnname: "sub_int64_Neg1", in: -9223372036854775807, want: -9223372036854775806},
	test_int64{fn: sub_Neg1_int64, fnname: "sub_Neg1_int64", in: -4294967296, want: 4294967295},
	test_int64{fn: sub_int64_Neg1, fnname: "sub_int64_Neg1", in: -4294967296, want: -4294967295},
	test_int64{fn: sub_Neg1_int64, fnname: "sub_Neg1_int64", in: -1, want: 0},
	test_int64{fn: sub_int64_Neg1, fnname: "sub_int64_Neg1", in: -1, want: 0},
	test_int64{fn: sub_Neg1_int64, fnname: "sub_Neg1_int64", in: 0, want: -1},
	test_int64{fn: sub_int64_Neg1, fnname: "sub_int64_Neg1", in: 0, want: 1},
	test_int64{fn: sub_Neg1_int64, fnname: "sub_Neg1_int64", in: 1, want: -2},
	test_int64{fn: sub_int64_Neg1, fnname: "sub_int64_Neg1", in: 1, want: 2},
	test_int64{fn: sub_Neg1_int64, fnname: "sub_Neg1_int64", in: 4294967296, want: -4294967297},
	test_int64{fn: sub_int64_Neg1, fnname: "sub_int64_Neg1", in: 4294967296, want: 4294967297},
	test_int64{fn: sub_Neg1_int64, fnname: "sub_Neg1_int64", in: 9223372036854775806, want: -9223372036854775807},
	test_int64{fn: sub_int64_Neg1, fnname: "sub_int64_Neg1", in: 9223372036854775806, want: 9223372036854775807},
	test_int64{fn: sub_Neg1_int64, fnname: "sub_Neg1_int64", in: 9223372036854775807, want: -9223372036854775808},
	test_int64{fn: sub_int64_Neg1, fnname: "sub_int64_Neg1", in: 9223372036854775807, want: -9223372036854775808},
	test_int64{fn: sub_0_int64, fnname: "sub_0_int64", in: -9223372036854775808, want: -9223372036854775808},
	test_int64{fn: sub_int64_0, fnname: "sub_int64_0", in: -9223372036854775808, want: -9223372036854775808},
	test_int64{fn: sub_0_int64, fnname: "sub_0_int64", in: -9223372036854775807, want: 9223372036854775807},
	test_int64{fn: sub_int64_0, fnname: "sub_int64_0", in: -9223372036854775807, want: -9223372036854775807},
	test_int64{fn: sub_0_int64, fnname: "sub_0_int64", in: -4294967296, want: 4294967296},
	test_int64{fn: sub_int64_0, fnname: "sub_int64_0", in: -4294967296, want: -4294967296},
	test_int64{fn: sub_0_int64, fnname: "sub_0_int64", in: -1, want: 1},
	test_int64{fn: sub_int64_0, fnname: "sub_int64_0", in: -1, want: -1},
	test_int64{fn: sub_0_int64, fnname: "sub_0_int64", in: 0, want: 0},
	test_int64{fn: sub_int64_0, fnname: "sub_int64_0", in: 0, want: 0},
	test_int64{fn: sub_0_int64, fnname: "sub_0_int64", in: 1, want: -1},
	test_int64{fn: sub_int64_0, fnname: "sub_int64_0", in: 1, want: 1},
	test_int64{fn: sub_0_int64, fnname: "sub_0_int64", in: 4294967296, want: -4294967296},
	test_int64{fn: sub_int64_0, fnname: "sub_int64_0", in: 4294967296, want: 4294967296},
	test_int64{fn: sub_0_int64, fnname: "sub_0_int64", in: 9223372036854775806, want: -9223372036854775806},
	test_int64{fn: sub_int64_0, fnname: "sub_int64_0", in: 9223372036854775806, want: 9223372036854775806},
	test_int64{fn: sub_0_int64, fnname: "sub_0_int64", in: 9223372036854775807, want: -9223372036854775807},
	test_int64{fn: sub_int64_0, fnname: "sub_int64_0", in: 9223372036854775807, want: 9223372036854775807},
	test_int64{fn: sub_1_int64, fnname: "sub_1_int64", in: -9223372036854775808, want: -9223372036854775807},
	test_int64{fn: sub_int64_1, fnname: "sub_int64_1", in: -9223372036854775808, want: 9223372036854775807},
	test_int64{fn: sub_1_int64, fnname: "sub_1_int64", in: -9223372036854775807, want: -9223372036854775808},
	test_int64{fn: sub_int64_1, fnname: "sub_int64_1", in: -9223372036854775807, want: -9223372036854775808},
	test_int64{fn: sub_1_int64, fnname: "sub_1_int64", in: -4294967296, want: 4294967297},
	test_int64{fn: sub_int64_1, fnname: "sub_int64_1", in: -4294967296, want: -4294967297},
	test_int64{fn: sub_1_int64, fnname: "sub_1_int64", in: -1, want: 2},
	test_int64{fn: sub_int64_1, fnname: "sub_int64_1", in: -1, want: -2},
	test_int64{fn: sub_1_int64, fnname: "sub_1_int64", in: 0, want: 1},
	test_int64{fn: sub_int64_1, fnname: "sub_int64_1", in: 0, want: -1},
	test_int64{fn: sub_1_int64, fnname: "sub_1_int64", in: 1, want: 0},
	test_int64{fn: sub_int64_1, fnname: "sub_int64_1", in: 1, want: 0},
	test_int64{fn: sub_1_int64, fnname: "sub_1_int64", in: 4294967296, want: -4294967295},
	test_int64{fn: sub_int64_1, fnname: "sub_int64_1", in: 4294967296, want: 4294967295},
	test_int64{fn: sub_1_int64, fnname: "sub_1_int64", in: 9223372036854775806, want: -9223372036854775805},
	test_int64{fn: sub_int64_1, fnname: "sub_int64_1", in: 9223372036854775806, want: 9223372036854775805},
	test_int64{fn: sub_1_int64, fnname: "sub_1_int64", in: 9223372036854775807, want: -9223372036854775806},
	test_int64{fn: sub_int64_1, fnname: "sub_int64_1", in: 9223372036854775807, want: 9223372036854775806},
	test_int64{fn: sub_4294967296_int64, fnname: "sub_4294967296_int64", in: -9223372036854775808, want: -9223372032559808512},
	test_int64{fn: sub_int64_4294967296, fnname: "sub_int64_4294967296", in: -9223372036854775808, want: 9223372032559808512},
	test_int64{fn: sub_4294967296_int64, fnname: "sub_4294967296_int64", in: -9223372036854775807, want: -9223372032559808513},
	test_int64{fn: sub_int64_4294967296, fnname: "sub_int64_4294967296", in: -9223372036854775807, want: 9223372032559808513},
	test_int64{fn: sub_4294967296_int64, fnname: "sub_4294967296_int64", in: -4294967296, want: 8589934592},
	test_int64{fn: sub_int64_4294967296, fnname: "sub_int64_4294967296", in: -4294967296, want: -8589934592},
	test_int64{fn: sub_4294967296_int64, fnname: "sub_4294967296_int64", in: -1, want: 4294967297},
	test_int64{fn: sub_int64_4294967296, fnname: "sub_int64_4294967296", in: -1, want: -4294967297},
	test_int64{fn: sub_4294967296_int64, fnname: "sub_4294967296_int64", in: 0, want: 4294967296},
	test_int64{fn: sub_int64_4294967296, fnname: "sub_int64_4294967296", in: 0, want: -4294967296},
	test_int64{fn: sub_4294967296_int64, fnname: "sub_4294967296_int64", in: 1, want: 4294967295},
	test_int64{fn: sub_int64_4294967296, fnname: "sub_int64_4294967296", in: 1, want: -4294967295},
	test_int64{fn: sub_4294967296_int64, fnname: "sub_4294967296_int64", in: 4294967296, want: 0},
	test_int64{fn: sub_int64_4294967296, fnname: "sub_int64_4294967296", in: 4294967296, want: 0},
	test_int64{fn: sub_4294967296_int64, fnname: "sub_4294967296_int64", in: 9223372036854775806, want: -9223372032559808510},
	test_int64{fn: sub_int64_4294967296, fnname: "sub_int64_4294967296", in: 9223372036854775806, want: 9223372032559808510},
	test_int64{fn: sub_4294967296_int64, fnname: "sub_4294967296_int64", in: 9223372036854775807, want: -9223372032559808511},
	test_int64{fn: sub_int64_4294967296, fnname: "sub_int64_4294967296", in: 9223372036854775807, want: 9223372032559808511},
	test_int64{fn: sub_9223372036854775806_int64, fnname: "sub_9223372036854775806_int64", in: -9223372036854775808, want: -2},
	test_int64{fn: sub_int64_9223372036854775806, fnname: "sub_int64_9223372036854775806", in: -9223372036854775808, want: 2},
	test_int64{fn: sub_9223372036854775806_int64, fnname: "sub_9223372036854775806_int64", in: -9223372036854775807, want: -3},
	test_int64{fn: sub_int64_9223372036854775806, fnname: "sub_int64_9223372036854775806", in: -9223372036854775807, want: 3},
	test_int64{fn: sub_9223372036854775806_int64, fnname: "sub_9223372036854775806_int64", in: -4294967296, want: -9223372032559808514},
	test_int64{fn: sub_int64_9223372036854775806, fnname: "sub_int64_9223372036854775806", in: -4294967296, want: 9223372032559808514},
	test_int64{fn: sub_9223372036854775806_int64, fnname: "sub_9223372036854775806_int64", in: -1, want: 9223372036854775807},
	test_int64{fn: sub_int64_9223372036854775806, fnname: "sub_int64_9223372036854775806", in: -1, want: -9223372036854775807},
	test_int64{fn: sub_9223372036854775806_int64, fnname: "sub_9223372036854775806_int64", in: 0, want: 9223372036854775806},
	test_int64{fn: sub_int64_9223372036854775806, fnname: "sub_int64_9223372036854775806", in: 0, want: -9223372036854775806},
	test_int64{fn: sub_9223372036854775806_int64, fnname: "sub_9223372036854775806_int64", in: 1, want: 9223372036854775805},
	test_int64{fn: sub_int64_9223372036854775806, fnname: "sub_int64_9223372036854775806", in: 1, want: -9223372036854775805},
	test_int64{fn: sub_9223372036854775806_int64, fnname: "sub_9223372036854775806_int64", in: 4294967296, want: 9223372032559808510},
	test_int64{fn: sub_int64_9223372036854775806, fnname: "sub_int64_9223372036854775806", in: 4294967296, want: -9223372032559808510},
	test_int64{fn: sub_9223372036854775806_int64, fnname: "sub_9223372036854775806_int64", in: 9223372036854775806, want: 0},
	test_int64{fn: sub_int64_9223372036854775806, fnname: "sub_int64_9223372036854775806", in: 9223372036854775806, want: 0},
	test_int64{fn: sub_9223372036854775806_int64, fnname: "sub_9223372036854775806_int64", in: 9223372036854775807, want: -1},
	test_int64{fn: sub_int64_9223372036854775806, fnname: "sub_int64_9223372036854775806", in: 9223372036854775807, want: 1},
	test_int64{fn: sub_9223372036854775807_int64, fnname: "sub_9223372036854775807_int64", in: -9223372036854775808, want: -1},
	test_int64{fn: sub_int64_9223372036854775807, fnname: "sub_int64_9223372036854775807", in: -9223372036854775808, want: 1},
	test_int64{fn: sub_9223372036854775807_int64, fnname: "sub_9223372036854775807_int64", in: -9223372036854775807, want: -2},
	test_int64{fn: sub_int64_9223372036854775807, fnname: "sub_int64_9223372036854775807", in: -9223372036854775807, want: 2},
	test_int64{fn: sub_9223372036854775807_int64, fnname: "sub_9223372036854775807_int64", in: -4294967296, want: -9223372032559808513},
	test_int64{fn: sub_int64_9223372036854775807, fnname: "sub_int64_9223372036854775807", in: -4294967296, want: 9223372032559808513},
	test_int64{fn: sub_9223372036854775807_int64, fnname: "sub_9223372036854775807_int64", in: -1, want: -9223372036854775808},
	test_int64{fn: sub_int64_9223372036854775807, fnname: "sub_int64_9223372036854775807", in: -1, want: -9223372036854775808},
	test_int64{fn: sub_9223372036854775807_int64, fnname: "sub_9223372036854775807_int64", in: 0, want: 9223372036854775807},
	test_int64{fn: sub_int64_9223372036854775807, fnname: "sub_int64_9223372036854775807", in: 0, want: -9223372036854775807},
	test_int64{fn: sub_9223372036854775807_int64, fnname: "sub_9223372036854775807_int64", in: 1, want: 9223372036854775806},
	test_int64{fn: sub_int64_9223372036854775807, fnname: "sub_int64_9223372036854775807", in: 1, want: -9223372036854775806},
	test_int64{fn: sub_9223372036854775807_int64, fnname: "sub_9223372036854775807_int64", in: 4294967296, want: 9223372032559808511},
	test_int64{fn: sub_int64_9223372036854775807, fnname: "sub_int64_9223372036854775807", in: 4294967296, want: -9223372032559808511},
	test_int64{fn: sub_9223372036854775807_int64, fnname: "sub_9223372036854775807_int64", in: 9223372036854775806, want: 1},
	test_int64{fn: sub_int64_9223372036854775807, fnname: "sub_int64_9223372036854775807", in: 9223372036854775806, want: -1},
	test_int64{fn: sub_9223372036854775807_int64, fnname: "sub_9223372036854775807_int64", in: 9223372036854775807, want: 0},
	test_int64{fn: sub_int64_9223372036854775807, fnname: "sub_int64_9223372036854775807", in: 9223372036854775807, want: 0},
	test_int64{fn: div_Neg9223372036854775808_int64, fnname: "div_Neg9223372036854775808_int64", in: -9223372036854775808, want: 1},
	test_int64{fn: div_int64_Neg9223372036854775808, fnname: "div_int64_Neg9223372036854775808", in: -9223372036854775808, want: 1},
	test_int64{fn: div_Neg9223372036854775808_int64, fnname: "div_Neg9223372036854775808_int64", in: -9223372036854775807, want: 1},
	test_int64{fn: div_int64_Neg9223372036854775808, fnname: "div_int64_Neg9223372036854775808", in: -9223372036854775807, want: 0},
	test_int64{fn: div_Neg9223372036854775808_int64, fnname: "div_Neg9223372036854775808_int64", in: -4294967296, want: 2147483648},
	test_int64{fn: div_int64_Neg9223372036854775808, fnname: "div_int64_Neg9223372036854775808", in: -4294967296, want: 0},
	test_int64{fn: div_Neg9223372036854775808_int64, fnname: "div_Neg9223372036854775808_int64", in: -1, want: -9223372036854775808},
	test_int64{fn: div_int64_Neg9223372036854775808, fnname: "div_int64_Neg9223372036854775808", in: -1, want: 0},
	test_int64{fn: div_int64_Neg9223372036854775808, fnname: "div_int64_Neg9223372036854775808", in: 0, want: 0},
	test_int64{fn: div_Neg9223372036854775808_int64, fnname: "div_Neg9223372036854775808_int64", in: 1, want: -9223372036854775808},
	test_int64{fn: div_int64_Neg9223372036854775808, fnname: "div_int64_Neg9223372036854775808", in: 1, want: 0},
	test_int64{fn: div_Neg9223372036854775808_int64, fnname: "div_Neg9223372036854775808_int64", in: 4294967296, want: -2147483648},
	test_int64{fn: div_int64_Neg9223372036854775808, fnname: "div_int64_Neg9223372036854775808", in: 4294967296, want: 0},
	test_int64{fn: div_Neg9223372036854775808_int64, fnname: "div_Neg9223372036854775808_int64", in: 9223372036854775806, want: -1},
	test_int64{fn: div_int64_Neg9223372036854775808, fnname: "div_int64_Neg9223372036854775808", in: 9223372036854775806, want: 0},
	test_int64{fn: div_Neg9223372036854775808_int64, fnname: "div_Neg9223372036854775808_int64", in: 9223372036854775807, want: -1},
	test_int64{fn: div_int64_Neg9223372036854775808, fnname: "div_int64_Neg9223372036854775808", in: 9223372036854775807, want: 0},
	test_int64{fn: div_Neg9223372036854775807_int64, fnname: "div_Neg9223372036854775807_int64", in: -9223372036854775808, want: 0},
	test_int64{fn: div_int64_Neg9223372036854775807, fnname: "div_int64_Neg9223372036854775807", in: -9223372036854775808, want: 1},
	test_int64{fn: div_Neg9223372036854775807_int64, fnname: "div_Neg9223372036854775807_int64", in: -9223372036854775807, want: 1},
	test_int64{fn: div_int64_Neg9223372036854775807, fnname: "div_int64_Neg9223372036854775807", in: -9223372036854775807, want: 1},
	test_int64{fn: div_Neg9223372036854775807_int64, fnname: "div_Neg9223372036854775807_int64", in: -4294967296, want: 2147483647},
	test_int64{fn: div_int64_Neg9223372036854775807, fnname: "div_int64_Neg9223372036854775807", in: -4294967296, want: 0},
	test_int64{fn: div_Neg9223372036854775807_int64, fnname: "div_Neg9223372036854775807_int64", in: -1, want: 9223372036854775807},
	test_int64{fn: div_int64_Neg9223372036854775807, fnname: "div_int64_Neg9223372036854775807", in: -1, want: 0},
	test_int64{fn: div_int64_Neg9223372036854775807, fnname: "div_int64_Neg9223372036854775807", in: 0, want: 0},
	test_int64{fn: div_Neg9223372036854775807_int64, fnname: "div_Neg9223372036854775807_int64", in: 1, want: -9223372036854775807},
	test_int64{fn: div_int64_Neg9223372036854775807, fnname: "div_int64_Neg9223372036854775807", in: 1, want: 0},
	test_int64{fn: div_Neg9223372036854775807_int64, fnname: "div_Neg9223372036854775807_int64", in: 4294967296, want: -2147483647},
	test_int64{fn: div_int64_Neg9223372036854775807, fnname: "div_int64_Neg9223372036854775807", in: 4294967296, want: 0},
	test_int64{fn: div_Neg9223372036854775807_int64, fnname: "div_Neg9223372036854775807_int64", in: 9223372036854775806, want: -1},
	test_int64{fn: div_int64_Neg9223372036854775807, fnname: "div_int64_Neg9223372036854775807", in: 9223372036854775806, want: 0},
	test_int64{fn: div_Neg9223372036854775807_int64, fnname: "div_Neg9223372036854775807_int64", in: 9223372036854775807, want: -1},
	test_int64{fn: div_int64_Neg9223372036854775807, fnname: "div_int64_Neg9223372036854775807", in: 9223372036854775807, want: -1},
	test_int64{fn: div_Neg4294967296_int64, fnname: "div_Neg4294967296_int64", in: -9223372036854775808, want: 0},
	test_int64{fn: div_int64_Neg4294967296, fnname: "div_int64_Neg4294967296", in: -9223372036854775808, want: 2147483648},
	test_int64{fn: div_Neg4294967296_int64, fnname: "div_Neg4294967296_int64", in: -9223372036854775807, want: 0},
	test_int64{fn: div_int64_Neg4294967296, fnname: "div_int64_Neg4294967296", in: -9223372036854775807, want: 2147483647},
	test_int64{fn: div_Neg4294967296_int64, fnname: "div_Neg4294967296_int64", in: -4294967296, want: 1},
	test_int64{fn: div_int64_Neg4294967296, fnname: "div_int64_Neg4294967296", in: -4294967296, want: 1},
	test_int64{fn: div_Neg4294967296_int64, fnname: "div_Neg4294967296_int64", in: -1, want: 4294967296},
	test_int64{fn: div_int64_Neg4294967296, fnname: "div_int64_Neg4294967296", in: -1, want: 0},
	test_int64{fn: div_int64_Neg4294967296, fnname: "div_int64_Neg4294967296", in: 0, want: 0},
	test_int64{fn: div_Neg4294967296_int64, fnname: "div_Neg4294967296_int64", in: 1, want: -4294967296},
	test_int64{fn: div_int64_Neg4294967296, fnname: "div_int64_Neg4294967296", in: 1, want: 0},
	test_int64{fn: div_Neg4294967296_int64, fnname: "div_Neg4294967296_int64", in: 4294967296, want: -1},
	test_int64{fn: div_int64_Neg4294967296, fnname: "div_int64_Neg4294967296", in: 4294967296, want: -1},
	test_int64{fn: div_Neg4294967296_int64, fnname: "div_Neg4294967296_int64", in: 9223372036854775806, want: 0},
	test_int64{fn: div_int64_Neg4294967296, fnname: "div_int64_Neg4294967296", in: 9223372036854775806, want: -2147483647},
	test_int64{fn: div_Neg4294967296_int64, fnname: "div_Neg4294967296_int64", in: 9223372036854775807, want: 0},
	test_int64{fn: div_int64_Neg4294967296, fnname: "div_int64_Neg4294967296", in: 9223372036854775807, want: -2147483647},
	test_int64{fn: div_Neg1_int64, fnname: "div_Neg1_int64", in: -9223372036854775808, want: 0},
	test_int64{fn: div_int64_Neg1, fnname: "div_int64_Neg1", in: -9223372036854775808, want: -9223372036854775808},
	test_int64{fn: div_Neg1_int64, fnname: "div_Neg1_int64", in: -9223372036854775807, want: 0},
	test_int64{fn: div_int64_Neg1, fnname: "div_int64_Neg1", in: -9223372036854775807, want: 9223372036854775807},
	test_int64{fn: div_Neg1_int64, fnname: "div_Neg1_int64", in: -4294967296, want: 0},
	test_int64{fn: div_int64_Neg1, fnname: "div_int64_Neg1", in: -4294967296, want: 4294967296},
	test_int64{fn: div_Neg1_int64, fnname: "div_Neg1_int64", in: -1, want: 1},
	test_int64{fn: div_int64_Neg1, fnname: "div_int64_Neg1", in: -1, want: 1},
	test_int64{fn: div_int64_Neg1, fnname: "div_int64_Neg1", in: 0, want: 0},
	test_int64{fn: div_Neg1_int64, fnname: "div_Neg1_int64", in: 1, want: -1},
	test_int64{fn: div_int64_Neg1, fnname: "div_int64_Neg1", in: 1, want: -1},
	test_int64{fn: div_Neg1_int64, fnname: "div_Neg1_int64", in: 4294967296, want: 0},
	test_int64{fn: div_int64_Neg1, fnname: "div_int64_Neg1", in: 4294967296, want: -4294967296},
	test_int64{fn: div_Neg1_int64, fnname: "div_Neg1_int64", in: 9223372036854775806, want: 0},
	test_int64{fn: div_int64_Neg1, fnname: "div_int64_Neg1", in: 9223372036854775806, want: -9223372036854775806},
	test_int64{fn: div_Neg1_int64, fnname: "div_Neg1_int64", in: 9223372036854775807, want: 0},
	test_int64{fn: div_int64_Neg1, fnname: "div_int64_Neg1", in: 9223372036854775807, want: -9223372036854775807},
	test_int64{fn: div_0_int64, fnname: "div_0_int64", in: -9223372036854775808, want: 0},
	test_int64{fn: div_0_int64, fnname: "div_0_int64", in: -9223372036854775807, want: 0},
	test_int64{fn: div_0_int64, fnname: "div_0_int64", in: -4294967296, want: 0},
	test_int64{fn: div_0_int64, fnname: "div_0_int64", in: -1, want: 0},
	test_int64{fn: div_0_int64, fnname: "div_0_int64", in: 1, want: 0},
	test_int64{fn: div_0_int64, fnname: "div_0_int64", in: 4294967296, want: 0},
	test_int64{fn: div_0_int64, fnname: "div_0_int64", in: 9223372036854775806, want: 0},
	test_int64{fn: div_0_int64, fnname: "div_0_int64", in: 9223372036854775807, want: 0},
	test_int64{fn: div_1_int64, fnname: "div_1_int64", in: -9223372036854775808, want: 0},
	test_int64{fn: div_int64_1, fnname: "div_int64_1", in: -9223372036854775808, want: -9223372036854775808},
	test_int64{fn: div_1_int64, fnname: "div_1_int64", in: -9223372036854775807, want: 0},
	test_int64{fn: div_int64_1, fnname: "div_int64_1", in: -9223372036854775807, want: -9223372036854775807},
	test_int64{fn: div_1_int64, fnname: "div_1_int64", in: -4294967296, want: 0},
	test_int64{fn: div_int64_1, fnname: "div_int64_1", in: -4294967296, want: -4294967296},
	test_int64{fn: div_1_int64, fnname: "div_1_int64", in: -1, want: -1},
	test_int64{fn: div_int64_1, fnname: "div_int64_1", in: -1, want: -1},
	test_int64{fn: div_int64_1, fnname: "div_int64_1", in: 0, want: 0},
	test_int64{fn: div_1_int64, fnname: "div_1_int64", in: 1, want: 1},
	test_int64{fn: div_int64_1, fnname: "div_int64_1", in: 1, want: 1},
	test_int64{fn: div_1_int64, fnname: "div_1_int64", in: 4294967296, want: 0},
	test_int64{fn: div_int64_1, fnname: "div_int64_1", in: 4294967296, want: 4294967296},
	test_int64{fn: div_1_int64, fnname: "div_1_int64", in: 9223372036854775806, want: 0},
	test_int64{fn: div_int64_1, fnname: "div_int64_1", in: 9223372036854775806, want: 9223372036854775806},
	test_int64{fn: div_1_int64, fnname: "div_1_int64", in: 9223372036854775807, want: 0},
	test_int64{fn: div_int64_1, fnname: "div_int64_1", in: 9223372036854775807, want: 9223372036854775807},
	test_int64{fn: div_4294967296_int64, fnname: "div_4294967296_int64", in: -9223372036854775808, want: 0},
	test_int64{fn: div_int64_4294967296, fnname: "div_int64_4294967296", in: -9223372036854775808, want: -2147483648},
	test_int64{fn: div_4294967296_int64, fnname: "div_4294967296_int64", in: -9223372036854775807, want: 0},
	test_int64{fn: div_int64_4294967296, fnname: "div_int64_4294967296", in: -9223372036854775807, want: -2147483647},
	test_int64{fn: div_4294967296_int64, fnname: "div_4294967296_int64", in: -4294967296, want: -1},
	test_int64{fn: div_int64_4294967296, fnname: "div_int64_4294967296", in: -4294967296, want: -1},
	test_int64{fn: div_4294967296_int64, fnname: "div_4294967296_int64", in: -1, want: -4294967296},
	test_int64{fn: div_int64_4294967296, fnname: "div_int64_4294967296", in: -1, want: 0},
	test_int64{fn: div_int64_4294967296, fnname: "div_int64_4294967296", in: 0, want: 0},
	test_int64{fn: div_4294967296_int64, fnname: "div_4294967296_int64", in: 1, want: 4294967296},
	test_int64{fn: div_int64_4294967296, fnname: "div_int64_4294967296", in: 1, want: 0},
	test_int64{fn: div_4294967296_int64, fnname: "div_4294967296_int64", in: 4294967296, want: 1},
	test_int64{fn: div_int64_4294967296, fnname: "div_int64_4294967296", in: 4294967296, want: 1},
	test_int64{fn: div_4294967296_int64, fnname: "div_4294967296_int64", in: 9223372036854775806, want: 0},
	test_int64{fn: div_int64_4294967296, fnname: "div_int64_4294967296", in: 9223372036854775806, want: 2147483647},
	test_int64{fn: div_4294967296_int64, fnname: "div_4294967296_int64", in: 9223372036854775807, want: 0},
	test_int64{fn: div_int64_4294967296, fnname: "div_int64_4294967296", in: 9223372036854775807, want: 2147483647},
	test_int64{fn: div_9223372036854775806_int64, fnname: "div_9223372036854775806_int64", in: -9223372036854775808, want: 0},
	test_int64{fn: div_int64_9223372036854775806, fnname: "div_int64_9223372036854775806", in: -9223372036854775808, want: -1},
	test_int64{fn: div_9223372036854775806_int64, fnname: "div_9223372036854775806_int64", in: -9223372036854775807, want: 0},
	test_int64{fn: div_int64_9223372036854775806, fnname: "div_int64_9223372036854775806", in: -9223372036854775807, want: -1},
	test_int64{fn: div_9223372036854775806_int64, fnname: "div_9223372036854775806_int64", in: -4294967296, want: -2147483647},
	test_int64{fn: div_int64_9223372036854775806, fnname: "div_int64_9223372036854775806", in: -4294967296, want: 0},
	test_int64{fn: div_9223372036854775806_int64, fnname: "div_9223372036854775806_int64", in: -1, want: -9223372036854775806},
	test_int64{fn: div_int64_9223372036854775806, fnname: "div_int64_9223372036854775806", in: -1, want: 0},
	test_int64{fn: div_int64_9223372036854775806, fnname: "div_int64_9223372036854775806", in: 0, want: 0},
	test_int64{fn: div_9223372036854775806_int64, fnname: "div_9223372036854775806_int64", in: 1, want: 9223372036854775806},
	test_int64{fn: div_int64_9223372036854775806, fnname: "div_int64_9223372036854775806", in: 1, want: 0},
	test_int64{fn: div_9223372036854775806_int64, fnname: "div_9223372036854775806_int64", in: 4294967296, want: 2147483647},
	test_int64{fn: div_int64_9223372036854775806, fnname: "div_int64_9223372036854775806", in: 4294967296, want: 0},
	test_int64{fn: div_9223372036854775806_int64, fnname: "div_9223372036854775806_int64", in: 9223372036854775806, want: 1},
	test_int64{fn: div_int64_9223372036854775806, fnname: "div_int64_9223372036854775806", in: 9223372036854775806, want: 1},
	test_int64{fn: div_9223372036854775806_int64, fnname: "div_9223372036854775806_int64", in: 9223372036854775807, want: 0},
	test_int64{fn: div_int64_9223372036854775806, fnname: "div_int64_9223372036854775806", in: 9223372036854775807, want: 1},
	test_int64{fn: div_9223372036854775807_int64, fnname: "div_9223372036854775807_int64", in: -9223372036854775808, want: 0},
	test_int64{fn: div_int64_9223372036854775807, fnname: "div_int64_9223372036854775807", in: -9223372036854775808, want: -1},
	test_int64{fn: div_9223372036854775807_int64, fnname: "div_9223372036854775807_int64", in: -9223372036854775807, want: -1},
	test_int64{fn: div_int64_9223372036854775807, fnname: "div_int64_9223372036854775807", in: -9223372036854775807, want: -1},
	test_int64{fn: div_9223372036854775807_int64, fnname: "div_9223372036854775807_int64", in: -4294967296, want: -2147483647},
	test_int64{fn: div_int64_9223372036854775807, fnname: "div_int64_9223372036854775807", in: -4294967296, want: 0},
	test_int64{fn: div_9223372036854775807_int64, fnname: "div_9223372036854775807_int64", in: -1, want: -9223372036854775807},
	test_int64{fn: div_int64_9223372036854775807, fnname: "div_int64_9223372036854775807", in: -1, want: 0},
	test_int64{fn: div_int64_9223372036854775807, fnname: "div_int64_9223372036854775807", in: 0, want: 0},
	test_int64{fn: div_9223372036854775807_int64, fnname: "div_9223372036854775807_int64", in: 1, want: 9223372036854775807},
	test_int64{fn: div_int64_9223372036854775807, fnname: "div_int64_9223372036854775807", in: 1, want: 0},
	test_int64{fn: div_9223372036854775807_int64, fnname: "div_9223372036854775807_int64", in: 4294967296, want: 2147483647},
	test_int64{fn: div_int64_9223372036854775807, fnname: "div_int64_9223372036854775807", in: 4294967296, want: 0},
	test_int64{fn: div_9223372036854775807_int64, fnname: "div_9223372036854775807_int64", in: 9223372036854775806, want: 1},
	test_int64{fn: div_int64_9223372036854775807, fnname: "div_int64_9223372036854775807", in: 9223372036854775806, want: 0},
	test_int64{fn: div_9223372036854775807_int64, fnname: "div_9223372036854775807_int64", in: 9223372036854775807, want: 1},
	test_int64{fn: div_int64_9223372036854775807, fnname: "div_int64_9223372036854775807", in: 9223372036854775807, want: 1},
	test_int64{fn: mul_Neg9223372036854775808_int64, fnname: "mul_Neg9223372036854775808_int64", in: -9223372036854775808, want: 0},
	test_int64{fn: mul_int64_Neg9223372036854775808, fnname: "mul_int64_Neg9223372036854775808", in: -9223372036854775808, want: 0},
	test_int64{fn: mul_Neg9223372036854775808_int64, fnname: "mul_Neg9223372036854775808_int64", in: -9223372036854775807, want: -9223372036854775808},
	test_int64{fn: mul_int64_Neg9223372036854775808, fnname: "mul_int64_Neg9223372036854775808", in: -9223372036854775807, want: -9223372036854775808},
	test_int64{fn: mul_Neg9223372036854775808_int64, fnname: "mul_Neg9223372036854775808_int64", in: -4294967296, want: 0},
	test_int64{fn: mul_int64_Neg9223372036854775808, fnname: "mul_int64_Neg9223372036854775808", in: -4294967296, want: 0},
	test_int64{fn: mul_Neg9223372036854775808_int64, fnname: "mul_Neg9223372036854775808_int64", in: -1, want: -9223372036854775808},
	test_int64{fn: mul_int64_Neg9223372036854775808, fnname: "mul_int64_Neg9223372036854775808", in: -1, want: -9223372036854775808},
	test_int64{fn: mul_Neg9223372036854775808_int64, fnname: "mul_Neg9223372036854775808_int64", in: 0, want: 0},
	test_int64{fn: mul_int64_Neg9223372036854775808, fnname: "mul_int64_Neg9223372036854775808", in: 0, want: 0},
	test_int64{fn: mul_Neg9223372036854775808_int64, fnname: "mul_Neg9223372036854775808_int64", in: 1, want: -9223372036854775808},
	test_int64{fn: mul_int64_Neg9223372036854775808, fnname: "mul_int64_Neg9223372036854775808", in: 1, want: -9223372036854775808},
	test_int64{fn: mul_Neg9223372036854775808_int64, fnname: "mul_Neg9223372036854775808_int64", in: 4294967296, want: 0},
	test_int64{fn: mul_int64_Neg9223372036854775808, fnname: "mul_int64_Neg9223372036854775808", in: 4294967296, want: 0},
	test_int64{fn: mul_Neg9223372036854775808_int64, fnname: "mul_Neg9223372036854775808_int64", in: 9223372036854775806, want: 0},
	test_int64{fn: mul_int64_Neg9223372036854775808, fnname: "mul_int64_Neg9223372036854775808", in: 9223372036854775806, want: 0},
	test_int64{fn: mul_Neg9223372036854775808_int64, fnname: "mul_Neg9223372036854775808_int64", in: 9223372036854775807, want: -9223372036854775808},
	test_int64{fn: mul_int64_Neg9223372036854775808, fnname: "mul_int64_Neg9223372036854775808", in: 9223372036854775807, want: -9223372036854775808},
	test_int64{fn: mul_Neg9223372036854775807_int64, fnname: "mul_Neg9223372036854775807_int64", in: -9223372036854775808, want: -9223372036854775808},
	test_int64{fn: mul_int64_Neg9223372036854775807, fnname: "mul_int64_Neg9223372036854775807", in: -9223372036854775808, want: -9223372036854775808},
	test_int64{fn: mul_Neg9223372036854775807_int64, fnname: "mul_Neg9223372036854775807_int64", in: -9223372036854775807, want: 1},
	test_int64{fn: mul_int64_Neg9223372036854775807, fnname: "mul_int64_Neg9223372036854775807", in: -9223372036854775807, want: 1},
	test_int64{fn: mul_Neg9223372036854775807_int64, fnname: "mul_Neg9223372036854775807_int64", in: -4294967296, want: -4294967296},
	test_int64{fn: mul_int64_Neg9223372036854775807, fnname: "mul_int64_Neg9223372036854775807", in: -4294967296, want: -4294967296},
	test_int64{fn: mul_Neg9223372036854775807_int64, fnname: "mul_Neg9223372036854775807_int64", in: -1, want: 9223372036854775807},
	test_int64{fn: mul_int64_Neg9223372036854775807, fnname: "mul_int64_Neg9223372036854775807", in: -1, want: 9223372036854775807},
	test_int64{fn: mul_Neg9223372036854775807_int64, fnname: "mul_Neg9223372036854775807_int64", in: 0, want: 0},
	test_int64{fn: mul_int64_Neg9223372036854775807, fnname: "mul_int64_Neg9223372036854775807", in: 0, want: 0},
	test_int64{fn: mul_Neg9223372036854775807_int64, fnname: "mul_Neg9223372036854775807_int64", in: 1, want: -9223372036854775807},
	test_int64{fn: mul_int64_Neg9223372036854775807, fnname: "mul_int64_Neg9223372036854775807", in: 1, want: -9223372036854775807},
	test_int64{fn: mul_Neg9223372036854775807_int64, fnname: "mul_Neg9223372036854775807_int64", in: 4294967296, want: 4294967296},
	test_int64{fn: mul_int64_Neg9223372036854775807, fnname: "mul_int64_Neg9223372036854775807", in: 4294967296, want: 4294967296},
	test_int64{fn: mul_Neg9223372036854775807_int64, fnname: "mul_Neg9223372036854775807_int64", in: 9223372036854775806, want: 9223372036854775806},
	test_int64{fn: mul_int64_Neg9223372036854775807, fnname: "mul_int64_Neg9223372036854775807", in: 9223372036854775806, want: 9223372036854775806},
	test_int64{fn: mul_Neg9223372036854775807_int64, fnname: "mul_Neg9223372036854775807_int64", in: 9223372036854775807, want: -1},
	test_int64{fn: mul_int64_Neg9223372036854775807, fnname: "mul_int64_Neg9223372036854775807", in: 9223372036854775807, want: -1},
	test_int64{fn: mul_Neg4294967296_int64, fnname: "mul_Neg4294967296_int64", in: -9223372036854775808, want: 0},
	test_int64{fn: mul_int64_Neg4294967296, fnname: "mul_int64_Neg4294967296", in: -9223372036854775808, want: 0},
	test_int64{fn: mul_Neg4294967296_int64, fnname: "mul_Neg4294967296_int64", in: -9223372036854775807, want: -4294967296},
	test_int64{fn: mul_int64_Neg4294967296, fnname: "mul_int64_Neg4294967296", in: -9223372036854775807, want: -4294967296},
	test_int64{fn: mul_Neg4294967296_int64, fnname: "mul_Neg4294967296_int64", in: -4294967296, want: 0},
	test_int64{fn: mul_int64_Neg4294967296, fnname: "mul_int64_Neg4294967296", in: -4294967296, want: 0},
	test_int64{fn: mul_Neg4294967296_int64, fnname: "mul_Neg4294967296_int64", in: -1, want: 4294967296},
	test_int64{fn: mul_int64_Neg4294967296, fnname: "mul_int64_Neg4294967296", in: -1, want: 4294967296},
	test_int64{fn: mul_Neg4294967296_int64, fnname: "mul_Neg4294967296_int64", in: 0, want: 0},
	test_int64{fn: mul_int64_Neg4294967296, fnname: "mul_int64_Neg4294967296", in: 0, want: 0},
	test_int64{fn: mul_Neg4294967296_int64, fnname: "mul_Neg4294967296_int64", in: 1, want: -4294967296},
	test_int64{fn: mul_int64_Neg4294967296, fnname: "mul_int64_Neg4294967296", in: 1, want: -4294967296},
	test_int64{fn: mul_Neg4294967296_int64, fnname: "mul_Neg4294967296_int64", in: 4294967296, want: 0},
	test_int64{fn: mul_int64_Neg4294967296, fnname: "mul_int64_Neg4294967296", in: 4294967296, want: 0},
	test_int64{fn: mul_Neg4294967296_int64, fnname: "mul_Neg4294967296_int64", in: 9223372036854775806, want: 8589934592},
	test_int64{fn: mul_int64_Neg4294967296, fnname: "mul_int64_Neg4294967296", in: 9223372036854775806, want: 8589934592},
	test_int64{fn: mul_Neg4294967296_int64, fnname: "mul_Neg4294967296_int64", in: 9223372036854775807, want: 4294967296},
	test_int64{fn: mul_int64_Neg4294967296, fnname: "mul_int64_Neg4294967296", in: 9223372036854775807, want: 4294967296},
	test_int64{fn: mul_Neg1_int64, fnname: "mul_Neg1_int64", in: -9223372036854775808, want: -9223372036854775808},
	test_int64{fn: mul_int64_Neg1, fnname: "mul_int64_Neg1", in: -9223372036854775808, want: -9223372036854775808},
	test_int64{fn: mul_Neg1_int64, fnname: "mul_Neg1_int64", in: -9223372036854775807, want: 9223372036854775807},
	test_int64{fn: mul_int64_Neg1, fnname: "mul_int64_Neg1", in: -9223372036854775807, want: 9223372036854775807},
	test_int64{fn: mul_Neg1_int64, fnname: "mul_Neg1_int64", in: -4294967296, want: 4294967296},
	test_int64{fn: mul_int64_Neg1, fnname: "mul_int64_Neg1", in: -4294967296, want: 4294967296},
	test_int64{fn: mul_Neg1_int64, fnname: "mul_Neg1_int64", in: -1, want: 1},
	test_int64{fn: mul_int64_Neg1, fnname: "mul_int64_Neg1", in: -1, want: 1},
	test_int64{fn: mul_Neg1_int64, fnname: "mul_Neg1_int64", in: 0, want: 0},
	test_int64{fn: mul_int64_Neg1, fnname: "mul_int64_Neg1", in: 0, want: 0},
	test_int64{fn: mul_Neg1_int64, fnname: "mul_Neg1_int64", in: 1, want: -1},
	test_int64{fn: mul_int64_Neg1, fnname: "mul_int64_Neg1", in: 1, want: -1},
	test_int64{fn: mul_Neg1_int64, fnname: "mul_Neg1_int64", in: 4294967296, want: -4294967296},
	test_int64{fn: mul_int64_Neg1, fnname: "mul_int64_Neg1", in: 4294967296, want: -4294967296},
	test_int64{fn: mul_Neg1_int64, fnname: "mul_Neg1_int64", in: 9223372036854775806, want: -9223372036854775806},
	test_int64{fn: mul_int64_Neg1, fnname: "mul_int64_Neg1", in: 9223372036854775806, want: -9223372036854775806},
	test_int64{fn: mul_Neg1_int64, fnname: "mul_Neg1_int64", in: 9223372036854775807, want: -9223372036854775807},
	test_int64{fn: mul_int64_Neg1, fnname: "mul_int64_Neg1", in: 9223372036854775807, want: -9223372036854775807},
	test_int64{fn: mul_0_int64, fnname: "mul_0_int64", in: -9223372036854775808, want: 0},
	test_int64{fn: mul_int64_0, fnname: "mul_int64_0", in: -9223372036854775808, want: 0},
	test_int64{fn: mul_0_int64, fnname: "mul_0_int64", in: -9223372036854775807, want: 0},
	test_int64{fn: mul_int64_0, fnname: "mul_int64_0", in: -9223372036854775807, want: 0},
	test_int64{fn: mul_0_int64, fnname: "mul_0_int64", in: -4294967296, want: 0},
	test_int64{fn: mul_int64_0, fnname: "mul_int64_0", in: -4294967296, want: 0},
	test_int64{fn: mul_0_int64, fnname: "mul_0_int64", in: -1, want: 0},
	test_int64{fn: mul_int64_0, fnname: "mul_int64_0", in: -1, want: 0},
	test_int64{fn: mul_0_int64, fnname: "mul_0_int64", in: 0, want: 0},
	test_int64{fn: mul_int64_0, fnname: "mul_int64_0", in: 0, want: 0},
	test_int64{fn: mul_0_int64, fnname: "mul_0_int64", in: 1, want: 0},
	test_int64{fn: mul_int64_0, fnname: "mul_int64_0", in: 1, want: 0},
	test_int64{fn: mul_0_int64, fnname: "mul_0_int64", in: 4294967296, want: 0},
	test_int64{fn: mul_int64_0, fnname: "mul_int64_0", in: 4294967296, want: 0},
	test_int64{fn: mul_0_int64, fnname: "mul_0_int64", in: 9223372036854775806, want: 0},
	test_int64{fn: mul_int64_0, fnname: "mul_int64_0", in: 9223372036854775806, want: 0},
	test_int64{fn: mul_0_int64, fnname: "mul_0_int64", in: 9223372036854775807, want: 0},
	test_int64{fn: mul_int64_0, fnname: "mul_int64_0", in: 9223372036854775807, want: 0},
	test_int64{fn: mul_1_int64, fnname: "mul_1_int64", in: -9223372036854775808, want: -9223372036854775808},
	test_int64{fn: mul_int64_1, fnname: "mul_int64_1", in: -9223372036854775808, want: -9223372036854775808},
	test_int64{fn: mul_1_int64, fnname: "mul_1_int64", in: -9223372036854775807, want: -9223372036854775807},
	test_int64{fn: mul_int64_1, fnname: "mul_int64_1", in: -9223372036854775807, want: -9223372036854775807},
	test_int64{fn: mul_1_int64, fnname: "mul_1_int64", in: -4294967296, want: -4294967296},
	test_int64{fn: mul_int64_1, fnname: "mul_int64_1", in: -4294967296, want: -4294967296},
	test_int64{fn: mul_1_int64, fnname: "mul_1_int64", in: -1, want: -1},
	test_int64{fn: mul_int64_1, fnname: "mul_int64_1", in: -1, want: -1},
	test_int64{fn: mul_1_int64, fnname: "mul_1_int64", in: 0, want: 0},
	test_int64{fn: mul_int64_1, fnname: "mul_int64_1", in: 0, want: 0},
	test_int64{fn: mul_1_int64, fnname: "mul_1_int64", in: 1, want: 1},
	test_int64{fn: mul_int64_1, fnname: "mul_int64_1", in: 1, want: 1},
	test_int64{fn: mul_1_int64, fnname: "mul_1_int64", in: 4294967296, want: 4294967296},
	test_int64{fn: mul_int64_1, fnname: "mul_int64_1", in: 4294967296, want: 4294967296},
	test_int64{fn: mul_1_int64, fnname: "mul_1_int64", in: 9223372036854775806, want: 9223372036854775806},
	test_int64{fn: mul_int64_1, fnname: "mul_int64_1", in: 9223372036854775806, want: 9223372036854775806},
	test_int64{fn: mul_1_int64, fnname: "mul_1_int64", in: 9223372036854775807, want: 9223372036854775807},
	test_int64{fn: mul_int64_1, fnname: "mul_int64_1", in: 9223372036854775807, want: 9223372036854775807},
	test_int64{fn: mul_4294967296_int64, fnname: "mul_4294967296_int64", in: -9223372036854775808, want: 0},
	test_int64{fn: mul_int64_4294967296, fnname: "mul_int64_4294967296", in: -9223372036854775808, want: 0},
	test_int64{fn: mul_4294967296_int64, fnname: "mul_4294967296_int64", in: -9223372036854775807, want: 4294967296},
	test_int64{fn: mul_int64_4294967296, fnname: "mul_int64_4294967296", in: -9223372036854775807, want: 4294967296},
	test_int64{fn: mul_4294967296_int64, fnname: "mul_4294967296_int64", in: -4294967296, want: 0},
	test_int64{fn: mul_int64_4294967296, fnname: "mul_int64_4294967296", in: -4294967296, want: 0},
	test_int64{fn: mul_4294967296_int64, fnname: "mul_4294967296_int64", in: -1, want: -4294967296},
	test_int64{fn: mul_int64_4294967296, fnname: "mul_int64_4294967296", in: -1, want: -4294967296},
	test_int64{fn: mul_4294967296_int64, fnname: "mul_4294967296_int64", in: 0, want: 0},
	test_int64{fn: mul_int64_4294967296, fnname: "mul_int64_4294967296", in: 0, want: 0},
	test_int64{fn: mul_4294967296_int64, fnname: "mul_4294967296_int64", in: 1, want: 4294967296},
	test_int64{fn: mul_int64_4294967296, fnname: "mul_int64_4294967296", in: 1, want: 4294967296},
	test_int64{fn: mul_4294967296_int64, fnname: "mul_4294967296_int64", in: 4294967296, want: 0},
	test_int64{fn: mul_int64_4294967296, fnname: "mul_int64_4294967296", in: 4294967296, want: 0},
	test_int64{fn: mul_4294967296_int64, fnname: "mul_4294967296_int64", in: 9223372036854775806, want: -8589934592},
	test_int64{fn: mul_int64_4294967296, fnname: "mul_int64_4294967296", in: 9223372036854775806, want: -8589934592},
	test_int64{fn: mul_4294967296_int64, fnname: "mul_4294967296_int64", in: 9223372036854775807, want: -4294967296},
	test_int64{fn: mul_int64_4294967296, fnname: "mul_int64_4294967296", in: 9223372036854775807, want: -4294967296},
	test_int64{fn: mul_9223372036854775806_int64, fnname: "mul_9223372036854775806_int64", in: -9223372036854775808, want: 0},
	test_int64{fn: mul_int64_9223372036854775806, fnname: "mul_int64_9223372036854775806", in: -9223372036854775808, want: 0},
	test_int64{fn: mul_9223372036854775806_int64, fnname: "mul_9223372036854775806_int64", in: -9223372036854775807, want: 9223372036854775806},
	test_int64{fn: mul_int64_9223372036854775806, fnname: "mul_int64_9223372036854775806", in: -9223372036854775807, want: 9223372036854775806},
	test_int64{fn: mul_9223372036854775806_int64, fnname: "mul_9223372036854775806_int64", in: -4294967296, want: 8589934592},
	test_int64{fn: mul_int64_9223372036854775806, fnname: "mul_int64_9223372036854775806", in: -4294967296, want: 8589934592},
	test_int64{fn: mul_9223372036854775806_int64, fnname: "mul_9223372036854775806_int64", in: -1, want: -9223372036854775806},
	test_int64{fn: mul_int64_9223372036854775806, fnname: "mul_int64_9223372036854775806", in: -1, want: -9223372036854775806},
	test_int64{fn: mul_9223372036854775806_int64, fnname: "mul_9223372036854775806_int64", in: 0, want: 0},
	test_int64{fn: mul_int64_9223372036854775806, fnname: "mul_int64_9223372036854775806", in: 0, want: 0},
	test_int64{fn: mul_9223372036854775806_int64, fnname: "mul_9223372036854775806_int64", in: 1, want: 9223372036854775806},
	test_int64{fn: mul_int64_9223372036854775806, fnname: "mul_int64_9223372036854775806", in: 1, want: 9223372036854775806},
	test_int64{fn: mul_9223372036854775806_int64, fnname: "mul_9223372036854775806_int64", in: 4294967296, want: -8589934592},
	test_int64{fn: mul_int64_9223372036854775806, fnname: "mul_int64_9223372036854775806", in: 4294967296, want: -8589934592},
	test_int64{fn: mul_9223372036854775806_int64, fnname: "mul_9223372036854775806_int64", in: 9223372036854775806, want: 4},
	test_int64{fn: mul_int64_9223372036854775806, fnname: "mul_int64_9223372036854775806", in: 9223372036854775806, want: 4},
	test_int64{fn: mul_9223372036854775806_int64, fnname: "mul_9223372036854775806_int64", in: 9223372036854775807, want: -9223372036854775806},
	test_int64{fn: mul_int64_9223372036854775806, fnname: "mul_int64_9223372036854775806", in: 9223372036854775807, want: -9223372036854775806},
	test_int64{fn: mul_9223372036854775807_int64, fnname: "mul_9223372036854775807_int64", in: -9223372036854775808, want: -9223372036854775808},
	test_int64{fn: mul_int64_9223372036854775807, fnname: "mul_int64_9223372036854775807", in: -9223372036854775808, want: -9223372036854775808},
	test_int64{fn: mul_9223372036854775807_int64, fnname: "mul_9223372036854775807_int64", in: -9223372036854775807, want: -1},
	test_int64{fn: mul_int64_9223372036854775807, fnname: "mul_int64_9223372036854775807", in: -9223372036854775807, want: -1},
	test_int64{fn: mul_9223372036854775807_int64, fnname: "mul_9223372036854775807_int64", in: -4294967296, want: 4294967296},
	test_int64{fn: mul_int64_9223372036854775807, fnname: "mul_int64_9223372036854775807", in: -4294967296, want: 4294967296},
	test_int64{fn: mul_9223372036854775807_int64, fnname: "mul_9223372036854775807_int64", in: -1, want: -9223372036854775807},
	test_int64{fn: mul_int64_9223372036854775807, fnname: "mul_int64_9223372036854775807", in: -1, want: -9223372036854775807},
	test_int64{fn: mul_9223372036854775807_int64, fnname: "mul_9223372036854775807_int64", in: 0, want: 0},
	test_int64{fn: mul_int64_9223372036854775807, fnname: "mul_int64_9223372036854775807", in: 0, want: 0},
	test_int64{fn: mul_9223372036854775807_int64, fnname: "mul_9223372036854775807_int64", in: 1, want: 9223372036854775807},
	test_int64{fn: mul_int64_9223372036854775807, fnname: "mul_int64_9223372036854775807", in: 1, want: 9223372036854775807},
	test_int64{fn: mul_9223372036854775807_int64, fnname: "mul_9223372036854775807_int64", in: 4294967296, want: -4294967296},
	test_int64{fn: mul_int64_9223372036854775807, fnname: "mul_int64_9223372036854775807", in: 4294967296, want: -4294967296},
	test_int64{fn: mul_9223372036854775807_int64, fnname: "mul_9223372036854775807_int64", in: 9223372036854775806, want: -9223372036854775806},
	test_int64{fn: mul_int64_9223372036854775807, fnname: "mul_int64_9223372036854775807", in: 9223372036854775806, want: -9223372036854775806},
	test_int64{fn: mul_9223372036854775807_int64, fnname: "mul_9223372036854775807_int64", in: 9223372036854775807, want: 1},
	test_int64{fn: mul_int64_9223372036854775807, fnname: "mul_int64_9223372036854775807", in: 9223372036854775807, want: 1},
	test_int64{fn: mod_Neg9223372036854775808_int64, fnname: "mod_Neg9223372036854775808_int64", in: -9223372036854775808, want: 0},
	test_int64{fn: mod_int64_Neg9223372036854775808, fnname: "mod_int64_Neg9223372036854775808", in: -9223372036854775808, want: 0},
	test_int64{fn: mod_Neg9223372036854775808_int64, fnname: "mod_Neg9223372036854775808_int64", in: -9223372036854775807, want: -1},
	test_int64{fn: mod_int64_Neg9223372036854775808, fnname: "mod_int64_Neg9223372036854775808", in: -9223372036854775807, want: -9223372036854775807},
	test_int64{fn: mod_Neg9223372036854775808_int64, fnname: "mod_Neg9223372036854775808_int64", in: -4294967296, want: 0},
	test_int64{fn: mod_int64_Neg9223372036854775808, fnname: "mod_int64_Neg9223372036854775808", in: -4294967296, want: -4294967296},
	test_int64{fn: mod_Neg9223372036854775808_int64, fnname: "mod_Neg9223372036854775808_int64", in: -1, want: 0},
	test_int64{fn: mod_int64_Neg9223372036854775808, fnname: "mod_int64_Neg9223372036854775808", in: -1, want: -1},
	test_int64{fn: mod_int64_Neg9223372036854775808, fnname: "mod_int64_Neg9223372036854775808", in: 0, want: 0},
	test_int64{fn: mod_Neg9223372036854775808_int64, fnname: "mod_Neg9223372036854775808_int64", in: 1, want: 0},
	test_int64{fn: mod_int64_Neg9223372036854775808, fnname: "mod_int64_Neg9223372036854775808", in: 1, want: 1},
	test_int64{fn: mod_Neg9223372036854775808_int64, fnname: "mod_Neg9223372036854775808_int64", in: 4294967296, want: 0},
	test_int64{fn: mod_int64_Neg9223372036854775808, fnname: "mod_int64_Neg9223372036854775808", in: 4294967296, want: 4294967296},
	test_int64{fn: mod_Neg9223372036854775808_int64, fnname: "mod_Neg9223372036854775808_int64", in: 9223372036854775806, want: -2},
	test_int64{fn: mod_int64_Neg9223372036854775808, fnname: "mod_int64_Neg9223372036854775808", in: 9223372036854775806, want: 9223372036854775806},
	test_int64{fn: mod_Neg9223372036854775808_int64, fnname: "mod_Neg9223372036854775808_int64", in: 9223372036854775807, want: -1},
	test_int64{fn: mod_int64_Neg9223372036854775808, fnname: "mod_int64_Neg9223372036854775808", in: 9223372036854775807, want: 9223372036854775807},
	test_int64{fn: mod_Neg9223372036854775807_int64, fnname: "mod_Neg9223372036854775807_int64", in: -9223372036854775808, want: -9223372036854775807},
	test_int64{fn: mod_int64_Neg9223372036854775807, fnname: "mod_int64_Neg9223372036854775807", in: -9223372036854775808, want: -1},
	test_int64{fn: mod_Neg9223372036854775807_int64, fnname: "mod_Neg9223372036854775807_int64", in: -9223372036854775807, want: 0},
	test_int64{fn: mod_int64_Neg9223372036854775807, fnname: "mod_int64_Neg9223372036854775807", in: -9223372036854775807, want: 0},
	test_int64{fn: mod_Neg9223372036854775807_int64, fnname: "mod_Neg9223372036854775807_int64", in: -4294967296, want: -4294967295},
	test_int64{fn: mod_int64_Neg9223372036854775807, fnname: "mod_int64_Neg9223372036854775807", in: -4294967296, want: -4294967296},
	test_int64{fn: mod_Neg9223372036854775807_int64, fnname: "mod_Neg9223372036854775807_int64", in: -1, want: 0},
	test_int64{fn: mod_int64_Neg9223372036854775807, fnname: "mod_int64_Neg9223372036854775807", in: -1, want: -1},
	test_int64{fn: mod_int64_Neg9223372036854775807, fnname: "mod_int64_Neg9223372036854775807", in: 0, want: 0},
	test_int64{fn: mod_Neg9223372036854775807_int64, fnname: "mod_Neg9223372036854775807_int64", in: 1, want: 0},
	test_int64{fn: mod_int64_Neg9223372036854775807, fnname: "mod_int64_Neg9223372036854775807", in: 1, want: 1},
	test_int64{fn: mod_Neg9223372036854775807_int64, fnname: "mod_Neg9223372036854775807_int64", in: 4294967296, want: -4294967295},
	test_int64{fn: mod_int64_Neg9223372036854775807, fnname: "mod_int64_Neg9223372036854775807", in: 4294967296, want: 4294967296},
	test_int64{fn: mod_Neg9223372036854775807_int64, fnname: "mod_Neg9223372036854775807_int64", in: 9223372036854775806, want: -1},
	test_int64{fn: mod_int64_Neg9223372036854775807, fnname: "mod_int64_Neg9223372036854775807", in: 9223372036854775806, want: 9223372036854775806},
	test_int64{fn: mod_Neg9223372036854775807_int64, fnname: "mod_Neg9223372036854775807_int64", in: 9223372036854775807, want: 0},
	test_int64{fn: mod_int64_Neg9223372036854775807, fnname: "mod_int64_Neg9223372036854775807", in: 9223372036854775807, want: 0},
	test_int64{fn: mod_Neg4294967296_int64, fnname: "mod_Neg4294967296_int64", in: -9223372036854775808, want: -4294967296},
	test_int64{fn: mod_int64_Neg4294967296, fnname: "mod_int64_Neg4294967296", in: -9223372036854775808, want: 0},
	test_int64{fn: mod_Neg4294967296_int64, fnname: "mod_Neg4294967296_int64", in: -9223372036854775807, want: -4294967296},
	test_int64{fn: mod_int64_Neg4294967296, fnname: "mod_int64_Neg4294967296", in: -9223372036854775807, want: -4294967295},
	test_int64{fn: mod_Neg4294967296_int64, fnname: "mod_Neg4294967296_int64", in: -4294967296, want: 0},
	test_int64{fn: mod_int64_Neg4294967296, fnname: "mod_int64_Neg4294967296", in: -4294967296, want: 0},
	test_int64{fn: mod_Neg4294967296_int64, fnname: "mod_Neg4294967296_int64", in: -1, want: 0},
	test_int64{fn: mod_int64_Neg4294967296, fnname: "mod_int64_Neg4294967296", in: -1, want: -1},
	test_int64{fn: mod_int64_Neg4294967296, fnname: "mod_int64_Neg4294967296", in: 0, want: 0},
	test_int64{fn: mod_Neg4294967296_int64, fnname: "mod_Neg4294967296_int64", in: 1, want: 0},
	test_int64{fn: mod_int64_Neg4294967296, fnname: "mod_int64_Neg4294967296", in: 1, want: 1},
	test_int64{fn: mod_Neg4294967296_int64, fnname: "mod_Neg4294967296_int64", in: 4294967296, want: 0},
	test_int64{fn: mod_int64_Neg4294967296, fnname: "mod_int64_Neg4294967296", in: 4294967296, want: 0},
	test_int64{fn: mod_Neg4294967296_int64, fnname: "mod_Neg4294967296_int64", in: 9223372036854775806, want: -4294967296},
	test_int64{fn: mod_int64_Neg4294967296, fnname: "mod_int64_Neg4294967296", in: 9223372036854775806, want: 4294967294},
	test_int64{fn: mod_Neg4294967296_int64, fnname: "mod_Neg4294967296_int64", in: 9223372036854775807, want: -4294967296},
	test_int64{fn: mod_int64_Neg4294967296, fnname: "mod_int64_Neg4294967296", in: 9223372036854775807, want: 4294967295},
	test_int64{fn: mod_Neg1_int64, fnname: "mod_Neg1_int64", in: -9223372036854775808, want: -1},
	test_int64{fn: mod_int64_Neg1, fnname: "mod_int64_Neg1", in: -9223372036854775808, want: 0},
	test_int64{fn: mod_Neg1_int64, fnname: "mod_Neg1_int64", in: -9223372036854775807, want: -1},
	test_int64{fn: mod_int64_Neg1, fnname: "mod_int64_Neg1", in: -9223372036854775807, want: 0},
	test_int64{fn: mod_Neg1_int64, fnname: "mod_Neg1_int64", in: -4294967296, want: -1},
	test_int64{fn: mod_int64_Neg1, fnname: "mod_int64_Neg1", in: -4294967296, want: 0},
	test_int64{fn: mod_Neg1_int64, fnname: "mod_Neg1_int64", in: -1, want: 0},
	test_int64{fn: mod_int64_Neg1, fnname: "mod_int64_Neg1", in: -1, want: 0},
	test_int64{fn: mod_int64_Neg1, fnname: "mod_int64_Neg1", in: 0, want: 0},
	test_int64{fn: mod_Neg1_int64, fnname: "mod_Neg1_int64", in: 1, want: 0},
	test_int64{fn: mod_int64_Neg1, fnname: "mod_int64_Neg1", in: 1, want: 0},
	test_int64{fn: mod_Neg1_int64, fnname: "mod_Neg1_int64", in: 4294967296, want: -1},
	test_int64{fn: mod_int64_Neg1, fnname: "mod_int64_Neg1", in: 4294967296, want: 0},
	test_int64{fn: mod_Neg1_int64, fnname: "mod_Neg1_int64", in: 9223372036854775806, want: -1},
	test_int64{fn: mod_int64_Neg1, fnname: "mod_int64_Neg1", in: 9223372036854775806, want: 0},
	test_int64{fn: mod_Neg1_int64, fnname: "mod_Neg1_int64", in: 9223372036854775807, want: -1},
	test_int64{fn: mod_int64_Neg1, fnname: "mod_int64_Neg1", in: 9223372036854775807, want: 0},
	test_int64{fn: mod_0_int64, fnname: "mod_0_int64", in: -9223372036854775808, want: 0},
	test_int64{fn: mod_0_int64, fnname: "mod_0_int64", in: -9223372036854775807, want: 0},
	test_int64{fn: mod_0_int64, fnname: "mod_0_int64", in: -4294967296, want: 0},
	test_int64{fn: mod_0_int64, fnname: "mod_0_int64", in: -1, want: 0},
	test_int64{fn: mod_0_int64, fnname: "mod_0_int64", in: 1, want: 0},
	test_int64{fn: mod_0_int64, fnname: "mod_0_int64", in: 4294967296, want: 0},
	test_int64{fn: mod_0_int64, fnname: "mod_0_int64", in: 9223372036854775806, want: 0},
	test_int64{fn: mod_0_int64, fnname: "mod_0_int64", in: 9223372036854775807, want: 0},
	test_int64{fn: mod_1_int64, fnname: "mod_1_int64", in: -9223372036854775808, want: 1},
	test_int64{fn: mod_int64_1, fnname: "mod_int64_1", in: -9223372036854775808, want: 0},
	test_int64{fn: mod_1_int64, fnname: "mod_1_int64", in: -9223372036854775807, want: 1},
	test_int64{fn: mod_int64_1, fnname: "mod_int64_1", in: -9223372036854775807, want: 0},
	test_int64{fn: mod_1_int64, fnname: "mod_1_int64", in: -4294967296, want: 1},
	test_int64{fn: mod_int64_1, fnname: "mod_int64_1", in: -4294967296, want: 0},
	test_int64{fn: mod_1_int64, fnname: "mod_1_int64", in: -1, want: 0},
	test_int64{fn: mod_int64_1, fnname: "mod_int64_1", in: -1, want: 0},
	test_int64{fn: mod_int64_1, fnname: "mod_int64_1", in: 0, want: 0},
	test_int64{fn: mod_1_int64, fnname: "mod_1_int64", in: 1, want: 0},
	test_int64{fn: mod_int64_1, fnname: "mod_int64_1", in: 1, want: 0},
	test_int64{fn: mod_1_int64, fnname: "mod_1_int64", in: 4294967296, want: 1},
	test_int64{fn: mod_int64_1, fnname: "mod_int64_1", in: 4294967296, want: 0},
	test_int64{fn: mod_1_int64, fnname: "mod_1_int64", in: 9223372036854775806, want: 1},
	test_int64{fn: mod_int64_1, fnname: "mod_int64_1", in: 9223372036854775806, want: 0},
	test_int64{fn: mod_1_int64, fnname: "mod_1_int64", in: 9223372036854775807, want: 1},
	test_int64{fn: mod_int64_1, fnname: "mod_int64_1", in: 9223372036854775807, want: 0},
	test_int64{fn: mod_4294967296_int64, fnname: "mod_4294967296_int64", in: -9223372036854775808, want: 4294967296},
	test_int64{fn: mod_int64_4294967296, fnname: "mod_int64_4294967296", in: -9223372036854775808, want: 0},
	test_int64{fn: mod_4294967296_int64, fnname: "mod_4294967296_int64", in: -9223372036854775807, want: 4294967296},
	test_int64{fn: mod_int64_4294967296, fnname: "mod_int64_4294967296", in: -9223372036854775807, want: -4294967295},
	test_int64{fn: mod_4294967296_int64, fnname: "mod_4294967296_int64", in: -4294967296, want: 0},
	test_int64{fn: mod_int64_4294967296, fnname: "mod_int64_4294967296", in: -4294967296, want: 0},
	test_int64{fn: mod_4294967296_int64, fnname: "mod_4294967296_int64", in: -1, want: 0},
	test_int64{fn: mod_int64_4294967296, fnname: "mod_int64_4294967296", in: -1, want: -1},
	test_int64{fn: mod_int64_4294967296, fnname: "mod_int64_4294967296", in: 0, want: 0},
	test_int64{fn: mod_4294967296_int64, fnname: "mod_4294967296_int64", in: 1, want: 0},
	test_int64{fn: mod_int64_4294967296, fnname: "mod_int64_4294967296", in: 1, want: 1},
	test_int64{fn: mod_4294967296_int64, fnname: "mod_4294967296_int64", in: 4294967296, want: 0},
	test_int64{fn: mod_int64_4294967296, fnname: "mod_int64_4294967296", in: 4294967296, want: 0},
	test_int64{fn: mod_4294967296_int64, fnname: "mod_4294967296_int64", in: 9223372036854775806, want: 4294967296},
	test_int64{fn: mod_int64_4294967296, fnname: "mod_int64_4294967296", in: 9223372036854775806, want: 4294967294},
	test_int64{fn: mod_4294967296_int64, fnname: "mod_4294967296_int64", in: 9223372036854775807, want: 4294967296},
	test_int64{fn: mod_int64_4294967296, fnname: "mod_int64_4294967296", in: 9223372036854775807, want: 4294967295},
	test_int64{fn: mod_9223372036854775806_int64, fnname: "mod_9223372036854775806_int64", in: -9223372036854775808, want: 9223372036854775806},
	test_int64{fn: mod_int64_9223372036854775806, fnname: "mod_int64_9223372036854775806", in: -9223372036854775808, want: -2},
	test_int64{fn: mod_9223372036854775806_int64, fnname: "mod_9223372036854775806_int64", in: -9223372036854775807, want: 9223372036854775806},
	test_int64{fn: mod_int64_9223372036854775806, fnname: "mod_int64_9223372036854775806", in: -9223372036854775807, want: -1},
	test_int64{fn: mod_9223372036854775806_int64, fnname: "mod_9223372036854775806_int64", in: -4294967296, want: 4294967294},
	test_int64{fn: mod_int64_9223372036854775806, fnname: "mod_int64_9223372036854775806", in: -4294967296, want: -4294967296},
	test_int64{fn: mod_9223372036854775806_int64, fnname: "mod_9223372036854775806_int64", in: -1, want: 0},
	test_int64{fn: mod_int64_9223372036854775806, fnname: "mod_int64_9223372036854775806", in: -1, want: -1},
	test_int64{fn: mod_int64_9223372036854775806, fnname: "mod_int64_9223372036854775806", in: 0, want: 0},
	test_int64{fn: mod_9223372036854775806_int64, fnname: "mod_9223372036854775806_int64", in: 1, want: 0},
	test_int64{fn: mod_int64_9223372036854775806, fnname: "mod_int64_9223372036854775806", in: 1, want: 1},
	test_int64{fn: mod_9223372036854775806_int64, fnname: "mod_9223372036854775806_int64", in: 4294967296, want: 4294967294},
	test_int64{fn: mod_int64_9223372036854775806, fnname: "mod_int64_9223372036854775806", in: 4294967296, want: 4294967296},
	test_int64{fn: mod_9223372036854775806_int64, fnname: "mod_9223372036854775806_int64", in: 9223372036854775806, want: 0},
	test_int64{fn: mod_int64_9223372036854775806, fnname: "mod_int64_9223372036854775806", in: 9223372036854775806, want: 0},
	test_int64{fn: mod_9223372036854775806_int64, fnname: "mod_9223372036854775806_int64", in: 9223372036854775807, want: 9223372036854775806},
	test_int64{fn: mod_int64_9223372036854775806, fnname: "mod_int64_9223372036854775806", in: 9223372036854775807, want: 1},
	test_int64{fn: mod_9223372036854775807_int64, fnname: "mod_9223372036854775807_int64", in: -9223372036854775808, want: 9223372036854775807},
	test_int64{fn: mod_int64_9223372036854775807, fnname: "mod_int64_9223372036854775807", in: -9223372036854775808, want: -1},
	test_int64{fn: mod_9223372036854775807_int64, fnname: "mod_9223372036854775807_int64", in: -9223372036854775807, want: 0},
	test_int64{fn: mod_int64_9223372036854775807, fnname: "mod_int64_9223372036854775807", in: -9223372036854775807, want: 0},
	test_int64{fn: mod_9223372036854775807_int64, fnname: "mod_9223372036854775807_int64", in: -4294967296, want: 4294967295},
	test_int64{fn: mod_int64_9223372036854775807, fnname: "mod_int64_9223372036854775807", in: -4294967296, want: -4294967296},
	test_int64{fn: mod_9223372036854775807_int64, fnname: "mod_9223372036854775807_int64", in: -1, want: 0},
	test_int64{fn: mod_int64_9223372036854775807, fnname: "mod_int64_9223372036854775807", in: -1, want: -1},
	test_int64{fn: mod_int64_9223372036854775807, fnname: "mod_int64_9223372036854775807", in: 0, want: 0},
	test_int64{fn: mod_9223372036854775807_int64, fnname: "mod_9223372036854775807_int64", in: 1, want: 0},
	test_int64{fn: mod_int64_9223372036854775807, fnname: "mod_int64_9223372036854775807", in: 1, want: 1},
	test_int64{fn: mod_9223372036854775807_int64, fnname: "mod_9223372036854775807_int64", in: 4294967296, want: 4294967295},
	test_int64{fn: mod_int64_9223372036854775807, fnname: "mod_int64_9223372036854775807", in: 4294967296, want: 4294967296},
	test_int64{fn: mod_9223372036854775807_int64, fnname: "mod_9223372036854775807_int64", in: 9223372036854775806, want: 1},
	test_int64{fn: mod_int64_9223372036854775807, fnname: "mod_int64_9223372036854775807", in: 9223372036854775806, want: 9223372036854775806},
	test_int64{fn: mod_9223372036854775807_int64, fnname: "mod_9223372036854775807_int64", in: 9223372036854775807, want: 0},
	test_int64{fn: mod_int64_9223372036854775807, fnname: "mod_int64_9223372036854775807", in: 9223372036854775807, want: 0},
	test_int64{fn: and_Neg9223372036854775808_int64, fnname: "and_Neg9223372036854775808_int64", in: -9223372036854775808, want: -9223372036854775808},
	test_int64{fn: and_int64_Neg9223372036854775808, fnname: "and_int64_Neg9223372036854775808", in: -9223372036854775808, want: -9223372036854775808},
	test_int64{fn: and_Neg9223372036854775808_int64, fnname: "and_Neg9223372036854775808_int64", in: -9223372036854775807, want: -9223372036854775808},
	test_int64{fn: and_int64_Neg9223372036854775808, fnname: "and_int64_Neg9223372036854775808", in: -9223372036854775807, want: -9223372036854775808},
	test_int64{fn: and_Neg9223372036854775808_int64, fnname: "and_Neg9223372036854775808_int64", in: -4294967296, want: -9223372036854775808},
	test_int64{fn: and_int64_Neg9223372036854775808, fnname: "and_int64_Neg9223372036854775808", in: -4294967296, want: -9223372036854775808},
	test_int64{fn: and_Neg9223372036854775808_int64, fnname: "and_Neg9223372036854775808_int64", in: -1, want: -9223372036854775808},
	test_int64{fn: and_int64_Neg9223372036854775808, fnname: "and_int64_Neg9223372036854775808", in: -1, want: -9223372036854775808},
	test_int64{fn: and_Neg9223372036854775808_int64, fnname: "and_Neg9223372036854775808_int64", in: 0, want: 0},
	test_int64{fn: and_int64_Neg9223372036854775808, fnname: "and_int64_Neg9223372036854775808", in: 0, want: 0},
	test_int64{fn: and_Neg9223372036854775808_int64, fnname: "and_Neg9223372036854775808_int64", in: 1, want: 0},
	test_int64{fn: and_int64_Neg9223372036854775808, fnname: "and_int64_Neg9223372036854775808", in: 1, want: 0},
	test_int64{fn: and_Neg9223372036854775808_int64, fnname: "and_Neg9223372036854775808_int64", in: 4294967296, want: 0},
	test_int64{fn: and_int64_Neg9223372036854775808, fnname: "and_int64_Neg9223372036854775808", in: 4294967296, want: 0},
	test_int64{fn: and_Neg9223372036854775808_int64, fnname: "and_Neg9223372036854775808_int64", in: 9223372036854775806, want: 0},
	test_int64{fn: and_int64_Neg9223372036854775808, fnname: "and_int64_Neg9223372036854775808", in: 9223372036854775806, want: 0},
	test_int64{fn: and_Neg9223372036854775808_int64, fnname: "and_Neg9223372036854775808_int64", in: 9223372036854775807, want: 0},
	test_int64{fn: and_int64_Neg9223372036854775808, fnname: "and_int64_Neg9223372036854775808", in: 9223372036854775807, want: 0},
	test_int64{fn: and_Neg9223372036854775807_int64, fnname: "and_Neg9223372036854775807_int64", in: -9223372036854775808, want: -9223372036854775808},
	test_int64{fn: and_int64_Neg9223372036854775807, fnname: "and_int64_Neg9223372036854775807", in: -9223372036854775808, want: -9223372036854775808},
	test_int64{fn: and_Neg9223372036854775807_int64, fnname: "and_Neg9223372036854775807_int64", in: -9223372036854775807, want: -9223372036854775807},
	test_int64{fn: and_int64_Neg9223372036854775807, fnname: "and_int64_Neg9223372036854775807", in: -9223372036854775807, want: -9223372036854775807},
	test_int64{fn: and_Neg9223372036854775807_int64, fnname: "and_Neg9223372036854775807_int64", in: -4294967296, want: -9223372036854775808},
	test_int64{fn: and_int64_Neg9223372036854775807, fnname: "and_int64_Neg9223372036854775807", in: -4294967296, want: -9223372036854775808},
	test_int64{fn: and_Neg9223372036854775807_int64, fnname: "and_Neg9223372036854775807_int64", in: -1, want: -9223372036854775807},
	test_int64{fn: and_int64_Neg9223372036854775807, fnname: "and_int64_Neg9223372036854775807", in: -1, want: -9223372036854775807},
	test_int64{fn: and_Neg9223372036854775807_int64, fnname: "and_Neg9223372036854775807_int64", in: 0, want: 0},
	test_int64{fn: and_int64_Neg9223372036854775807, fnname: "and_int64_Neg9223372036854775807", in: 0, want: 0},
	test_int64{fn: and_Neg9223372036854775807_int64, fnname: "and_Neg9223372036854775807_int64", in: 1, want: 1},
	test_int64{fn: and_int64_Neg9223372036854775807, fnname: "and_int64_Neg9223372036854775807", in: 1, want: 1},
	test_int64{fn: and_Neg9223372036854775807_int64, fnname: "and_Neg9223372036854775807_int64", in: 4294967296, want: 0},
	test_int64{fn: and_int64_Neg9223372036854775807, fnname: "and_int64_Neg9223372036854775807", in: 4294967296, want: 0},
	test_int64{fn: and_Neg9223372036854775807_int64, fnname: "and_Neg9223372036854775807_int64", in: 9223372036854775806, want: 0},
	test_int64{fn: and_int64_Neg9223372036854775807, fnname: "and_int64_Neg9223372036854775807", in: 9223372036854775806, want: 0},
	test_int64{fn: and_Neg9223372036854775807_int64, fnname: "and_Neg9223372036854775807_int64", in: 9223372036854775807, want: 1},
	test_int64{fn: and_int64_Neg9223372036854775807, fnname: "and_int64_Neg9223372036854775807", in: 9223372036854775807, want: 1},
	test_int64{fn: and_Neg4294967296_int64, fnname: "and_Neg4294967296_int64", in: -9223372036854775808, want: -9223372036854775808},
	test_int64{fn: and_int64_Neg4294967296, fnname: "and_int64_Neg4294967296", in: -9223372036854775808, want: -9223372036854775808},
	test_int64{fn: and_Neg4294967296_int64, fnname: "and_Neg4294967296_int64", in: -9223372036854775807, want: -9223372036854775808},
	test_int64{fn: and_int64_Neg4294967296, fnname: "and_int64_Neg4294967296", in: -9223372036854775807, want: -9223372036854775808},
	test_int64{fn: and_Neg4294967296_int64, fnname: "and_Neg4294967296_int64", in: -4294967296, want: -4294967296},
	test_int64{fn: and_int64_Neg4294967296, fnname: "and_int64_Neg4294967296", in: -4294967296, want: -4294967296},
	test_int64{fn: and_Neg4294967296_int64, fnname: "and_Neg4294967296_int64", in: -1, want: -4294967296},
	test_int64{fn: and_int64_Neg4294967296, fnname: "and_int64_Neg4294967296", in: -1, want: -4294967296},
	test_int64{fn: and_Neg4294967296_int64, fnname: "and_Neg4294967296_int64", in: 0, want: 0},
	test_int64{fn: and_int64_Neg4294967296, fnname: "and_int64_Neg4294967296", in: 0, want: 0},
	test_int64{fn: and_Neg4294967296_int64, fnname: "and_Neg4294967296_int64", in: 1, want: 0},
	test_int64{fn: and_int64_Neg4294967296, fnname: "and_int64_Neg4294967296", in: 1, want: 0},
	test_int64{fn: and_Neg4294967296_int64, fnname: "and_Neg4294967296_int64", in: 4294967296, want: 4294967296},
	test_int64{fn: and_int64_Neg4294967296, fnname: "and_int64_Neg4294967296", in: 4294967296, want: 4294967296},
	test_int64{fn: and_Neg4294967296_int64, fnname: "and_Neg4294967296_int64", in: 9223372036854775806, want: 9223372032559808512},
	test_int64{fn: and_int64_Neg4294967296, fnname: "and_int64_Neg4294967296", in: 9223372036854775806, want: 9223372032559808512},
	test_int64{fn: and_Neg4294967296_int64, fnname: "and_Neg4294967296_int64", in: 9223372036854775807, want: 9223372032559808512},
	test_int64{fn: and_int64_Neg4294967296, fnname: "and_int64_Neg4294967296", in: 9223372036854775807, want: 9223372032559808512},
	test_int64{fn: and_Neg1_int64, fnname: "and_Neg1_int64", in: -9223372036854775808, want: -9223372036854775808},
	test_int64{fn: and_int64_Neg1, fnname: "and_int64_Neg1", in: -9223372036854775808, want: -9223372036854775808},
	test_int64{fn: and_Neg1_int64, fnname: "and_Neg1_int64", in: -9223372036854775807, want: -9223372036854775807},
	test_int64{fn: and_int64_Neg1, fnname: "and_int64_Neg1", in: -9223372036854775807, want: -9223372036854775807},
	test_int64{fn: and_Neg1_int64, fnname: "and_Neg1_int64", in: -4294967296, want: -4294967296},
	test_int64{fn: and_int64_Neg1, fnname: "and_int64_Neg1", in: -4294967296, want: -4294967296},
	test_int64{fn: and_Neg1_int64, fnname: "and_Neg1_int64", in: -1, want: -1},
	test_int64{fn: and_int64_Neg1, fnname: "and_int64_Neg1", in: -1, want: -1},
	test_int64{fn: and_Neg1_int64, fnname: "and_Neg1_int64", in: 0, want: 0},
	test_int64{fn: and_int64_Neg1, fnname: "and_int64_Neg1", in: 0, want: 0},
	test_int64{fn: and_Neg1_int64, fnname: "and_Neg1_int64", in: 1, want: 1},
	test_int64{fn: and_int64_Neg1, fnname: "and_int64_Neg1", in: 1, want: 1},
	test_int64{fn: and_Neg1_int64, fnname: "and_Neg1_int64", in: 4294967296, want: 4294967296},
	test_int64{fn: and_int64_Neg1, fnname: "and_int64_Neg1", in: 4294967296, want: 4294967296},
	test_int64{fn: and_Neg1_int64, fnname: "and_Neg1_int64", in: 9223372036854775806, want: 9223372036854775806},
	test_int64{fn: and_int64_Neg1, fnname: "and_int64_Neg1", in: 9223372036854775806, want: 9223372036854775806},
	test_int64{fn: and_Neg1_int64, fnname: "and_Neg1_int64", in: 9223372036854775807, want: 9223372036854775807},
	test_int64{fn: and_int64_Neg1, fnname: "and_int64_Neg1", in: 9223372036854775807, want: 9223372036854775807},
	test_int64{fn: and_0_int64, fnname: "and_0_int64", in: -9223372036854775808, want: 0},
	test_int64{fn: and_int64_0, fnname: "and_int64_0", in: -9223372036854775808, want: 0},
	test_int64{fn: and_0_int64, fnname: "and_0_int64", in: -9223372036854775807, want: 0},
	test_int64{fn: and_int64_0, fnname: "and_int64_0", in: -9223372036854775807, want: 0},
	test_int64{fn: and_0_int64, fnname: "and_0_int64", in: -4294967296, want: 0},
	test_int64{fn: and_int64_0, fnname: "and_int64_0", in: -4294967296, want: 0},
	test_int64{fn: and_0_int64, fnname: "and_0_int64", in: -1, want: 0},
	test_int64{fn: and_int64_0, fnname: "and_int64_0", in: -1, want: 0},
	test_int64{fn: and_0_int64, fnname: "and_0_int64", in: 0, want: 0},
	test_int64{fn: and_int64_0, fnname: "and_int64_0", in: 0, want: 0},
	test_int64{fn: and_0_int64, fnname: "and_0_int64", in: 1, want: 0},
	test_int64{fn: and_int64_0, fnname: "and_int64_0", in: 1, want: 0},
	test_int64{fn: and_0_int64, fnname: "and_0_int64", in: 4294967296, want: 0},
	test_int64{fn: and_int64_0, fnname: "and_int64_0", in: 4294967296, want: 0},
	test_int64{fn: and_0_int64, fnname: "and_0_int64", in: 9223372036854775806, want: 0},
	test_int64{fn: and_int64_0, fnname: "and_int64_0", in: 9223372036854775806, want: 0},
	test_int64{fn: and_0_int64, fnname: "and_0_int64", in: 9223372036854775807, want: 0},
	test_int64{fn: and_int64_0, fnname: "and_int64_0", in: 9223372036854775807, want: 0},
	test_int64{fn: and_1_int64, fnname: "and_1_int64", in: -9223372036854775808, want: 0},
	test_int64{fn: and_int64_1, fnname: "and_int64_1", in: -9223372036854775808, want: 0},
	test_int64{fn: and_1_int64, fnname: "and_1_int64", in: -9223372036854775807, want: 1},
	test_int64{fn: and_int64_1, fnname: "and_int64_1", in: -9223372036854775807, want: 1},
	test_int64{fn: and_1_int64, fnname: "and_1_int64", in: -4294967296, want: 0},
	test_int64{fn: and_int64_1, fnname: "and_int64_1", in: -4294967296, want: 0},
	test_int64{fn: and_1_int64, fnname: "and_1_int64", in: -1, want: 1},
	test_int64{fn: and_int64_1, fnname: "and_int64_1", in: -1, want: 1},
	test_int64{fn: and_1_int64, fnname: "and_1_int64", in: 0, want: 0},
	test_int64{fn: and_int64_1, fnname: "and_int64_1", in: 0, want: 0},
	test_int64{fn: and_1_int64, fnname: "and_1_int64", in: 1, want: 1},
	test_int64{fn: and_int64_1, fnname: "and_int64_1", in: 1, want: 1},
	test_int64{fn: and_1_int64, fnname: "and_1_int64", in: 4294967296, want: 0},
	test_int64{fn: and_int64_1, fnname: "and_int64_1", in: 4294967296, want: 0},
	test_int64{fn: and_1_int64, fnname: "and_1_int64", in: 9223372036854775806, want: 0},
	test_int64{fn: and_int64_1, fnname: "and_int64_1", in: 9223372036854775806, want: 0},
	test_int64{fn: and_1_int64, fnname: "and_1_int64", in: 9223372036854775807, want: 1},
	test_int64{fn: and_int64_1, fnname: "and_int64_1", in: 9223372036854775807, want: 1},
	test_int64{fn: and_4294967296_int64, fnname: "and_4294967296_int64", in: -9223372036854775808, want: 0},
	test_int64{fn: and_int64_4294967296, fnname: "and_int64_4294967296", in: -9223372036854775808, want: 0},
	test_int64{fn: and_4294967296_int64, fnname: "and_4294967296_int64", in: -9223372036854775807, want: 0},
	test_int64{fn: and_int64_4294967296, fnname: "and_int64_4294967296", in: -9223372036854775807, want: 0},
	test_int64{fn: and_4294967296_int64, fnname: "and_4294967296_int64", in: -4294967296, want: 4294967296},
	test_int64{fn: and_int64_4294967296, fnname: "and_int64_4294967296", in: -4294967296, want: 4294967296},
	test_int64{fn: and_4294967296_int64, fnname: "and_4294967296_int64", in: -1, want: 4294967296},
	test_int64{fn: and_int64_4294967296, fnname: "and_int64_4294967296", in: -1, want: 4294967296},
	test_int64{fn: and_4294967296_int64, fnname: "and_4294967296_int64", in: 0, want: 0},
	test_int64{fn: and_int64_4294967296, fnname: "and_int64_4294967296", in: 0, want: 0},
	test_int64{fn: and_4294967296_int64, fnname: "and_4294967296_int64", in: 1, want: 0},
	test_int64{fn: and_int64_4294967296, fnname: "and_int64_4294967296", in: 1, want: 0},
	test_int64{fn: and_4294967296_int64, fnname: "and_4294967296_int64", in: 4294967296, want: 4294967296},
	test_int64{fn: and_int64_4294967296, fnname: "and_int64_4294967296", in: 4294967296, want: 4294967296},
	test_int64{fn: and_4294967296_int64, fnname: "and_4294967296_int64", in: 9223372036854775806, want: 4294967296},
	test_int64{fn: and_int64_4294967296, fnname: "and_int64_4294967296", in: 9223372036854775806, want: 4294967296},
	test_int64{fn: and_4294967296_int64, fnname: "and_4294967296_int64", in: 9223372036854775807, want: 4294967296},
	test_int64{fn: and_int64_4294967296, fnname: "and_int64_4294967296", in: 9223372036854775807, want: 4294967296},
	test_int64{fn: and_9223372036854775806_int64, fnname: "and_9223372036854775806_int64", in: -9223372036854775808, want: 0},
	test_int64{fn: and_int64_9223372036854775806, fnname: "and_int64_9223372036854775806", in: -9223372036854775808, want: 0},
	test_int64{fn: and_9223372036854775806_int64, fnname: "and_9223372036854775806_int64", in: -9223372036854775807, want: 0},
	test_int64{fn: and_int64_9223372036854775806, fnname: "and_int64_9223372036854775806", in: -9223372036854775807, want: 0},
	test_int64{fn: and_9223372036854775806_int64, fnname: "and_9223372036854775806_int64", in: -4294967296, want: 9223372032559808512},
	test_int64{fn: and_int64_9223372036854775806, fnname: "and_int64_9223372036854775806", in: -4294967296, want: 9223372032559808512},
	test_int64{fn: and_9223372036854775806_int64, fnname: "and_9223372036854775806_int64", in: -1, want: 9223372036854775806},
	test_int64{fn: and_int64_9223372036854775806, fnname: "and_int64_9223372036854775806", in: -1, want: 9223372036854775806},
	test_int64{fn: and_9223372036854775806_int64, fnname: "and_9223372036854775806_int64", in: 0, want: 0},
	test_int64{fn: and_int64_9223372036854775806, fnname: "and_int64_9223372036854775806", in: 0, want: 0},
	test_int64{fn: and_9223372036854775806_int64, fnname: "and_9223372036854775806_int64", in: 1, want: 0},
	test_int64{fn: and_int64_9223372036854775806, fnname: "and_int64_9223372036854775806", in: 1, want: 0},
	test_int64{fn: and_9223372036854775806_int64, fnname: "and_9223372036854775806_int64", in: 4294967296, want: 4294967296},
	test_int64{fn: and_int64_9223372036854775806, fnname: "and_int64_9223372036854775806", in: 4294967296, want: 4294967296},
	test_int64{fn: and_9223372036854775806_int64, fnname: "and_9223372036854775806_int64", in: 9223372036854775806, want: 9223372036854775806},
	test_int64{fn: and_int64_9223372036854775806, fnname: "and_int64_9223372036854775806", in: 9223372036854775806, want: 9223372036854775806},
	test_int64{fn: and_9223372036854775806_int64, fnname: "and_9223372036854775806_int64", in: 9223372036854775807, want: 9223372036854775806},
	test_int64{fn: and_int64_9223372036854775806, fnname: "and_int64_9223372036854775806", in: 9223372036854775807, want: 9223372036854775806},
	test_int64{fn: and_9223372036854775807_int64, fnname: "and_9223372036854775807_int64", in: -9223372036854775808, want: 0},
	test_int64{fn: and_int64_9223372036854775807, fnname: "and_int64_9223372036854775807", in: -9223372036854775808, want: 0},
	test_int64{fn: and_9223372036854775807_int64, fnname: "and_9223372036854775807_int64", in: -9223372036854775807, want: 1},
	test_int64{fn: and_int64_9223372036854775807, fnname: "and_int64_9223372036854775807", in: -9223372036854775807, want: 1},
	test_int64{fn: and_9223372036854775807_int64, fnname: "and_9223372036854775807_int64", in: -4294967296, want: 9223372032559808512},
	test_int64{fn: and_int64_9223372036854775807, fnname: "and_int64_9223372036854775807", in: -4294967296, want: 9223372032559808512},
	test_int64{fn: and_9223372036854775807_int64, fnname: "and_9223372036854775807_int64", in: -1, want: 9223372036854775807},
	test_int64{fn: and_int64_9223372036854775807, fnname: "and_int64_9223372036854775807", in: -1, want: 9223372036854775807},
	test_int64{fn: and_9223372036854775807_int64, fnname: "and_9223372036854775807_int64", in: 0, want: 0},
	test_int64{fn: and_int64_9223372036854775807, fnname: "and_int64_9223372036854775807", in: 0, want: 0},
	test_int64{fn: and_9223372036854775807_int64, fnname: "and_9223372036854775807_int64", in: 1, want: 1},
	test_int64{fn: and_int64_9223372036854775807, fnname: "and_int64_9223372036854775807", in: 1, want: 1},
	test_int64{fn: and_9223372036854775807_int64, fnname: "and_9223372036854775807_int64", in: 4294967296, want: 4294967296},
	test_int64{fn: and_int64_9223372036854775807, fnname: "and_int64_9223372036854775807", in: 4294967296, want: 4294967296},
	test_int64{fn: and_9223372036854775807_int64, fnname: "and_9223372036854775807_int64", in: 9223372036854775806, want: 9223372036854775806},
	test_int64{fn: and_int64_9223372036854775807, fnname: "and_int64_9223372036854775807", in: 9223372036854775806, want: 9223372036854775806},
	test_int64{fn: and_9223372036854775807_int64, fnname: "and_9223372036854775807_int64", in: 9223372036854775807, want: 9223372036854775807},
	test_int64{fn: and_int64_9223372036854775807, fnname: "and_int64_9223372036854775807", in: 9223372036854775807, want: 9223372036854775807},
	test_int64{fn: or_Neg9223372036854775808_int64, fnname: "or_Neg9223372036854775808_int64", in: -9223372036854775808, want: -9223372036854775808},
	test_int64{fn: or_int64_Neg9223372036854775808, fnname: "or_int64_Neg9223372036854775808", in: -9223372036854775808, want: -9223372036854775808},
	test_int64{fn: or_Neg9223372036854775808_int64, fnname: "or_Neg9223372036854775808_int64", in: -9223372036854775807, want: -9223372036854775807},
	test_int64{fn: or_int64_Neg9223372036854775808, fnname: "or_int64_Neg9223372036854775808", in: -9223372036854775807, want: -9223372036854775807},
	test_int64{fn: or_Neg9223372036854775808_int64, fnname: "or_Neg9223372036854775808_int64", in: -4294967296, want: -4294967296},
	test_int64{fn: or_int64_Neg9223372036854775808, fnname: "or_int64_Neg9223372036854775808", in: -4294967296, want: -4294967296},
	test_int64{fn: or_Neg9223372036854775808_int64, fnname: "or_Neg9223372036854775808_int64", in: -1, want: -1},
	test_int64{fn: or_int64_Neg9223372036854775808, fnname: "or_int64_Neg9223372036854775808", in: -1, want: -1},
	test_int64{fn: or_Neg9223372036854775808_int64, fnname: "or_Neg9223372036854775808_int64", in: 0, want: -9223372036854775808},
	test_int64{fn: or_int64_Neg9223372036854775808, fnname: "or_int64_Neg9223372036854775808", in: 0, want: -9223372036854775808},
	test_int64{fn: or_Neg9223372036854775808_int64, fnname: "or_Neg9223372036854775808_int64", in: 1, want: -9223372036854775807},
	test_int64{fn: or_int64_Neg9223372036854775808, fnname: "or_int64_Neg9223372036854775808", in: 1, want: -9223372036854775807},
	test_int64{fn: or_Neg9223372036854775808_int64, fnname: "or_Neg9223372036854775808_int64", in: 4294967296, want: -9223372032559808512},
	test_int64{fn: or_int64_Neg9223372036854775808, fnname: "or_int64_Neg9223372036854775808", in: 4294967296, want: -9223372032559808512},
	test_int64{fn: or_Neg9223372036854775808_int64, fnname: "or_Neg9223372036854775808_int64", in: 9223372036854775806, want: -2},
	test_int64{fn: or_int64_Neg9223372036854775808, fnname: "or_int64_Neg9223372036854775808", in: 9223372036854775806, want: -2},
	test_int64{fn: or_Neg9223372036854775808_int64, fnname: "or_Neg9223372036854775808_int64", in: 9223372036854775807, want: -1},
	test_int64{fn: or_int64_Neg9223372036854775808, fnname: "or_int64_Neg9223372036854775808", in: 9223372036854775807, want: -1},
	test_int64{fn: or_Neg9223372036854775807_int64, fnname: "or_Neg9223372036854775807_int64", in: -9223372036854775808, want: -9223372036854775807},
	test_int64{fn: or_int64_Neg9223372036854775807, fnname: "or_int64_Neg9223372036854775807", in: -9223372036854775808, want: -9223372036854775807},
	test_int64{fn: or_Neg9223372036854775807_int64, fnname: "or_Neg9223372036854775807_int64", in: -9223372036854775807, want: -9223372036854775807},
	test_int64{fn: or_int64_Neg9223372036854775807, fnname: "or_int64_Neg9223372036854775807", in: -9223372036854775807, want: -9223372036854775807},
	test_int64{fn: or_Neg9223372036854775807_int64, fnname: "or_Neg9223372036854775807_int64", in: -4294967296, want: -4294967295},
	test_int64{fn: or_int64_Neg9223372036854775807, fnname: "or_int64_Neg9223372036854775807", in: -4294967296, want: -4294967295},
	test_int64{fn: or_Neg9223372036854775807_int64, fnname: "or_Neg9223372036854775807_int64", in: -1, want: -1},
	test_int64{fn: or_int64_Neg9223372036854775807, fnname: "or_int64_Neg9223372036854775807", in: -1, want: -1},
	test_int64{fn: or_Neg9223372036854775807_int64, fnname: "or_Neg9223372036854775807_int64", in: 0, want: -9223372036854775807},
	test_int64{fn: or_int64_Neg9223372036854775807, fnname: "or_int64_Neg9223372036854775807", in: 0, want: -9223372036854775807},
	test_int64{fn: or_Neg9223372036854775807_int64, fnname: "or_Neg9223372036854775807_int64", in: 1, want: -9223372036854775807},
	test_int64{fn: or_int64_Neg9223372036854775807, fnname: "or_int64_Neg9223372036854775807", in: 1, want: -9223372036854775807},
	test_int64{fn: or_Neg9223372036854775807_int64, fnname: "or_Neg9223372036854775807_int64", in: 4294967296, want: -9223372032559808511},
	test_int64{fn: or_int64_Neg9223372036854775807, fnname: "or_int64_Neg9223372036854775807", in: 4294967296, want: -9223372032559808511},
	test_int64{fn: or_Neg9223372036854775807_int64, fnname: "or_Neg9223372036854775807_int64", in: 9223372036854775806, want: -1},
	test_int64{fn: or_int64_Neg9223372036854775807, fnname: "or_int64_Neg9223372036854775807", in: 9223372036854775806, want: -1},
	test_int64{fn: or_Neg9223372036854775807_int64, fnname: "or_Neg9223372036854775807_int64", in: 9223372036854775807, want: -1},
	test_int64{fn: or_int64_Neg9223372036854775807, fnname: "or_int64_Neg9223372036854775807", in: 9223372036854775807, want: -1},
	test_int64{fn: or_Neg4294967296_int64, fnname: "or_Neg4294967296_int64", in: -9223372036854775808, want: -4294967296},
	test_int64{fn: or_int64_Neg4294967296, fnname: "or_int64_Neg4294967296", in: -9223372036854775808, want: -4294967296},
	test_int64{fn: or_Neg4294967296_int64, fnname: "or_Neg4294967296_int64", in: -9223372036854775807, want: -4294967295},
	test_int64{fn: or_int64_Neg4294967296, fnname: "or_int64_Neg4294967296", in: -9223372036854775807, want: -4294967295},
	test_int64{fn: or_Neg4294967296_int64, fnname: "or_Neg4294967296_int64", in: -4294967296, want: -4294967296},
	test_int64{fn: or_int64_Neg4294967296, fnname: "or_int64_Neg4294967296", in: -4294967296, want: -4294967296},
	test_int64{fn: or_Neg4294967296_int64, fnname: "or_Neg4294967296_int64", in: -1, want: -1},
	test_int64{fn: or_int64_Neg4294967296, fnname: "or_int64_Neg4294967296", in: -1, want: -1},
	test_int64{fn: or_Neg4294967296_int64, fnname: "or_Neg4294967296_int64", in: 0, want: -4294967296},
	test_int64{fn: or_int64_Neg4294967296, fnname: "or_int64_Neg4294967296", in: 0, want: -4294967296},
	test_int64{fn: or_Neg4294967296_int64, fnname: "or_Neg4294967296_int64", in: 1, want: -4294967295},
	test_int64{fn: or_int64_Neg4294967296, fnname: "or_int64_Neg4294967296", in: 1, want: -4294967295},
	test_int64{fn: or_Neg4294967296_int64, fnname: "or_Neg4294967296_int64", in: 4294967296, want: -4294967296},
	test_int64{fn: or_int64_Neg4294967296, fnname: "or_int64_Neg4294967296", in: 4294967296, want: -4294967296},
	test_int64{fn: or_Neg4294967296_int64, fnname: "or_Neg4294967296_int64", in: 9223372036854775806, want: -2},
	test_int64{fn: or_int64_Neg4294967296, fnname: "or_int64_Neg4294967296", in: 9223372036854775806, want: -2},
	test_int64{fn: or_Neg4294967296_int64, fnname: "or_Neg4294967296_int64", in: 9223372036854775807, want: -1},
	test_int64{fn: or_int64_Neg4294967296, fnname: "or_int64_Neg4294967296", in: 9223372036854775807, want: -1},
	test_int64{fn: or_Neg1_int64, fnname: "or_Neg1_int64", in: -9223372036854775808, want: -1},
	test_int64{fn: or_int64_Neg1, fnname: "or_int64_Neg1", in: -9223372036854775808, want: -1},
	test_int64{fn: or_Neg1_int64, fnname: "or_Neg1_int64", in: -9223372036854775807, want: -1},
	test_int64{fn: or_int64_Neg1, fnname: "or_int64_Neg1", in: -9223372036854775807, want: -1},
	test_int64{fn: or_Neg1_int64, fnname: "or_Neg1_int64", in: -4294967296, want: -1},
	test_int64{fn: or_int64_Neg1, fnname: "or_int64_Neg1", in: -4294967296, want: -1},
	test_int64{fn: or_Neg1_int64, fnname: "or_Neg1_int64", in: -1, want: -1},
	test_int64{fn: or_int64_Neg1, fnname: "or_int64_Neg1", in: -1, want: -1},
	test_int64{fn: or_Neg1_int64, fnname: "or_Neg1_int64", in: 0, want: -1},
	test_int64{fn: or_int64_Neg1, fnname: "or_int64_Neg1", in: 0, want: -1},
	test_int64{fn: or_Neg1_int64, fnname: "or_Neg1_int64", in: 1, want: -1},
	test_int64{fn: or_int64_Neg1, fnname: "or_int64_Neg1", in: 1, want: -1},
	test_int64{fn: or_Neg1_int64, fnname: "or_Neg1_int64", in: 4294967296, want: -1},
	test_int64{fn: or_int64_Neg1, fnname: "or_int64_Neg1", in: 4294967296, want: -1},
	test_int64{fn: or_Neg1_int64, fnname: "or_Neg1_int64", in: 9223372036854775806, want: -1},
	test_int64{fn: or_int64_Neg1, fnname: "or_int64_Neg1", in: 9223372036854775806, want: -1},
	test_int64{fn: or_Neg1_int64, fnname: "or_Neg1_int64", in: 9223372036854775807, want: -1},
	test_int64{fn: or_int64_Neg1, fnname: "or_int64_Neg1", in: 9223372036854775807, want: -1},
	test_int64{fn: or_0_int64, fnname: "or_0_int64", in: -9223372036854775808, want: -9223372036854775808},
	test_int64{fn: or_int64_0, fnname: "or_int64_0", in: -9223372036854775808, want: -9223372036854775808},
	test_int64{fn: or_0_int64, fnname: "or_0_int64", in: -9223372036854775807, want: -9223372036854775807},
	test_int64{fn: or_int64_0, fnname: "or_int64_0", in: -9223372036854775807, want: -9223372036854775807},
	test_int64{fn: or_0_int64, fnname: "or_0_int64", in: -4294967296, want: -4294967296},
	test_int64{fn: or_int64_0, fnname: "or_int64_0", in: -4294967296, want: -4294967296},
	test_int64{fn: or_0_int64, fnname: "or_0_int64", in: -1, want: -1},
	test_int64{fn: or_int64_0, fnname: "or_int64_0", in: -1, want: -1},
	test_int64{fn: or_0_int64, fnname: "or_0_int64", in: 0, want: 0},
	test_int64{fn: or_int64_0, fnname: "or_int64_0", in: 0, want: 0},
	test_int64{fn: or_0_int64, fnname: "or_0_int64", in: 1, want: 1},
	test_int64{fn: or_int64_0, fnname: "or_int64_0", in: 1, want: 1},
	test_int64{fn: or_0_int64, fnname: "or_0_int64", in: 4294967296, want: 4294967296},
	test_int64{fn: or_int64_0, fnname: "or_int64_0", in: 4294967296, want: 4294967296},
	test_int64{fn: or_0_int64, fnname: "or_0_int64", in: 9223372036854775806, want: 9223372036854775806},
	test_int64{fn: or_int64_0, fnname: "or_int64_0", in: 9223372036854775806, want: 9223372036854775806},
	test_int64{fn: or_0_int64, fnname: "or_0_int64", in: 9223372036854775807, want: 9223372036854775807},
	test_int64{fn: or_int64_0, fnname: "or_int64_0", in: 9223372036854775807, want: 9223372036854775807},
	test_int64{fn: or_1_int64, fnname: "or_1_int64", in: -9223372036854775808, want: -9223372036854775807},
	test_int64{fn: or_int64_1, fnname: "or_int64_1", in: -9223372036854775808, want: -9223372036854775807},
	test_int64{fn: or_1_int64, fnname: "or_1_int64", in: -9223372036854775807, want: -9223372036854775807},
	test_int64{fn: or_int64_1, fnname: "or_int64_1", in: -9223372036854775807, want: -9223372036854775807},
	test_int64{fn: or_1_int64, fnname: "or_1_int64", in: -4294967296, want: -4294967295},
	test_int64{fn: or_int64_1, fnname: "or_int64_1", in: -4294967296, want: -4294967295},
	test_int64{fn: or_1_int64, fnname: "or_1_int64", in: -1, want: -1},
	test_int64{fn: or_int64_1, fnname: "or_int64_1", in: -1, want: -1},
	test_int64{fn: or_1_int64, fnname: "or_1_int64", in: 0, want: 1},
	test_int64{fn: or_int64_1, fnname: "or_int64_1", in: 0, want: 1},
	test_int64{fn: or_1_int64, fnname: "or_1_int64", in: 1, want: 1},
	test_int64{fn: or_int64_1, fnname: "or_int64_1", in: 1, want: 1},
	test_int64{fn: or_1_int64, fnname: "or_1_int64", in: 4294967296, want: 4294967297},
	test_int64{fn: or_int64_1, fnname: "or_int64_1", in: 4294967296, want: 4294967297},
	test_int64{fn: or_1_int64, fnname: "or_1_int64", in: 9223372036854775806, want: 9223372036854775807},
	test_int64{fn: or_int64_1, fnname: "or_int64_1", in: 9223372036854775806, want: 9223372036854775807},
	test_int64{fn: or_1_int64, fnname: "or_1_int64", in: 9223372036854775807, want: 9223372036854775807},
	test_int64{fn: or_int64_1, fnname: "or_int64_1", in: 9223372036854775807, want: 9223372036854775807},
	test_int64{fn: or_4294967296_int64, fnname: "or_4294967296_int64", in: -9223372036854775808, want: -9223372032559808512},
	test_int64{fn: or_int64_4294967296, fnname: "or_int64_4294967296", in: -9223372036854775808, want: -9223372032559808512},
	test_int64{fn: or_4294967296_int64, fnname: "or_4294967296_int64", in: -9223372036854775807, want: -9223372032559808511},
	test_int64{fn: or_int64_4294967296, fnname: "or_int64_4294967296", in: -9223372036854775807, want: -9223372032559808511},
	test_int64{fn: or_4294967296_int64, fnname: "or_4294967296_int64", in: -4294967296, want: -4294967296},
	test_int64{fn: or_int64_4294967296, fnname: "or_int64_4294967296", in: -4294967296, want: -4294967296},
	test_int64{fn: or_4294967296_int64, fnname: "or_4294967296_int64", in: -1, want: -1},
	test_int64{fn: or_int64_4294967296, fnname: "or_int64_4294967296", in: -1, want: -1},
	test_int64{fn: or_4294967296_int64, fnname: "or_4294967296_int64", in: 0, want: 4294967296},
	test_int64{fn: or_int64_4294967296, fnname: "or_int64_4294967296", in: 0, want: 4294967296},
	test_int64{fn: or_4294967296_int64, fnname: "or_4294967296_int64", in: 1, want: 4294967297},
	test_int64{fn: or_int64_4294967296, fnname: "or_int64_4294967296", in: 1, want: 4294967297},
	test_int64{fn: or_4294967296_int64, fnname: "or_4294967296_int64", in: 4294967296, want: 4294967296},
	test_int64{fn: or_int64_4294967296, fnname: "or_int64_4294967296", in: 4294967296, want: 4294967296},
	test_int64{fn: or_4294967296_int64, fnname: "or_4294967296_int64", in: 9223372036854775806, want: 9223372036854775806},
	test_int64{fn: or_int64_4294967296, fnname: "or_int64_4294967296", in: 9223372036854775806, want: 9223372036854775806},
	test_int64{fn: or_4294967296_int64, fnname: "or_4294967296_int64", in: 9223372036854775807, want: 9223372036854775807},
	test_int64{fn: or_int64_4294967296, fnname: "or_int64_4294967296", in: 9223372036854775807, want: 9223372036854775807},
	test_int64{fn: or_9223372036854775806_int64, fnname: "or_9223372036854775806_int64", in: -9223372036854775808, want: -2},
	test_int64{fn: or_int64_9223372036854775806, fnname: "or_int64_9223372036854775806", in: -9223372036854775808, want: -2},
	test_int64{fn: or_9223372036854775806_int64, fnname: "or_9223372036854775806_int64", in: -9223372036854775807, want: -1},
	test_int64{fn: or_int64_9223372036854775806, fnname: "or_int64_9223372036854775806", in: -9223372036854775807, want: -1},
	test_int64{fn: or_9223372036854775806_int64, fnname: "or_9223372036854775806_int64", in: -4294967296, want: -2},
	test_int64{fn: or_int64_9223372036854775806, fnname: "or_int64_9223372036854775806", in: -4294967296, want: -2},
	test_int64{fn: or_9223372036854775806_int64, fnname: "or_9223372036854775806_int64", in: -1, want: -1},
	test_int64{fn: or_int64_9223372036854775806, fnname: "or_int64_9223372036854775806", in: -1, want: -1},
	test_int64{fn: or_9223372036854775806_int64, fnname: "or_9223372036854775806_int64", in: 0, want: 9223372036854775806},
	test_int64{fn: or_int64_9223372036854775806, fnname: "or_int64_9223372036854775806", in: 0, want: 9223372036854775806},
	test_int64{fn: or_9223372036854775806_int64, fnname: "or_9223372036854775806_int64", in: 1, want: 9223372036854775807},
	test_int64{fn: or_int64_9223372036854775806, fnname: "or_int64_9223372036854775806", in: 1, want: 9223372036854775807},
	test_int64{fn: or_9223372036854775806_int64, fnname: "or_9223372036854775806_int64", in: 4294967296, want: 9223372036854775806},
	test_int64{fn: or_int64_9223372036854775806, fnname: "or_int64_9223372036854775806", in: 4294967296, want: 9223372036854775806},
	test_int64{fn: or_9223372036854775806_int64, fnname: "or_9223372036854775806_int64", in: 9223372036854775806, want: 9223372036854775806},
	test_int64{fn: or_int64_9223372036854775806, fnname: "or_int64_9223372036854775806", in: 9223372036854775806, want: 9223372036854775806},
	test_int64{fn: or_9223372036854775806_int64, fnname: "or_9223372036854775806_int64", in: 9223372036854775807, want: 9223372036854775807},
	test_int64{fn: or_int64_9223372036854775806, fnname: "or_int64_9223372036854775806", in: 9223372036854775807, want: 9223372036854775807},
	test_int64{fn: or_9223372036854775807_int64, fnname: "or_9223372036854775807_int64", in: -9223372036854775808, want: -1},
	test_int64{fn: or_int64_9223372036854775807, fnname: "or_int64_9223372036854775807", in: -9223372036854775808, want: -1},
	test_int64{fn: or_9223372036854775807_int64, fnname: "or_9223372036854775807_int64", in: -9223372036854775807, want: -1},
	test_int64{fn: or_int64_9223372036854775807, fnname: "or_int64_9223372036854775807", in: -9223372036854775807, want: -1},
	test_int64{fn: or_9223372036854775807_int64, fnname: "or_9223372036854775807_int64", in: -4294967296, want: -1},
	test_int64{fn: or_int64_9223372036854775807, fnname: "or_int64_9223372036854775807", in: -4294967296, want: -1},
	test_int64{fn: or_9223372036854775807_int64, fnname: "or_9223372036854775807_int64", in: -1, want: -1},
	test_int64{fn: or_int64_9223372036854775807, fnname: "or_int64_9223372036854775807", in: -1, want: -1},
	test_int64{fn: or_9223372036854775807_int64, fnname: "or_9223372036854775807_int64", in: 0, want: 9223372036854775807},
	test_int64{fn: or_int64_9223372036854775807, fnname: "or_int64_9223372036854775807", in: 0, want: 9223372036854775807},
	test_int64{fn: or_9223372036854775807_int64, fnname: "or_9223372036854775807_int64", in: 1, want: 9223372036854775807},
	test_int64{fn: or_int64_9223372036854775807, fnname: "or_int64_9223372036854775807", in: 1, want: 9223372036854775807},
	test_int64{fn: or_9223372036854775807_int64, fnname: "or_9223372036854775807_int64", in: 4294967296, want: 9223372036854775807},
	test_int64{fn: or_int64_9223372036854775807, fnname: "or_int64_9223372036854775807", in: 4294967296, want: 9223372036854775807},
	test_int64{fn: or_9223372036854775807_int64, fnname: "or_9223372036854775807_int64", in: 9223372036854775806, want: 9223372036854775807},
	test_int64{fn: or_int64_9223372036854775807, fnname: "or_int64_9223372036854775807", in: 9223372036854775806, want: 9223372036854775807},
	test_int64{fn: or_9223372036854775807_int64, fnname: "or_9223372036854775807_int64", in: 9223372036854775807, want: 9223372036854775807},
	test_int64{fn: or_int64_9223372036854775807, fnname: "or_int64_9223372036854775807", in: 9223372036854775807, want: 9223372036854775807},
	test_int64{fn: xor_Neg9223372036854775808_int64, fnname: "xor_Neg9223372036854775808_int64", in: -9223372036854775808, want: 0},
	test_int64{fn: xor_int64_Neg9223372036854775808, fnname: "xor_int64_Neg9223372036854775808", in: -9223372036854775808, want: 0},
	test_int64{fn: xor_Neg9223372036854775808_int64, fnname: "xor_Neg9223372036854775808_int64", in: -9223372036854775807, want: 1},
	test_int64{fn: xor_int64_Neg9223372036854775808, fnname: "xor_int64_Neg9223372036854775808", in: -9223372036854775807, want: 1},
	test_int64{fn: xor_Neg9223372036854775808_int64, fnname: "xor_Neg9223372036854775808_int64", in: -4294967296, want: 9223372032559808512},
	test_int64{fn: xor_int64_Neg9223372036854775808, fnname: "xor_int64_Neg9223372036854775808", in: -4294967296, want: 9223372032559808512},
	test_int64{fn: xor_Neg9223372036854775808_int64, fnname: "xor_Neg9223372036854775808_int64", in: -1, want: 9223372036854775807},
	test_int64{fn: xor_int64_Neg9223372036854775808, fnname: "xor_int64_Neg9223372036854775808", in: -1, want: 9223372036854775807},
	test_int64{fn: xor_Neg9223372036854775808_int64, fnname: "xor_Neg9223372036854775808_int64", in: 0, want: -9223372036854775808},
	test_int64{fn: xor_int64_Neg9223372036854775808, fnname: "xor_int64_Neg9223372036854775808", in: 0, want: -9223372036854775808},
	test_int64{fn: xor_Neg9223372036854775808_int64, fnname: "xor_Neg9223372036854775808_int64", in: 1, want: -9223372036854775807},
	test_int64{fn: xor_int64_Neg9223372036854775808, fnname: "xor_int64_Neg9223372036854775808", in: 1, want: -9223372036854775807},
	test_int64{fn: xor_Neg9223372036854775808_int64, fnname: "xor_Neg9223372036854775808_int64", in: 4294967296, want: -9223372032559808512},
	test_int64{fn: xor_int64_Neg9223372036854775808, fnname: "xor_int64_Neg9223372036854775808", in: 4294967296, want: -9223372032559808512},
	test_int64{fn: xor_Neg9223372036854775808_int64, fnname: "xor_Neg9223372036854775808_int64", in: 9223372036854775806, want: -2},
	test_int64{fn: xor_int64_Neg9223372036854775808, fnname: "xor_int64_Neg9223372036854775808", in: 9223372036854775806, want: -2},
	test_int64{fn: xor_Neg9223372036854775808_int64, fnname: "xor_Neg9223372036854775808_int64", in: 9223372036854775807, want: -1},
	test_int64{fn: xor_int64_Neg9223372036854775808, fnname: "xor_int64_Neg9223372036854775808", in: 9223372036854775807, want: -1},
	test_int64{fn: xor_Neg9223372036854775807_int64, fnname: "xor_Neg9223372036854775807_int64", in: -9223372036854775808, want: 1},
	test_int64{fn: xor_int64_Neg9223372036854775807, fnname: "xor_int64_Neg9223372036854775807", in: -9223372036854775808, want: 1},
	test_int64{fn: xor_Neg9223372036854775807_int64, fnname: "xor_Neg9223372036854775807_int64", in: -9223372036854775807, want: 0},
	test_int64{fn: xor_int64_Neg9223372036854775807, fnname: "xor_int64_Neg9223372036854775807", in: -9223372036854775807, want: 0},
	test_int64{fn: xor_Neg9223372036854775807_int64, fnname: "xor_Neg9223372036854775807_int64", in: -4294967296, want: 9223372032559808513},
	test_int64{fn: xor_int64_Neg9223372036854775807, fnname: "xor_int64_Neg9223372036854775807", in: -4294967296, want: 9223372032559808513},
	test_int64{fn: xor_Neg9223372036854775807_int64, fnname: "xor_Neg9223372036854775807_int64", in: -1, want: 9223372036854775806},
	test_int64{fn: xor_int64_Neg9223372036854775807, fnname: "xor_int64_Neg9223372036854775807", in: -1, want: 9223372036854775806},
	test_int64{fn: xor_Neg9223372036854775807_int64, fnname: "xor_Neg9223372036854775807_int64", in: 0, want: -9223372036854775807},
	test_int64{fn: xor_int64_Neg9223372036854775807, fnname: "xor_int64_Neg9223372036854775807", in: 0, want: -9223372036854775807},
	test_int64{fn: xor_Neg9223372036854775807_int64, fnname: "xor_Neg9223372036854775807_int64", in: 1, want: -9223372036854775808},
	test_int64{fn: xor_int64_Neg9223372036854775807, fnname: "xor_int64_Neg9223372036854775807", in: 1, want: -9223372036854775808},
	test_int64{fn: xor_Neg9223372036854775807_int64, fnname: "xor_Neg9223372036854775807_int64", in: 4294967296, want: -9223372032559808511},
	test_int64{fn: xor_int64_Neg9223372036854775807, fnname: "xor_int64_Neg9223372036854775807", in: 4294967296, want: -9223372032559808511},
	test_int64{fn: xor_Neg9223372036854775807_int64, fnname: "xor_Neg9223372036854775807_int64", in: 9223372036854775806, want: -1},
	test_int64{fn: xor_int64_Neg9223372036854775807, fnname: "xor_int64_Neg9223372036854775807", in: 9223372036854775806, want: -1},
	test_int64{fn: xor_Neg9223372036854775807_int64, fnname: "xor_Neg9223372036854775807_int64", in: 9223372036854775807, want: -2},
	test_int64{fn: xor_int64_Neg9223372036854775807, fnname: "xor_int64_Neg9223372036854775807", in: 9223372036854775807, want: -2},
	test_int64{fn: xor_Neg4294967296_int64, fnname: "xor_Neg4294967296_int64", in: -9223372036854775808, want: 9223372032559808512},
	test_int64{fn: xor_int64_Neg4294967296, fnname: "xor_int64_Neg4294967296", in: -9223372036854775808, want: 9223372032559808512},
	test_int64{fn: xor_Neg4294967296_int64, fnname: "xor_Neg4294967296_int64", in: -9223372036854775807, want: 9223372032559808513},
	test_int64{fn: xor_int64_Neg4294967296, fnname: "xor_int64_Neg4294967296", in: -9223372036854775807, want: 9223372032559808513},
	test_int64{fn: xor_Neg4294967296_int64, fnname: "xor_Neg4294967296_int64", in: -4294967296, want: 0},
	test_int64{fn: xor_int64_Neg4294967296, fnname: "xor_int64_Neg4294967296", in: -4294967296, want: 0},
	test_int64{fn: xor_Neg4294967296_int64, fnname: "xor_Neg4294967296_int64", in: -1, want: 4294967295},
	test_int64{fn: xor_int64_Neg4294967296, fnname: "xor_int64_Neg4294967296", in: -1, want: 4294967295},
	test_int64{fn: xor_Neg4294967296_int64, fnname: "xor_Neg4294967296_int64", in: 0, want: -4294967296},
	test_int64{fn: xor_int64_Neg4294967296, fnname: "xor_int64_Neg4294967296", in: 0, want: -4294967296},
	test_int64{fn: xor_Neg4294967296_int64, fnname: "xor_Neg4294967296_int64", in: 1, want: -4294967295},
	test_int64{fn: xor_int64_Neg4294967296, fnname: "xor_int64_Neg4294967296", in: 1, want: -4294967295},
	test_int64{fn: xor_Neg4294967296_int64, fnname: "xor_Neg4294967296_int64", in: 4294967296, want: -8589934592},
	test_int64{fn: xor_int64_Neg4294967296, fnname: "xor_int64_Neg4294967296", in: 4294967296, want: -8589934592},
	test_int64{fn: xor_Neg4294967296_int64, fnname: "xor_Neg4294967296_int64", in: 9223372036854775806, want: -9223372032559808514},
	test_int64{fn: xor_int64_Neg4294967296, fnname: "xor_int64_Neg4294967296", in: 9223372036854775806, want: -9223372032559808514},
	test_int64{fn: xor_Neg4294967296_int64, fnname: "xor_Neg4294967296_int64", in: 9223372036854775807, want: -9223372032559808513},
	test_int64{fn: xor_int64_Neg4294967296, fnname: "xor_int64_Neg4294967296", in: 9223372036854775807, want: -9223372032559808513},
	test_int64{fn: xor_Neg1_int64, fnname: "xor_Neg1_int64", in: -9223372036854775808, want: 9223372036854775807},
	test_int64{fn: xor_int64_Neg1, fnname: "xor_int64_Neg1", in: -9223372036854775808, want: 9223372036854775807},
	test_int64{fn: xor_Neg1_int64, fnname: "xor_Neg1_int64", in: -9223372036854775807, want: 9223372036854775806},
	test_int64{fn: xor_int64_Neg1, fnname: "xor_int64_Neg1", in: -9223372036854775807, want: 9223372036854775806},
	test_int64{fn: xor_Neg1_int64, fnname: "xor_Neg1_int64", in: -4294967296, want: 4294967295},
	test_int64{fn: xor_int64_Neg1, fnname: "xor_int64_Neg1", in: -4294967296, want: 4294967295},
	test_int64{fn: xor_Neg1_int64, fnname: "xor_Neg1_int64", in: -1, want: 0},
	test_int64{fn: xor_int64_Neg1, fnname: "xor_int64_Neg1", in: -1, want: 0},
	test_int64{fn: xor_Neg1_int64, fnname: "xor_Neg1_int64", in: 0, want: -1},
	test_int64{fn: xor_int64_Neg1, fnname: "xor_int64_Neg1", in: 0, want: -1},
	test_int64{fn: xor_Neg1_int64, fnname: "xor_Neg1_int64", in: 1, want: -2},
	test_int64{fn: xor_int64_Neg1, fnname: "xor_int64_Neg1", in: 1, want: -2},
	test_int64{fn: xor_Neg1_int64, fnname: "xor_Neg1_int64", in: 4294967296, want: -4294967297},
	test_int64{fn: xor_int64_Neg1, fnname: "xor_int64_Neg1", in: 4294967296, want: -4294967297},
	test_int64{fn: xor_Neg1_int64, fnname: "xor_Neg1_int64", in: 9223372036854775806, want: -9223372036854775807},
	test_int64{fn: xor_int64_Neg1, fnname: "xor_int64_Neg1", in: 9223372036854775806, want: -9223372036854775807},
	test_int64{fn: xor_Neg1_int64, fnname: "xor_Neg1_int64", in: 9223372036854775807, want: -9223372036854775808},
	test_int64{fn: xor_int64_Neg1, fnname: "xor_int64_Neg1", in: 9223372036854775807, want: -9223372036854775808},
	test_int64{fn: xor_0_int64, fnname: "xor_0_int64", in: -9223372036854775808, want: -9223372036854775808},
	test_int64{fn: xor_int64_0, fnname: "xor_int64_0", in: -9223372036854775808, want: -9223372036854775808},
	test_int64{fn: xor_0_int64, fnname: "xor_0_int64", in: -9223372036854775807, want: -9223372036854775807},
	test_int64{fn: xor_int64_0, fnname: "xor_int64_0", in: -9223372036854775807, want: -9223372036854775807},
	test_int64{fn: xor_0_int64, fnname: "xor_0_int64", in: -4294967296, want: -4294967296},
	test_int64{fn: xor_int64_0, fnname: "xor_int64_0", in: -4294967296, want: -4294967296},
	test_int64{fn: xor_0_int64, fnname: "xor_0_int64", in: -1, want: -1},
	test_int64{fn: xor_int64_0, fnname: "xor_int64_0", in: -1, want: -1},
	test_int64{fn: xor_0_int64, fnname: "xor_0_int64", in: 0, want: 0},
	test_int64{fn: xor_int64_0, fnname: "xor_int64_0", in: 0, want: 0},
	test_int64{fn: xor_0_int64, fnname: "xor_0_int64", in: 1, want: 1},
	test_int64{fn: xor_int64_0, fnname: "xor_int64_0", in: 1, want: 1},
	test_int64{fn: xor_0_int64, fnname: "xor_0_int64", in: 4294967296, want: 4294967296},
	test_int64{fn: xor_int64_0, fnname: "xor_int64_0", in: 4294967296, want: 4294967296},
	test_int64{fn: xor_0_int64, fnname: "xor_0_int64", in: 9223372036854775806, want: 9223372036854775806},
	test_int64{fn: xor_int64_0, fnname: "xor_int64_0", in: 9223372036854775806, want: 9223372036854775806},
	test_int64{fn: xor_0_int64, fnname: "xor_0_int64", in: 9223372036854775807, want: 9223372036854775807},
	test_int64{fn: xor_int64_0, fnname: "xor_int64_0", in: 9223372036854775807, want: 9223372036854775807},
	test_int64{fn: xor_1_int64, fnname: "xor_1_int64", in: -9223372036854775808, want: -9223372036854775807},
	test_int64{fn: xor_int64_1, fnname: "xor_int64_1", in: -9223372036854775808, want: -9223372036854775807},
	test_int64{fn: xor_1_int64, fnname: "xor_1_int64", in: -9223372036854775807, want: -9223372036854775808},
	test_int64{fn: xor_int64_1, fnname: "xor_int64_1", in: -9223372036854775807, want: -9223372036854775808},
	test_int64{fn: xor_1_int64, fnname: "xor_1_int64", in: -4294967296, want: -4294967295},
	test_int64{fn: xor_int64_1, fnname: "xor_int64_1", in: -4294967296, want: -4294967295},
	test_int64{fn: xor_1_int64, fnname: "xor_1_int64", in: -1, want: -2},
	test_int64{fn: xor_int64_1, fnname: "xor_int64_1", in: -1, want: -2},
	test_int64{fn: xor_1_int64, fnname: "xor_1_int64", in: 0, want: 1},
	test_int64{fn: xor_int64_1, fnname: "xor_int64_1", in: 0, want: 1},
	test_int64{fn: xor_1_int64, fnname: "xor_1_int64", in: 1, want: 0},
	test_int64{fn: xor_int64_1, fnname: "xor_int64_1", in: 1, want: 0},
	test_int64{fn: xor_1_int64, fnname: "xor_1_int64", in: 4294967296, want: 4294967297},
	test_int64{fn: xor_int64_1, fnname: "xor_int64_1", in: 4294967296, want: 4294967297},
	test_int64{fn: xor_1_int64, fnname: "xor_1_int64", in: 9223372036854775806, want: 9223372036854775807},
	test_int64{fn: xor_int64_1, fnname: "xor_int64_1", in: 9223372036854775806, want: 9223372036854775807},
	test_int64{fn: xor_1_int64, fnname: "xor_1_int64", in: 9223372036854775807, want: 9223372036854775806},
	test_int64{fn: xor_int64_1, fnname: "xor_int64_1", in: 9223372036854775807, want: 9223372036854775806},
	test_int64{fn: xor_4294967296_int64, fnname: "xor_4294967296_int64", in: -9223372036854775808, want: -9223372032559808512},
	test_int64{fn: xor_int64_4294967296, fnname: "xor_int64_4294967296", in: -9223372036854775808, want: -9223372032559808512},
	test_int64{fn: xor_4294967296_int64, fnname: "xor_4294967296_int64", in: -9223372036854775807, want: -9223372032559808511},
	test_int64{fn: xor_int64_4294967296, fnname: "xor_int64_4294967296", in: -9223372036854775807, want: -9223372032559808511},
	test_int64{fn: xor_4294967296_int64, fnname: "xor_4294967296_int64", in: -4294967296, want: -8589934592},
	test_int64{fn: xor_int64_4294967296, fnname: "xor_int64_4294967296", in: -4294967296, want: -8589934592},
	test_int64{fn: xor_4294967296_int64, fnname: "xor_4294967296_int64", in: -1, want: -4294967297},
	test_int64{fn: xor_int64_4294967296, fnname: "xor_int64_4294967296", in: -1, want: -4294967297},
	test_int64{fn: xor_4294967296_int64, fnname: "xor_4294967296_int64", in: 0, want: 4294967296},
	test_int64{fn: xor_int64_4294967296, fnname: "xor_int64_4294967296", in: 0, want: 4294967296},
	test_int64{fn: xor_4294967296_int64, fnname: "xor_4294967296_int64", in: 1, want: 4294967297},
	test_int64{fn: xor_int64_4294967296, fnname: "xor_int64_4294967296", in: 1, want: 4294967297},
	test_int64{fn: xor_4294967296_int64, fnname: "xor_4294967296_int64", in: 4294967296, want: 0},
	test_int64{fn: xor_int64_4294967296, fnname: "xor_int64_4294967296", in: 4294967296, want: 0},
	test_int64{fn: xor_4294967296_int64, fnname: "xor_4294967296_int64", in: 9223372036854775806, want: 9223372032559808510},
	test_int64{fn: xor_int64_4294967296, fnname: "xor_int64_4294967296", in: 9223372036854775806, want: 9223372032559808510},
	test_int64{fn: xor_4294967296_int64, fnname: "xor_4294967296_int64", in: 9223372036854775807, want: 9223372032559808511},
	test_int64{fn: xor_int64_4294967296, fnname: "xor_int64_4294967296", in: 9223372036854775807, want: 9223372032559808511},
	test_int64{fn: xor_9223372036854775806_int64, fnname: "xor_9223372036854775806_int64", in: -9223372036854775808, want: -2},
	test_int64{fn: xor_int64_9223372036854775806, fnname: "xor_int64_9223372036854775806", in: -9223372036854775808, want: -2},
	test_int64{fn: xor_9223372036854775806_int64, fnname: "xor_9223372036854775806_int64", in: -9223372036854775807, want: -1},
	test_int64{fn: xor_int64_9223372036854775806, fnname: "xor_int64_9223372036854775806", in: -9223372036854775807, want: -1},
	test_int64{fn: xor_9223372036854775806_int64, fnname: "xor_9223372036854775806_int64", in: -4294967296, want: -9223372032559808514},
	test_int64{fn: xor_int64_9223372036854775806, fnname: "xor_int64_9223372036854775806", in: -4294967296, want: -9223372032559808514},
	test_int64{fn: xor_9223372036854775806_int64, fnname: "xor_9223372036854775806_int64", in: -1, want: -9223372036854775807},
	test_int64{fn: xor_int64_9223372036854775806, fnname: "xor_int64_9223372036854775806", in: -1, want: -9223372036854775807},
	test_int64{fn: xor_9223372036854775806_int64, fnname: "xor_9223372036854775806_int64", in: 0, want: 9223372036854775806},
	test_int64{fn: xor_int64_9223372036854775806, fnname: "xor_int64_9223372036854775806", in: 0, want: 9223372036854775806},
	test_int64{fn: xor_9223372036854775806_int64, fnname: "xor_9223372036854775806_int64", in: 1, want: 9223372036854775807},
	test_int64{fn: xor_int64_9223372036854775806, fnname: "xor_int64_9223372036854775806", in: 1, want: 9223372036854775807},
	test_int64{fn: xor_9223372036854775806_int64, fnname: "xor_9223372036854775806_int64", in: 4294967296, want: 9223372032559808510},
	test_int64{fn: xor_int64_9223372036854775806, fnname: "xor_int64_9223372036854775806", in: 4294967296, want: 9223372032559808510},
	test_int64{fn: xor_9223372036854775806_int64, fnname: "xor_9223372036854775806_int64", in: 9223372036854775806, want: 0},
	test_int64{fn: xor_int64_9223372036854775806, fnname: "xor_int64_9223372036854775806", in: 9223372036854775806, want: 0},
	test_int64{fn: xor_9223372036854775806_int64, fnname: "xor_9223372036854775806_int64", in: 9223372036854775807, want: 1},
	test_int64{fn: xor_int64_9223372036854775806, fnname: "xor_int64_9223372036854775806", in: 9223372036854775807, want: 1},
	test_int64{fn: xor_9223372036854775807_int64, fnname: "xor_9223372036854775807_int64", in: -9223372036854775808, want: -1},
	test_int64{fn: xor_int64_9223372036854775807, fnname: "xor_int64_9223372036854775807", in: -9223372036854775808, want: -1},
	test_int64{fn: xor_9223372036854775807_int64, fnname: "xor_9223372036854775807_int64", in: -9223372036854775807, want: -2},
	test_int64{fn: xor_int64_9223372036854775807, fnname: "xor_int64_9223372036854775807", in: -9223372036854775807, want: -2},
	test_int64{fn: xor_9223372036854775807_int64, fnname: "xor_9223372036854775807_int64", in: -4294967296, want: -9223372032559808513},
	test_int64{fn: xor_int64_9223372036854775807, fnname: "xor_int64_9223372036854775807", in: -4294967296, want: -9223372032559808513},
	test_int64{fn: xor_9223372036854775807_int64, fnname: "xor_9223372036854775807_int64", in: -1, want: -9223372036854775808},
	test_int64{fn: xor_int64_9223372036854775807, fnname: "xor_int64_9223372036854775807", in: -1, want: -9223372036854775808},
	test_int64{fn: xor_9223372036854775807_int64, fnname: "xor_9223372036854775807_int64", in: 0, want: 9223372036854775807},
	test_int64{fn: xor_int64_9223372036854775807, fnname: "xor_int64_9223372036854775807", in: 0, want: 9223372036854775807},
	test_int64{fn: xor_9223372036854775807_int64, fnname: "xor_9223372036854775807_int64", in: 1, want: 9223372036854775806},
	test_int64{fn: xor_int64_9223372036854775807, fnname: "xor_int64_9223372036854775807", in: 1, want: 9223372036854775806},
	test_int64{fn: xor_9223372036854775807_int64, fnname: "xor_9223372036854775807_int64", in: 4294967296, want: 9223372032559808511},
	test_int64{fn: xor_int64_9223372036854775807, fnname: "xor_int64_9223372036854775807", in: 4294967296, want: 9223372032559808511},
	test_int64{fn: xor_9223372036854775807_int64, fnname: "xor_9223372036854775807_int64", in: 9223372036854775806, want: 1},
	test_int64{fn: xor_int64_9223372036854775807, fnname: "xor_int64_9223372036854775807", in: 9223372036854775806, want: 1},
	test_int64{fn: xor_9223372036854775807_int64, fnname: "xor_9223372036854775807_int64", in: 9223372036854775807, want: 0},
	test_int64{fn: xor_int64_9223372036854775807, fnname: "xor_int64_9223372036854775807", in: 9223372036854775807, want: 0}}

type test_uint32 struct {
	fn     func(uint32) uint32
	fnname string
	in     uint32
	want   uint32
}

var tests_uint32 = []test_uint32{

	test_uint32{fn: add_0_uint32, fnname: "add_0_uint32", in: 0, want: 0},
	test_uint32{fn: add_uint32_0, fnname: "add_uint32_0", in: 0, want: 0},
	test_uint32{fn: add_0_uint32, fnname: "add_0_uint32", in: 1, want: 1},
	test_uint32{fn: add_uint32_0, fnname: "add_uint32_0", in: 1, want: 1},
	test_uint32{fn: add_0_uint32, fnname: "add_0_uint32", in: 4294967295, want: 4294967295},
	test_uint32{fn: add_uint32_0, fnname: "add_uint32_0", in: 4294967295, want: 4294967295},
	test_uint32{fn: add_1_uint32, fnname: "add_1_uint32", in: 0, want: 1},
	test_uint32{fn: add_uint32_1, fnname: "add_uint32_1", in: 0, want: 1},
	test_uint32{fn: add_1_uint32, fnname: "add_1_uint32", in: 1, want: 2},
	test_uint32{fn: add_uint32_1, fnname: "add_uint32_1", in: 1, want: 2},
	test_uint32{fn: add_1_uint32, fnname: "add_1_uint32", in: 4294967295, want: 0},
	test_uint32{fn: add_uint32_1, fnname: "add_uint32_1", in: 4294967295, want: 0},
	test_uint32{fn: add_4294967295_uint32, fnname: "add_4294967295_uint32", in: 0, want: 4294967295},
	test_uint32{fn: add_uint32_4294967295, fnname: "add_uint32_4294967295", in: 0, want: 4294967295},
	test_uint32{fn: add_4294967295_uint32, fnname: "add_4294967295_uint32", in: 1, want: 0},
	test_uint32{fn: add_uint32_4294967295, fnname: "add_uint32_4294967295", in: 1, want: 0},
	test_uint32{fn: add_4294967295_uint32, fnname: "add_4294967295_uint32", in: 4294967295, want: 4294967294},
	test_uint32{fn: add_uint32_4294967295, fnname: "add_uint32_4294967295", in: 4294967295, want: 4294967294},
	test_uint32{fn: sub_0_uint32, fnname: "sub_0_uint32", in: 0, want: 0},
	test_uint32{fn: sub_uint32_0, fnname: "sub_uint32_0", in: 0, want: 0},
	test_uint32{fn: sub_0_uint32, fnname: "sub_0_uint32", in: 1, want: 4294967295},
	test_uint32{fn: sub_uint32_0, fnname: "sub_uint32_0", in: 1, want: 1},
	test_uint32{fn: sub_0_uint32, fnname: "sub_0_uint32", in: 4294967295, want: 1},
	test_uint32{fn: sub_uint32_0, fnname: "sub_uint32_0", in: 4294967295, want: 4294967295},
	test_uint32{fn: sub_1_uint32, fnname: "sub_1_uint32", in: 0, want: 1},
	test_uint32{fn: sub_uint32_1, fnname: "sub_uint32_1", in: 0, want: 4294967295},
	test_uint32{fn: sub_1_uint32, fnname: "sub_1_uint32", in: 1, want: 0},
	test_uint32{fn: sub_uint32_1, fnname: "sub_uint32_1", in: 1, want: 0},
	test_uint32{fn: sub_1_uint32, fnname: "sub_1_uint32", in: 4294967295, want: 2},
	test_uint32{fn: sub_uint32_1, fnname: "sub_uint32_1", in: 4294967295, want: 4294967294},
	test_uint32{fn: sub_4294967295_uint32, fnname: "sub_4294967295_uint32", in: 0, want: 4294967295},
	test_uint32{fn: sub_uint32_4294967295, fnname: "sub_uint32_4294967295", in: 0, want: 1},
	test_uint32{fn: sub_4294967295_uint32, fnname: "sub_4294967295_uint32", in: 1, want: 4294967294},
	test_uint32{fn: sub_uint32_4294967295, fnname: "sub_uint32_4294967295", in: 1, want: 2},
	test_uint32{fn: sub_4294967295_uint32, fnname: "sub_4294967295_uint32", in: 4294967295, want: 0},
	test_uint32{fn: sub_uint32_4294967295, fnname: "sub_uint32_4294967295", in: 4294967295, want: 0},
	test_uint32{fn: div_0_uint32, fnname: "div_0_uint32", in: 1, want: 0},
	test_uint32{fn: div_0_uint32, fnname: "div_0_uint32", in: 4294967295, want: 0},
	test_uint32{fn: div_uint32_1, fnname: "div_uint32_1", in: 0, want: 0},
	test_uint32{fn: div_1_uint32, fnname: "div_1_uint32", in: 1, want: 1},
	test_uint32{fn: div_uint32_1, fnname: "div_uint32_1", in: 1, want: 1},
	test_uint32{fn: div_1_uint32, fnname: "div_1_uint32", in: 4294967295, want: 0},
	test_uint32{fn: div_uint32_1, fnname: "div_uint32_1", in: 4294967295, want: 4294967295},
	test_uint32{fn: div_uint32_4294967295, fnname: "div_uint32_4294967295", in: 0, want: 0},
	test_uint32{fn: div_4294967295_uint32, fnname: "div_4294967295_uint32", in: 1, want: 4294967295},
	test_uint32{fn: div_uint32_4294967295, fnname: "div_uint32_4294967295", in: 1, want: 0},
	test_uint32{fn: div_4294967295_uint32, fnname: "div_4294967295_uint32", in: 4294967295, want: 1},
	test_uint32{fn: div_uint32_4294967295, fnname: "div_uint32_4294967295", in: 4294967295, want: 1},
	test_uint32{fn: mul_0_uint32, fnname: "mul_0_uint32", in: 0, want: 0},
	test_uint32{fn: mul_uint32_0, fnname: "mul_uint32_0", in: 0, want: 0},
	test_uint32{fn: mul_0_uint32, fnname: "mul_0_uint32", in: 1, want: 0},
	test_uint32{fn: mul_uint32_0, fnname: "mul_uint32_0", in: 1, want: 0},
	test_uint32{fn: mul_0_uint32, fnname: "mul_0_uint32", in: 4294967295, want: 0},
	test_uint32{fn: mul_uint32_0, fnname: "mul_uint32_0", in: 4294967295, want: 0},
	test_uint32{fn: mul_1_uint32, fnname: "mul_1_uint32", in: 0, want: 0},
	test_uint32{fn: mul_uint32_1, fnname: "mul_uint32_1", in: 0, want: 0},
	test_uint32{fn: mul_1_uint32, fnname: "mul_1_uint32", in: 1, want: 1},
	test_uint32{fn: mul_uint32_1, fnname: "mul_uint32_1", in: 1, want: 1},
	test_uint32{fn: mul_1_uint32, fnname: "mul_1_uint32", in: 4294967295, want: 4294967295},
	test_uint32{fn: mul_uint32_1, fnname: "mul_uint32_1", in: 4294967295, want: 4294967295},
	test_uint32{fn: mul_4294967295_uint32, fnname: "mul_4294967295_uint32", in: 0, want: 0},
	test_uint32{fn: mul_uint32_4294967295, fnname: "mul_uint32_4294967295", in: 0, want: 0},
	test_uint32{fn: mul_4294967295_uint32, fnname: "mul_4294967295_uint32", in: 1, want: 4294967295},
	test_uint32{fn: mul_uint32_4294967295, fnname: "mul_uint32_4294967295", in: 1, want: 4294967295},
	test_uint32{fn: mul_4294967295_uint32, fnname: "mul_4294967295_uint32", in: 4294967295, want: 1},
	test_uint32{fn: mul_uint32_4294967295, fnname: "mul_uint32_4294967295", in: 4294967295, want: 1},
	test_uint32{fn: lsh_0_uint32, fnname: "lsh_0_uint32", in: 0, want: 0},
	test_uint32{fn: lsh_uint32_0, fnname: "lsh_uint32_0", in: 0, want: 0},
	test_uint32{fn: lsh_0_uint32, fnname: "lsh_0_uint32", in: 1, want: 0},
	test_uint32{fn: lsh_uint32_0, fnname: "lsh_uint32_0", in: 1, want: 1},
	test_uint32{fn: lsh_0_uint32, fnname: "lsh_0_uint32", in: 4294967295, want: 0},
	test_uint32{fn: lsh_uint32_0, fnname: "lsh_uint32_0", in: 4294967295, want: 4294967295},
	test_uint32{fn: lsh_1_uint32, fnname: "lsh_1_uint32", in: 0, want: 1},
	test_uint32{fn: lsh_uint32_1, fnname: "lsh_uint32_1", in: 0, want: 0},
	test_uint32{fn: lsh_1_uint32, fnname: "lsh_1_uint32", in: 1, want: 2},
	test_uint32{fn: lsh_uint32_1, fnname: "lsh_uint32_1", in: 1, want: 2},
	test_uint32{fn: lsh_1_uint32, fnname: "lsh_1_uint32", in: 4294967295, want: 0},
	test_uint32{fn: lsh_uint32_1, fnname: "lsh_uint32_1", in: 4294967295, want: 4294967294},
	test_uint32{fn: lsh_4294967295_uint32, fnname: "lsh_4294967295_uint32", in: 0, want: 4294967295},
	test_uint32{fn: lsh_uint32_4294967295, fnname: "lsh_uint32_4294967295", in: 0, want: 0},
	test_uint32{fn: lsh_4294967295_uint32, fnname: "lsh_4294967295_uint32", in: 1, want: 4294967294},
	test_uint32{fn: lsh_uint32_4294967295, fnname: "lsh_uint32_4294967295", in: 1, want: 0},
	test_uint32{fn: lsh_4294967295_uint32, fnname: "lsh_4294967295_uint32", in: 4294967295, want: 0},
	test_uint32{fn: lsh_uint32_4294967295, fnname: "lsh_uint32_4294967295", in: 4294967295, want: 0},
	test_uint32{fn: rsh_0_uint32, fnname: "rsh_0_uint32", in: 0, want: 0},
	test_uint32{fn: rsh_uint32_0, fnname: "rsh_uint32_0", in: 0, want: 0},
	test_uint32{fn: rsh_0_uint32, fnname: "rsh_0_uint32", in: 1, want: 0},
	test_uint32{fn: rsh_uint32_0, fnname: "rsh_uint32_0", in: 1, want: 1},
	test_uint32{fn: rsh_0_uint32, fnname: "rsh_0_uint32", in: 4294967295, want: 0},
	test_uint32{fn: rsh_uint32_0, fnname: "rsh_uint32_0", in: 4294967295, want: 4294967295},
	test_uint32{fn: rsh_1_uint32, fnname: "rsh_1_uint32", in: 0, want: 1},
	test_uint32{fn: rsh_uint32_1, fnname: "rsh_uint32_1", in: 0, want: 0},
	test_uint32{fn: rsh_1_uint32, fnname: "rsh_1_uint32", in: 1, want: 0},
	test_uint32{fn: rsh_uint32_1, fnname: "rsh_uint32_1", in: 1, want: 0},
	test_uint32{fn: rsh_1_uint32, fnname: "rsh_1_uint32", in: 4294967295, want: 0},
	test_uint32{fn: rsh_uint32_1, fnname: "rsh_uint32_1", in: 4294967295, want: 2147483647},
	test_uint32{fn: rsh_4294967295_uint32, fnname: "rsh_4294967295_uint32", in: 0, want: 4294967295},
	test_uint32{fn: rsh_uint32_4294967295, fnname: "rsh_uint32_4294967295", in: 0, want: 0},
	test_uint32{fn: rsh_4294967295_uint32, fnname: "rsh_4294967295_uint32", in: 1, want: 2147483647},
	test_uint32{fn: rsh_uint32_4294967295, fnname: "rsh_uint32_4294967295", in: 1, want: 0},
	test_uint32{fn: rsh_4294967295_uint32, fnname: "rsh_4294967295_uint32", in: 4294967295, want: 0},
	test_uint32{fn: rsh_uint32_4294967295, fnname: "rsh_uint32_4294967295", in: 4294967295, want: 0},
	test_uint32{fn: mod_0_uint32, fnname: "mod_0_uint32", in: 1, want: 0},
	test_uint32{fn: mod_0_uint32, fnname: "mod_0_uint32", in: 4294967295, want: 0},
	test_uint32{fn: mod_uint32_1, fnname: "mod_uint32_1", in: 0, want: 0},
	test_uint32{fn: mod_1_uint32, fnname: "mod_1_uint32", in: 1, want: 0},
	test_uint32{fn: mod_uint32_1, fnname: "mod_uint32_1", in: 1, want: 0},
	test_uint32{fn: mod_1_uint32, fnname: "mod_1_uint32", in: 4294967295, want: 1},
	test_uint32{fn: mod_uint32_1, fnname: "mod_uint32_1", in: 4294967295, want: 0},
	test_uint32{fn: mod_uint32_4294967295, fnname: "mod_uint32_4294967295", in: 0, want: 0},
	test_uint32{fn: mod_4294967295_uint32, fnname: "mod_4294967295_uint32", in: 1, want: 0},
	test_uint32{fn: mod_uint32_4294967295, fnname: "mod_uint32_4294967295", in: 1, want: 1},
	test_uint32{fn: mod_4294967295_uint32, fnname: "mod_4294967295_uint32", in: 4294967295, want: 0},
	test_uint32{fn: mod_uint32_4294967295, fnname: "mod_uint32_4294967295", in: 4294967295, want: 0},
	test_uint32{fn: and_0_uint32, fnname: "and_0_uint32", in: 0, want: 0},
	test_uint32{fn: and_uint32_0, fnname: "and_uint32_0", in: 0, want: 0},
	test_uint32{fn: and_0_uint32, fnname: "and_0_uint32", in: 1, want: 0},
	test_uint32{fn: and_uint32_0, fnname: "and_uint32_0", in: 1, want: 0},
	test_uint32{fn: and_0_uint32, fnname: "and_0_uint32", in: 4294967295, want: 0},
	test_uint32{fn: and_uint32_0, fnname: "and_uint32_0", in: 4294967295, want: 0},
	test_uint32{fn: and_1_uint32, fnname: "and_1_uint32", in: 0, want: 0},
	test_uint32{fn: and_uint32_1, fnname: "and_uint32_1", in: 0, want: 0},
	test_uint32{fn: and_1_uint32, fnname: "and_1_uint32", in: 1, want: 1},
	test_uint32{fn: and_uint32_1, fnname: "and_uint32_1", in: 1, want: 1},
	test_uint32{fn: and_1_uint32, fnname: "and_1_uint32", in: 4294967295, want: 1},
	test_uint32{fn: and_uint32_1, fnname: "and_uint32_1", in: 4294967295, want: 1},
	test_uint32{fn: and_4294967295_uint32, fnname: "and_4294967295_uint32", in: 0, want: 0},
	test_uint32{fn: and_uint32_4294967295, fnname: "and_uint32_4294967295", in: 0, want: 0},
	test_uint32{fn: and_4294967295_uint32, fnname: "and_4294967295_uint32", in: 1, want: 1},
	test_uint32{fn: and_uint32_4294967295, fnname: "and_uint32_4294967295", in: 1, want: 1},
	test_uint32{fn: and_4294967295_uint32, fnname: "and_4294967295_uint32", in: 4294967295, want: 4294967295},
	test_uint32{fn: and_uint32_4294967295, fnname: "and_uint32_4294967295", in: 4294967295, want: 4294967295},
	test_uint32{fn: or_0_uint32, fnname: "or_0_uint32", in: 0, want: 0},
	test_uint32{fn: or_uint32_0, fnname: "or_uint32_0", in: 0, want: 0},
	test_uint32{fn: or_0_uint32, fnname: "or_0_uint32", in: 1, want: 1},
	test_uint32{fn: or_uint32_0, fnname: "or_uint32_0", in: 1, want: 1},
	test_uint32{fn: or_0_uint32, fnname: "or_0_uint32", in: 4294967295, want: 4294967295},
	test_uint32{fn: or_uint32_0, fnname: "or_uint32_0", in: 4294967295, want: 4294967295},
	test_uint32{fn: or_1_uint32, fnname: "or_1_uint32", in: 0, want: 1},
	test_uint32{fn: or_uint32_1, fnname: "or_uint32_1", in: 0, want: 1},
	test_uint32{fn: or_1_uint32, fnname: "or_1_uint32", in: 1, want: 1},
	test_uint32{fn: or_uint32_1, fnname: "or_uint32_1", in: 1, want: 1},
	test_uint32{fn: or_1_uint32, fnname: "or_1_uint32", in: 4294967295, want: 4294967295},
	test_uint32{fn: or_uint32_1, fnname: "or_uint32_1", in: 4294967295, want: 4294967295},
	test_uint32{fn: or_4294967295_uint32, fnname: "or_4294967295_uint32", in: 0, want: 4294967295},
	test_uint32{fn: or_uint32_4294967295, fnname: "or_uint32_4294967295", in: 0, want: 4294967295},
	test_uint32{fn: or_4294967295_uint32, fnname: "or_4294967295_uint32", in: 1, want: 4294967295},
	test_uint32{fn: or_uint32_4294967295, fnname: "or_uint32_4294967295", in: 1, want: 4294967295},
	test_uint32{fn: or_4294967295_uint32, fnname: "or_4294967295_uint32", in: 4294967295, want: 4294967295},
	test_uint32{fn: or_uint32_4294967295, fnname: "or_uint32_4294967295", in: 4294967295, want: 4294967295},
	test_uint32{fn: xor_0_uint32, fnname: "xor_0_uint32", in: 0, want: 0},
	test_uint32{fn: xor_uint32_0, fnname: "xor_uint32_0", in: 0, want: 0},
	test_uint32{fn: xor_0_uint32, fnname: "xor_0_uint32", in: 1, want: 1},
	test_uint32{fn: xor_uint32_0, fnname: "xor_uint32_0", in: 1, want: 1},
	test_uint32{fn: xor_0_uint32, fnname: "xor_0_uint32", in: 4294967295, want: 4294967295},
	test_uint32{fn: xor_uint32_0, fnname: "xor_uint32_0", in: 4294967295, want: 4294967295},
	test_uint32{fn: xor_1_uint32, fnname: "xor_1_uint32", in: 0, want: 1},
	test_uint32{fn: xor_uint32_1, fnname: "xor_uint32_1", in: 0, want: 1},
	test_uint32{fn: xor_1_uint32, fnname: "xor_1_uint32", in: 1, want: 0},
	test_uint32{fn: xor_uint32_1, fnname: "xor_uint32_1", in: 1, want: 0},
	test_uint32{fn: xor_1_uint32, fnname: "xor_1_uint32", in: 4294967295, want: 4294967294},
	test_uint32{fn: xor_uint32_1, fnname: "xor_uint32_1", in: 4294967295, want: 4294967294},
	test_uint32{fn: xor_4294967295_uint32, fnname: "xor_4294967295_uint32", in: 0, want: 4294967295},
	test_uint32{fn: xor_uint32_4294967295, fnname: "xor_uint32_4294967295", in: 0, want: 4294967295},
	test_uint32{fn: xor_4294967295_uint32, fnname: "xor_4294967295_uint32", in: 1, want: 4294967294},
	test_uint32{fn: xor_uint32_4294967295, fnname: "xor_uint32_4294967295", in: 1, want: 4294967294},
	test_uint32{fn: xor_4294967295_uint32, fnname: "xor_4294967295_uint32", in: 4294967295, want: 0},
	test_uint32{fn: xor_uint32_4294967295, fnname: "xor_uint32_4294967295", in: 4294967295, want: 0}}

type test_int32 struct {
	fn     func(int32) int32
	fnname string
	in     int32
	want   int32
}

var tests_int32 = []test_int32{

	test_int32{fn: add_Neg2147483648_int32, fnname: "add_Neg2147483648_int32", in: -2147483648, want: 0},
	test_int32{fn: add_int32_Neg2147483648, fnname: "add_int32_Neg2147483648", in: -2147483648, want: 0},
	test_int32{fn: add_Neg2147483648_int32, fnname: "add_Neg2147483648_int32", in: -2147483647, want: 1},
	test_int32{fn: add_int32_Neg2147483648, fnname: "add_int32_Neg2147483648", in: -2147483647, want: 1},
	test_int32{fn: add_Neg2147483648_int32, fnname: "add_Neg2147483648_int32", in: -1, want: 2147483647},
	test_int32{fn: add_int32_Neg2147483648, fnname: "add_int32_Neg2147483648", in: -1, want: 2147483647},
	test_int32{fn: add_Neg2147483648_int32, fnname: "add_Neg2147483648_int32", in: 0, want: -2147483648},
	test_int32{fn: add_int32_Neg2147483648, fnname: "add_int32_Neg2147483648", in: 0, want: -2147483648},
	test_int32{fn: add_Neg2147483648_int32, fnname: "add_Neg2147483648_int32", in: 1, want: -2147483647},
	test_int32{fn: add_int32_Neg2147483648, fnname: "add_int32_Neg2147483648", in: 1, want: -2147483647},
	test_int32{fn: add_Neg2147483648_int32, fnname: "add_Neg2147483648_int32", in: 2147483647, want: -1},
	test_int32{fn: add_int32_Neg2147483648, fnname: "add_int32_Neg2147483648", in: 2147483647, want: -1},
	test_int32{fn: add_Neg2147483647_int32, fnname: "add_Neg2147483647_int32", in: -2147483648, want: 1},
	test_int32{fn: add_int32_Neg2147483647, fnname: "add_int32_Neg2147483647", in: -2147483648, want: 1},
	test_int32{fn: add_Neg2147483647_int32, fnname: "add_Neg2147483647_int32", in: -2147483647, want: 2},
	test_int32{fn: add_int32_Neg2147483647, fnname: "add_int32_Neg2147483647", in: -2147483647, want: 2},
	test_int32{fn: add_Neg2147483647_int32, fnname: "add_Neg2147483647_int32", in: -1, want: -2147483648},
	test_int32{fn: add_int32_Neg2147483647, fnname: "add_int32_Neg2147483647", in: -1, want: -2147483648},
	test_int32{fn: add_Neg2147483647_int32, fnname: "add_Neg2147483647_int32", in: 0, want: -2147483647},
	test_int32{fn: add_int32_Neg2147483647, fnname: "add_int32_Neg2147483647", in: 0, want: -2147483647},
	test_int32{fn: add_Neg2147483647_int32, fnname: "add_Neg2147483647_int32", in: 1, want: -2147483646},
	test_int32{fn: add_int32_Neg2147483647, fnname: "add_int32_Neg2147483647", in: 1, want: -2147483646},
	test_int32{fn: add_Neg2147483647_int32, fnname: "add_Neg2147483647_int32", in: 2147483647, want: 0},
	test_int32{fn: add_int32_Neg2147483647, fnname: "add_int32_Neg2147483647", in: 2147483647, want: 0},
	test_int32{fn: add_Neg1_int32, fnname: "add_Neg1_int32", in: -2147483648, want: 2147483647},
	test_int32{fn: add_int32_Neg1, fnname: "add_int32_Neg1", in: -2147483648, want: 2147483647},
	test_int32{fn: add_Neg1_int32, fnname: "add_Neg1_int32", in: -2147483647, want: -2147483648},
	test_int32{fn: add_int32_Neg1, fnname: "add_int32_Neg1", in: -2147483647, want: -2147483648},
	test_int32{fn: add_Neg1_int32, fnname: "add_Neg1_int32", in: -1, want: -2},
	test_int32{fn: add_int32_Neg1, fnname: "add_int32_Neg1", in: -1, want: -2},
	test_int32{fn: add_Neg1_int32, fnname: "add_Neg1_int32", in: 0, want: -1},
	test_int32{fn: add_int32_Neg1, fnname: "add_int32_Neg1", in: 0, want: -1},
	test_int32{fn: add_Neg1_int32, fnname: "add_Neg1_int32", in: 1, want: 0},
	test_int32{fn: add_int32_Neg1, fnname: "add_int32_Neg1", in: 1, want: 0},
	test_int32{fn: add_Neg1_int32, fnname: "add_Neg1_int32", in: 2147483647, want: 2147483646},
	test_int32{fn: add_int32_Neg1, fnname: "add_int32_Neg1", in: 2147483647, want: 2147483646},
	test_int32{fn: add_0_int32, fnname: "add_0_int32", in: -2147483648, want: -2147483648},
	test_int32{fn: add_int32_0, fnname: "add_int32_0", in: -2147483648, want: -2147483648},
	test_int32{fn: add_0_int32, fnname: "add_0_int32", in: -2147483647, want: -2147483647},
	test_int32{fn: add_int32_0, fnname: "add_int32_0", in: -2147483647, want: -2147483647},
	test_int32{fn: add_0_int32, fnname: "add_0_int32", in: -1, want: -1},
	test_int32{fn: add_int32_0, fnname: "add_int32_0", in: -1, want: -1},
	test_int32{fn: add_0_int32, fnname: "add_0_int32", in: 0, want: 0},
	test_int32{fn: add_int32_0, fnname: "add_int32_0", in: 0, want: 0},
	test_int32{fn: add_0_int32, fnname: "add_0_int32", in: 1, want: 1},
	test_int32{fn: add_int32_0, fnname: "add_int32_0", in: 1, want: 1},
	test_int32{fn: add_0_int32, fnname: "add_0_int32", in: 2147483647, want: 2147483647},
	test_int32{fn: add_int32_0, fnname: "add_int32_0", in: 2147483647, want: 2147483647},
	test_int32{fn: add_1_int32, fnname: "add_1_int32", in: -2147483648, want: -2147483647},
	test_int32{fn: add_int32_1, fnname: "add_int32_1", in: -2147483648, want: -2147483647},
	test_int32{fn: add_1_int32, fnname: "add_1_int32", in: -2147483647, want: -2147483646},
	test_int32{fn: add_int32_1, fnname: "add_int32_1", in: -2147483647, want: -2147483646},
	test_int32{fn: add_1_int32, fnname: "add_1_int32", in: -1, want: 0},
	test_int32{fn: add_int32_1, fnname: "add_int32_1", in: -1, want: 0},
	test_int32{fn: add_1_int32, fnname: "add_1_int32", in: 0, want: 1},
	test_int32{fn: add_int32_1, fnname: "add_int32_1", in: 0, want: 1},
	test_int32{fn: add_1_int32, fnname: "add_1_int32", in: 1, want: 2},
	test_int32{fn: add_int32_1, fnname: "add_int32_1", in: 1, want: 2},
	test_int32{fn: add_1_int32, fnname: "add_1_int32", in: 2147483647, want: -2147483648},
	test_int32{fn: add_int32_1, fnname: "add_int32_1", in: 2147483647, want: -2147483648},
	test_int32{fn: add_2147483647_int32, fnname: "add_2147483647_int32", in: -2147483648, want: -1},
	test_int32{fn: add_int32_2147483647, fnname: "add_int32_2147483647", in: -2147483648, want: -1},
	test_int32{fn: add_2147483647_int32, fnname: "add_2147483647_int32", in: -2147483647, want: 0},
	test_int32{fn: add_int32_2147483647, fnname: "add_int32_2147483647", in: -2147483647, want: 0},
	test_int32{fn: add_2147483647_int32, fnname: "add_2147483647_int32", in: -1, want: 2147483646},
	test_int32{fn: add_int32_2147483647, fnname: "add_int32_2147483647", in: -1, want: 2147483646},
	test_int32{fn: add_2147483647_int32, fnname: "add_2147483647_int32", in: 0, want: 2147483647},
	test_int32{fn: add_int32_2147483647, fnname: "add_int32_2147483647", in: 0, want: 2147483647},
	test_int32{fn: add_2147483647_int32, fnname: "add_2147483647_int32", in: 1, want: -2147483648},
	test_int32{fn: add_int32_2147483647, fnname: "add_int32_2147483647", in: 1, want: -2147483648},
	test_int32{fn: add_2147483647_int32, fnname: "add_2147483647_int32", in: 2147483647, want: -2},
	test_int32{fn: add_int32_2147483647, fnname: "add_int32_2147483647", in: 2147483647, want: -2},
	test_int32{fn: sub_Neg2147483648_int32, fnname: "sub_Neg2147483648_int32", in: -2147483648, want: 0},
	test_int32{fn: sub_int32_Neg2147483648, fnname: "sub_int32_Neg2147483648", in: -2147483648, want: 0},
	test_int32{fn: sub_Neg2147483648_int32, fnname: "sub_Neg2147483648_int32", in: -2147483647, want: -1},
	test_int32{fn: sub_int32_Neg2147483648, fnname: "sub_int32_Neg2147483648", in: -2147483647, want: 1},
	test_int32{fn: sub_Neg2147483648_int32, fnname: "sub_Neg2147483648_int32", in: -1, want: -2147483647},
	test_int32{fn: sub_int32_Neg2147483648, fnname: "sub_int32_Neg2147483648", in: -1, want: 2147483647},
	test_int32{fn: sub_Neg2147483648_int32, fnname: "sub_Neg2147483648_int32", in: 0, want: -2147483648},
	test_int32{fn: sub_int32_Neg2147483648, fnname: "sub_int32_Neg2147483648", in: 0, want: -2147483648},
	test_int32{fn: sub_Neg2147483648_int32, fnname: "sub_Neg2147483648_int32", in: 1, want: 2147483647},
	test_int32{fn: sub_int32_Neg2147483648, fnname: "sub_int32_Neg2147483648", in: 1, want: -2147483647},
	test_int32{fn: sub_Neg2147483648_int32, fnname: "sub_Neg2147483648_int32", in: 2147483647, want: 1},
	test_int32{fn: sub_int32_Neg2147483648, fnname: "sub_int32_Neg2147483648", in: 2147483647, want: -1},
	test_int32{fn: sub_Neg2147483647_int32, fnname: "sub_Neg2147483647_int32", in: -2147483648, want: 1},
	test_int32{fn: sub_int32_Neg2147483647, fnname: "sub_int32_Neg2147483647", in: -2147483648, want: -1},
	test_int32{fn: sub_Neg2147483647_int32, fnname: "sub_Neg2147483647_int32", in: -2147483647, want: 0},
	test_int32{fn: sub_int32_Neg2147483647, fnname: "sub_int32_Neg2147483647", in: -2147483647, want: 0},
	test_int32{fn: sub_Neg2147483647_int32, fnname: "sub_Neg2147483647_int32", in: -1, want: -2147483646},
	test_int32{fn: sub_int32_Neg2147483647, fnname: "sub_int32_Neg2147483647", in: -1, want: 2147483646},
	test_int32{fn: sub_Neg2147483647_int32, fnname: "sub_Neg2147483647_int32", in: 0, want: -2147483647},
	test_int32{fn: sub_int32_Neg2147483647, fnname: "sub_int32_Neg2147483647", in: 0, want: 2147483647},
	test_int32{fn: sub_Neg2147483647_int32, fnname: "sub_Neg2147483647_int32", in: 1, want: -2147483648},
	test_int32{fn: sub_int32_Neg2147483647, fnname: "sub_int32_Neg2147483647", in: 1, want: -2147483648},
	test_int32{fn: sub_Neg2147483647_int32, fnname: "sub_Neg2147483647_int32", in: 2147483647, want: 2},
	test_int32{fn: sub_int32_Neg2147483647, fnname: "sub_int32_Neg2147483647", in: 2147483647, want: -2},
	test_int32{fn: sub_Neg1_int32, fnname: "sub_Neg1_int32", in: -2147483648, want: 2147483647},
	test_int32{fn: sub_int32_Neg1, fnname: "sub_int32_Neg1", in: -2147483648, want: -2147483647},
	test_int32{fn: sub_Neg1_int32, fnname: "sub_Neg1_int32", in: -2147483647, want: 2147483646},
	test_int32{fn: sub_int32_Neg1, fnname: "sub_int32_Neg1", in: -2147483647, want: -2147483646},
	test_int32{fn: sub_Neg1_int32, fnname: "sub_Neg1_int32", in: -1, want: 0},
	test_int32{fn: sub_int32_Neg1, fnname: "sub_int32_Neg1", in: -1, want: 0},
	test_int32{fn: sub_Neg1_int32, fnname: "sub_Neg1_int32", in: 0, want: -1},
	test_int32{fn: sub_int32_Neg1, fnname: "sub_int32_Neg1", in: 0, want: 1},
	test_int32{fn: sub_Neg1_int32, fnname: "sub_Neg1_int32", in: 1, want: -2},
	test_int32{fn: sub_int32_Neg1, fnname: "sub_int32_Neg1", in: 1, want: 2},
	test_int32{fn: sub_Neg1_int32, fnname: "sub_Neg1_int32", in: 2147483647, want: -2147483648},
	test_int32{fn: sub_int32_Neg1, fnname: "sub_int32_Neg1", in: 2147483647, want: -2147483648},
	test_int32{fn: sub_0_int32, fnname: "sub_0_int32", in: -2147483648, want: -2147483648},
	test_int32{fn: sub_int32_0, fnname: "sub_int32_0", in: -2147483648, want: -2147483648},
	test_int32{fn: sub_0_int32, fnname: "sub_0_int32", in: -2147483647, want: 2147483647},
	test_int32{fn: sub_int32_0, fnname: "sub_int32_0", in: -2147483647, want: -2147483647},
	test_int32{fn: sub_0_int32, fnname: "sub_0_int32", in: -1, want: 1},
	test_int32{fn: sub_int32_0, fnname: "sub_int32_0", in: -1, want: -1},
	test_int32{fn: sub_0_int32, fnname: "sub_0_int32", in: 0, want: 0},
	test_int32{fn: sub_int32_0, fnname: "sub_int32_0", in: 0, want: 0},
	test_int32{fn: sub_0_int32, fnname: "sub_0_int32", in: 1, want: -1},
	test_int32{fn: sub_int32_0, fnname: "sub_int32_0", in: 1, want: 1},
	test_int32{fn: sub_0_int32, fnname: "sub_0_int32", in: 2147483647, want: -2147483647},
	test_int32{fn: sub_int32_0, fnname: "sub_int32_0", in: 2147483647, want: 2147483647},
	test_int32{fn: sub_1_int32, fnname: "sub_1_int32", in: -2147483648, want: -2147483647},
	test_int32{fn: sub_int32_1, fnname: "sub_int32_1", in: -2147483648, want: 2147483647},
	test_int32{fn: sub_1_int32, fnname: "sub_1_int32", in: -2147483647, want: -2147483648},
	test_int32{fn: sub_int32_1, fnname: "sub_int32_1", in: -2147483647, want: -2147483648},
	test_int32{fn: sub_1_int32, fnname: "sub_1_int32", in: -1, want: 2},
	test_int32{fn: sub_int32_1, fnname: "sub_int32_1", in: -1, want: -2},
	test_int32{fn: sub_1_int32, fnname: "sub_1_int32", in: 0, want: 1},
	test_int32{fn: sub_int32_1, fnname: "sub_int32_1", in: 0, want: -1},
	test_int32{fn: sub_1_int32, fnname: "sub_1_int32", in: 1, want: 0},
	test_int32{fn: sub_int32_1, fnname: "sub_int32_1", in: 1, want: 0},
	test_int32{fn: sub_1_int32, fnname: "sub_1_int32", in: 2147483647, want: -2147483646},
	test_int32{fn: sub_int32_1, fnname: "sub_int32_1", in: 2147483647, want: 2147483646},
	test_int32{fn: sub_2147483647_int32, fnname: "sub_2147483647_int32", in: -2147483648, want: -1},
	test_int32{fn: sub_int32_2147483647, fnname: "sub_int32_2147483647", in: -2147483648, want: 1},
	test_int32{fn: sub_2147483647_int32, fnname: "sub_2147483647_int32", in: -2147483647, want: -2},
	test_int32{fn: sub_int32_2147483647, fnname: "sub_int32_2147483647", in: -2147483647, want: 2},
	test_int32{fn: sub_2147483647_int32, fnname: "sub_2147483647_int32", in: -1, want: -2147483648},
	test_int32{fn: sub_int32_2147483647, fnname: "sub_int32_2147483647", in: -1, want: -2147483648},
	test_int32{fn: sub_2147483647_int32, fnname: "sub_2147483647_int32", in: 0, want: 2147483647},
	test_int32{fn: sub_int32_2147483647, fnname: "sub_int32_2147483647", in: 0, want: -2147483647},
	test_int32{fn: sub_2147483647_int32, fnname: "sub_2147483647_int32", in: 1, want: 2147483646},
	test_int32{fn: sub_int32_2147483647, fnname: "sub_int32_2147483647", in: 1, want: -2147483646},
	test_int32{fn: sub_2147483647_int32, fnname: "sub_2147483647_int32", in: 2147483647, want: 0},
	test_int32{fn: sub_int32_2147483647, fnname: "sub_int32_2147483647", in: 2147483647, want: 0},
	test_int32{fn: div_Neg2147483648_int32, fnname: "div_Neg2147483648_int32", in: -2147483648, want: 1},
	test_int32{fn: div_int32_Neg2147483648, fnname: "div_int32_Neg2147483648", in: -2147483648, want: 1},
	test_int32{fn: div_Neg2147483648_int32, fnname: "div_Neg2147483648_int32", in: -2147483647, want: 1},
	test_int32{fn: div_int32_Neg2147483648, fnname: "div_int32_Neg2147483648", in: -2147483647, want: 0},
	test_int32{fn: div_Neg2147483648_int32, fnname: "div_Neg2147483648_int32", in: -1, want: -2147483648},
	test_int32{fn: div_int32_Neg2147483648, fnname: "div_int32_Neg2147483648", in: -1, want: 0},
	test_int32{fn: div_int32_Neg2147483648, fnname: "div_int32_Neg2147483648", in: 0, want: 0},
	test_int32{fn: div_Neg2147483648_int32, fnname: "div_Neg2147483648_int32", in: 1, want: -2147483648},
	test_int32{fn: div_int32_Neg2147483648, fnname: "div_int32_Neg2147483648", in: 1, want: 0},
	test_int32{fn: div_Neg2147483648_int32, fnname: "div_Neg2147483648_int32", in: 2147483647, want: -1},
	test_int32{fn: div_int32_Neg2147483648, fnname: "div_int32_Neg2147483648", in: 2147483647, want: 0},
	test_int32{fn: div_Neg2147483647_int32, fnname: "div_Neg2147483647_int32", in: -2147483648, want: 0},
	test_int32{fn: div_int32_Neg2147483647, fnname: "div_int32_Neg2147483647", in: -2147483648, want: 1},
	test_int32{fn: div_Neg2147483647_int32, fnname: "div_Neg2147483647_int32", in: -2147483647, want: 1},
	test_int32{fn: div_int32_Neg2147483647, fnname: "div_int32_Neg2147483647", in: -2147483647, want: 1},
	test_int32{fn: div_Neg2147483647_int32, fnname: "div_Neg2147483647_int32", in: -1, want: 2147483647},
	test_int32{fn: div_int32_Neg2147483647, fnname: "div_int32_Neg2147483647", in: -1, want: 0},
	test_int32{fn: div_int32_Neg2147483647, fnname: "div_int32_Neg2147483647", in: 0, want: 0},
	test_int32{fn: div_Neg2147483647_int32, fnname: "div_Neg2147483647_int32", in: 1, want: -2147483647},
	test_int32{fn: div_int32_Neg2147483647, fnname: "div_int32_Neg2147483647", in: 1, want: 0},
	test_int32{fn: div_Neg2147483647_int32, fnname: "div_Neg2147483647_int32", in: 2147483647, want: -1},
	test_int32{fn: div_int32_Neg2147483647, fnname: "div_int32_Neg2147483647", in: 2147483647, want: -1},
	test_int32{fn: div_Neg1_int32, fnname: "div_Neg1_int32", in: -2147483648, want: 0},
	test_int32{fn: div_int32_Neg1, fnname: "div_int32_Neg1", in: -2147483648, want: -2147483648},
	test_int32{fn: div_Neg1_int32, fnname: "div_Neg1_int32", in: -2147483647, want: 0},
	test_int32{fn: div_int32_Neg1, fnname: "div_int32_Neg1", in: -2147483647, want: 2147483647},
	test_int32{fn: div_Neg1_int32, fnname: "div_Neg1_int32", in: -1, want: 1},
	test_int32{fn: div_int32_Neg1, fnname: "div_int32_Neg1", in: -1, want: 1},
	test_int32{fn: div_int32_Neg1, fnname: "div_int32_Neg1", in: 0, want: 0},
	test_int32{fn: div_Neg1_int32, fnname: "div_Neg1_int32", in: 1, want: -1},
	test_int32{fn: div_int32_Neg1, fnname: "div_int32_Neg1", in: 1, want: -1},
	test_int32{fn: div_Neg1_int32, fnname: "div_Neg1_int32", in: 2147483647, want: 0},
	test_int32{fn: div_int32_Neg1, fnname: "div_int32_Neg1", in: 2147483647, want: -2147483647},
	test_int32{fn: div_0_int32, fnname: "div_0_int32", in: -2147483648, want: 0},
	test_int32{fn: div_0_int32, fnname: "div_0_int32", in: -2147483647, want: 0},
	test_int32{fn: div_0_int32, fnname: "div_0_int32", in: -1, want: 0},
	test_int32{fn: div_0_int32, fnname: "div_0_int32", in: 1, want: 0},
	test_int32{fn: div_0_int32, fnname: "div_0_int32", in: 2147483647, want: 0},
	test_int32{fn: div_1_int32, fnname: "div_1_int32", in: -2147483648, want: 0},
	test_int32{fn: div_int32_1, fnname: "div_int32_1", in: -2147483648, want: -2147483648},
	test_int32{fn: div_1_int32, fnname: "div_1_int32", in: -2147483647, want: 0},
	test_int32{fn: div_int32_1, fnname: "div_int32_1", in: -2147483647, want: -2147483647},
	test_int32{fn: div_1_int32, fnname: "div_1_int32", in: -1, want: -1},
	test_int32{fn: div_int32_1, fnname: "div_int32_1", in: -1, want: -1},
	test_int32{fn: div_int32_1, fnname: "div_int32_1", in: 0, want: 0},
	test_int32{fn: div_1_int32, fnname: "div_1_int32", in: 1, want: 1},
	test_int32{fn: div_int32_1, fnname: "div_int32_1", in: 1, want: 1},
	test_int32{fn: div_1_int32, fnname: "div_1_int32", in: 2147483647, want: 0},
	test_int32{fn: div_int32_1, fnname: "div_int32_1", in: 2147483647, want: 2147483647},
	test_int32{fn: div_2147483647_int32, fnname: "div_2147483647_int32", in: -2147483648, want: 0},
	test_int32{fn: div_int32_2147483647, fnname: "div_int32_2147483647", in: -2147483648, want: -1},
	test_int32{fn: div_2147483647_int32, fnname: "div_2147483647_int32", in: -2147483647, want: -1},
	test_int32{fn: div_int32_2147483647, fnname: "div_int32_2147483647", in: -2147483647, want: -1},
	test_int32{fn: div_2147483647_int32, fnname: "div_2147483647_int32", in: -1, want: -2147483647},
	test_int32{fn: div_int32_2147483647, fnname: "div_int32_2147483647", in: -1, want: 0},
	test_int32{fn: div_int32_2147483647, fnname: "div_int32_2147483647", in: 0, want: 0},
	test_int32{fn: div_2147483647_int32, fnname: "div_2147483647_int32", in: 1, want: 2147483647},
	test_int32{fn: div_int32_2147483647, fnname: "div_int32_2147483647", in: 1, want: 0},
	test_int32{fn: div_2147483647_int32, fnname: "div_2147483647_int32", in: 2147483647, want: 1},
	test_int32{fn: div_int32_2147483647, fnname: "div_int32_2147483647", in: 2147483647, want: 1},
	test_int32{fn: mul_Neg2147483648_int32, fnname: "mul_Neg2147483648_int32", in: -2147483648, want: 0},
	test_int32{fn: mul_int32_Neg2147483648, fnname: "mul_int32_Neg2147483648", in: -2147483648, want: 0},
	test_int32{fn: mul_Neg2147483648_int32, fnname: "mul_Neg2147483648_int32", in: -2147483647, want: -2147483648},
	test_int32{fn: mul_int32_Neg2147483648, fnname: "mul_int32_Neg2147483648", in: -2147483647, want: -2147483648},
	test_int32{fn: mul_Neg2147483648_int32, fnname: "mul_Neg2147483648_int32", in: -1, want: -2147483648},
	test_int32{fn: mul_int32_Neg2147483648, fnname: "mul_int32_Neg2147483648", in: -1, want: -2147483648},
	test_int32{fn: mul_Neg2147483648_int32, fnname: "mul_Neg2147483648_int32", in: 0, want: 0},
	test_int32{fn: mul_int32_Neg2147483648, fnname: "mul_int32_Neg2147483648", in: 0, want: 0},
	test_int32{fn: mul_Neg2147483648_int32, fnname: "mul_Neg2147483648_int32", in: 1, want: -2147483648},
	test_int32{fn: mul_int32_Neg2147483648, fnname: "mul_int32_Neg2147483648", in: 1, want: -2147483648},
	test_int32{fn: mul_Neg2147483648_int32, fnname: "mul_Neg2147483648_int32", in: 2147483647, want: -2147483648},
	test_int32{fn: mul_int32_Neg2147483648, fnname: "mul_int32_Neg2147483648", in: 2147483647, want: -2147483648},
	test_int32{fn: mul_Neg2147483647_int32, fnname: "mul_Neg2147483647_int32", in: -2147483648, want: -2147483648},
	test_int32{fn: mul_int32_Neg2147483647, fnname: "mul_int32_Neg2147483647", in: -2147483648, want: -2147483648},
	test_int32{fn: mul_Neg2147483647_int32, fnname: "mul_Neg2147483647_int32", in: -2147483647, want: 1},
	test_int32{fn: mul_int32_Neg2147483647, fnname: "mul_int32_Neg2147483647", in: -2147483647, want: 1},
	test_int32{fn: mul_Neg2147483647_int32, fnname: "mul_Neg2147483647_int32", in: -1, want: 2147483647},
	test_int32{fn: mul_int32_Neg2147483647, fnname: "mul_int32_Neg2147483647", in: -1, want: 2147483647},
	test_int32{fn: mul_Neg2147483647_int32, fnname: "mul_Neg2147483647_int32", in: 0, want: 0},
	test_int32{fn: mul_int32_Neg2147483647, fnname: "mul_int32_Neg2147483647", in: 0, want: 0},
	test_int32{fn: mul_Neg2147483647_int32, fnname: "mul_Neg2147483647_int32", in: 1, want: -2147483647},
	test_int32{fn: mul_int32_Neg2147483647, fnname: "mul_int32_Neg2147483647", in: 1, want: -2147483647},
	test_int32{fn: mul_Neg2147483647_int32, fnname: "mul_Neg2147483647_int32", in: 2147483647, want: -1},
	test_int32{fn: mul_int32_Neg2147483647, fnname: "mul_int32_Neg2147483647", in: 2147483647, want: -1},
	test_int32{fn: mul_Neg1_int32, fnname: "mul_Neg1_int32", in: -2147483648, want: -2147483648},
	test_int32{fn: mul_int32_Neg1, fnname: "mul_int32_Neg1", in: -2147483648, want: -2147483648},
	test_int32{fn: mul_Neg1_int32, fnname: "mul_Neg1_int32", in: -2147483647, want: 2147483647},
	test_int32{fn: mul_int32_Neg1, fnname: "mul_int32_Neg1", in: -2147483647, want: 2147483647},
	test_int32{fn: mul_Neg1_int32, fnname: "mul_Neg1_int32", in: -1, want: 1},
	test_int32{fn: mul_int32_Neg1, fnname: "mul_int32_Neg1", in: -1, want: 1},
	test_int32{fn: mul_Neg1_int32, fnname: "mul_Neg1_int32", in: 0, want: 0},
	test_int32{fn: mul_int32_Neg1, fnname: "mul_int32_Neg1", in: 0, want: 0},
	test_int32{fn: mul_Neg1_int32, fnname: "mul_Neg1_int32", in: 1, want: -1},
	test_int32{fn: mul_int32_Neg1, fnname: "mul_int32_Neg1", in: 1, want: -1},
	test_int32{fn: mul_Neg1_int32, fnname: "mul_Neg1_int32", in: 2147483647, want: -2147483647},
	test_int32{fn: mul_int32_Neg1, fnname: "mul_int32_Neg1", in: 2147483647, want: -2147483647},
	test_int32{fn: mul_0_int32, fnname: "mul_0_int32", in: -2147483648, want: 0},
	test_int32{fn: mul_int32_0, fnname: "mul_int32_0", in: -2147483648, want: 0},
	test_int32{fn: mul_0_int32, fnname: "mul_0_int32", in: -2147483647, want: 0},
	test_int32{fn: mul_int32_0, fnname: "mul_int32_0", in: -2147483647, want: 0},
	test_int32{fn: mul_0_int32, fnname: "mul_0_int32", in: -1, want: 0},
	test_int32{fn: mul_int32_0, fnname: "mul_int32_0", in: -1, want: 0},
	test_int32{fn: mul_0_int32, fnname: "mul_0_int32", in: 0, want: 0},
	test_int32{fn: mul_int32_0, fnname: "mul_int32_0", in: 0, want: 0},
	test_int32{fn: mul_0_int32, fnname: "mul_0_int32", in: 1, want: 0},
	test_int32{fn: mul_int32_0, fnname: "mul_int32_0", in: 1, want: 0},
	test_int32{fn: mul_0_int32, fnname: "mul_0_int32", in: 2147483647, want: 0},
	test_int32{fn: mul_int32_0, fnname: "mul_int32_0", in: 2147483647, want: 0},
	test_int32{fn: mul_1_int32, fnname: "mul_1_int32", in: -2147483648, want: -2147483648},
	test_int32{fn: mul_int32_1, fnname: "mul_int32_1", in: -2147483648, want: -2147483648},
	test_int32{fn: mul_1_int32, fnname: "mul_1_int32", in: -2147483647, want: -2147483647},
	test_int32{fn: mul_int32_1, fnname: "mul_int32_1", in: -2147483647, want: -2147483647},
	test_int32{fn: mul_1_int32, fnname: "mul_1_int32", in: -1, want: -1},
	test_int32{fn: mul_int32_1, fnname: "mul_int32_1", in: -1, want: -1},
	test_int32{fn: mul_1_int32, fnname: "mul_1_int32", in: 0, want: 0},
	test_int32{fn: mul_int32_1, fnname: "mul_int32_1", in: 0, want: 0},
	test_int32{fn: mul_1_int32, fnname: "mul_1_int32", in: 1, want: 1},
	test_int32{fn: mul_int32_1, fnname: "mul_int32_1", in: 1, want: 1},
	test_int32{fn: mul_1_int32, fnname: "mul_1_int32", in: 2147483647, want: 2147483647},
	test_int32{fn: mul_int32_1, fnname: "mul_int32_1", in: 2147483647, want: 2147483647},
	test_int32{fn: mul_2147483647_int32, fnname: "mul_2147483647_int32", in: -2147483648, want: -2147483648},
	test_int32{fn: mul_int32_2147483647, fnname: "mul_int32_2147483647", in: -2147483648, want: -2147483648},
	test_int32{fn: mul_2147483647_int32, fnname: "mul_2147483647_int32", in: -2147483647, want: -1},
	test_int32{fn: mul_int32_2147483647, fnname: "mul_int32_2147483647", in: -2147483647, want: -1},
	test_int32{fn: mul_2147483647_int32, fnname: "mul_2147483647_int32", in: -1, want: -2147483647},
	test_int32{fn: mul_int32_2147483647, fnname: "mul_int32_2147483647", in: -1, want: -2147483647},
	test_int32{fn: mul_2147483647_int32, fnname: "mul_2147483647_int32", in: 0, want: 0},
	test_int32{fn: mul_int32_2147483647, fnname: "mul_int32_2147483647", in: 0, want: 0},
	test_int32{fn: mul_2147483647_int32, fnname: "mul_2147483647_int32", in: 1, want: 2147483647},
	test_int32{fn: mul_int32_2147483647, fnname: "mul_int32_2147483647", in: 1, want: 2147483647},
	test_int32{fn: mul_2147483647_int32, fnname: "mul_2147483647_int32", in: 2147483647, want: 1},
	test_int32{fn: mul_int32_2147483647, fnname: "mul_int32_2147483647", in: 2147483647, want: 1},
	test_int32{fn: mod_Neg2147483648_int32, fnname: "mod_Neg2147483648_int32", in: -2147483648, want: 0},
	test_int32{fn: mod_int32_Neg2147483648, fnname: "mod_int32_Neg2147483648", in: -2147483648, want: 0},
	test_int32{fn: mod_Neg2147483648_int32, fnname: "mod_Neg2147483648_int32", in: -2147483647, want: -1},
	test_int32{fn: mod_int32_Neg2147483648, fnname: "mod_int32_Neg2147483648", in: -2147483647, want: -2147483647},
	test_int32{fn: mod_Neg2147483648_int32, fnname: "mod_Neg2147483648_int32", in: -1, want: 0},
	test_int32{fn: mod_int32_Neg2147483648, fnname: "mod_int32_Neg2147483648", in: -1, want: -1},
	test_int32{fn: mod_int32_Neg2147483648, fnname: "mod_int32_Neg2147483648", in: 0, want: 0},
	test_int32{fn: mod_Neg2147483648_int32, fnname: "mod_Neg2147483648_int32", in: 1, want: 0},
	test_int32{fn: mod_int32_Neg2147483648, fnname: "mod_int32_Neg2147483648", in: 1, want: 1},
	test_int32{fn: mod_Neg2147483648_int32, fnname: "mod_Neg2147483648_int32", in: 2147483647, want: -1},
	test_int32{fn: mod_int32_Neg2147483648, fnname: "mod_int32_Neg2147483648", in: 2147483647, want: 2147483647},
	test_int32{fn: mod_Neg2147483647_int32, fnname: "mod_Neg2147483647_int32", in: -2147483648, want: -2147483647},
	test_int32{fn: mod_int32_Neg2147483647, fnname: "mod_int32_Neg2147483647", in: -2147483648, want: -1},
	test_int32{fn: mod_Neg2147483647_int32, fnname: "mod_Neg2147483647_int32", in: -2147483647, want: 0},
	test_int32{fn: mod_int32_Neg2147483647, fnname: "mod_int32_Neg2147483647", in: -2147483647, want: 0},
	test_int32{fn: mod_Neg2147483647_int32, fnname: "mod_Neg2147483647_int32", in: -1, want: 0},
	test_int32{fn: mod_int32_Neg2147483647, fnname: "mod_int32_Neg2147483647", in: -1, want: -1},
	test_int32{fn: mod_int32_Neg2147483647, fnname: "mod_int32_Neg2147483647", in: 0, want: 0},
	test_int32{fn: mod_Neg2147483647_int32, fnname: "mod_Neg2147483647_int32", in: 1, want: 0},
	test_int32{fn: mod_int32_Neg2147483647, fnname: "mod_int32_Neg2147483647", in: 1, want: 1},
	test_int32{fn: mod_Neg2147483647_int32, fnname: "mod_Neg2147483647_int32", in: 2147483647, want: 0},
	test_int32{fn: mod_int32_Neg2147483647, fnname: "mod_int32_Neg2147483647", in: 2147483647, want: 0},
	test_int32{fn: mod_Neg1_int32, fnname: "mod_Neg1_int32", in: -2147483648, want: -1},
	test_int32{fn: mod_int32_Neg1, fnname: "mod_int32_Neg1", in: -2147483648, want: 0},
	test_int32{fn: mod_Neg1_int32, fnname: "mod_Neg1_int32", in: -2147483647, want: -1},
	test_int32{fn: mod_int32_Neg1, fnname: "mod_int32_Neg1", in: -2147483647, want: 0},
	test_int32{fn: mod_Neg1_int32, fnname: "mod_Neg1_int32", in: -1, want: 0},
	test_int32{fn: mod_int32_Neg1, fnname: "mod_int32_Neg1", in: -1, want: 0},
	test_int32{fn: mod_int32_Neg1, fnname: "mod_int32_Neg1", in: 0, want: 0},
	test_int32{fn: mod_Neg1_int32, fnname: "mod_Neg1_int32", in: 1, want: 0},
	test_int32{fn: mod_int32_Neg1, fnname: "mod_int32_Neg1", in: 1, want: 0},
	test_int32{fn: mod_Neg1_int32, fnname: "mod_Neg1_int32", in: 2147483647, want: -1},
	test_int32{fn: mod_int32_Neg1, fnname: "mod_int32_Neg1", in: 2147483647, want: 0},
	test_int32{fn: mod_0_int32, fnname: "mod_0_int32", in: -2147483648, want: 0},
	test_int32{fn: mod_0_int32, fnname: "mod_0_int32", in: -2147483647, want: 0},
	test_int32{fn: mod_0_int32, fnname: "mod_0_int32", in: -1, want: 0},
	test_int32{fn: mod_0_int32, fnname: "mod_0_int32", in: 1, want: 0},
	test_int32{fn: mod_0_int32, fnname: "mod_0_int32", in: 2147483647, want: 0},
	test_int32{fn: mod_1_int32, fnname: "mod_1_int32", in: -2147483648, want: 1},
	test_int32{fn: mod_int32_1, fnname: "mod_int32_1", in: -2147483648, want: 0},
	test_int32{fn: mod_1_int32, fnname: "mod_1_int32", in: -2147483647, want: 1},
	test_int32{fn: mod_int32_1, fnname: "mod_int32_1", in: -2147483647, want: 0},
	test_int32{fn: mod_1_int32, fnname: "mod_1_int32", in: -1, want: 0},
	test_int32{fn: mod_int32_1, fnname: "mod_int32_1", in: -1, want: 0},
	test_int32{fn: mod_int32_1, fnname: "mod_int32_1", in: 0, want: 0},
	test_int32{fn: mod_1_int32, fnname: "mod_1_int32", in: 1, want: 0},
	test_int32{fn: mod_int32_1, fnname: "mod_int32_1", in: 1, want: 0},
	test_int32{fn: mod_1_int32, fnname: "mod_1_int32", in: 2147483647, want: 1},
	test_int32{fn: mod_int32_1, fnname: "mod_int32_1", in: 2147483647, want: 0},
	test_int32{fn: mod_2147483647_int32, fnname: "mod_2147483647_int32", in: -2147483648, want: 2147483647},
	test_int32{fn: mod_int32_2147483647, fnname: "mod_int32_2147483647", in: -2147483648, want: -1},
	test_int32{fn: mod_2147483647_int32, fnname: "mod_2147483647_int32", in: -2147483647, want: 0},
	test_int32{fn: mod_int32_2147483647, fnname: "mod_int32_2147483647", in: -2147483647, want: 0},
	test_int32{fn: mod_2147483647_int32, fnname: "mod_2147483647_int32", in: -1, want: 0},
	test_int32{fn: mod_int32_2147483647, fnname: "mod_int32_2147483647", in: -1, want: -1},
	test_int32{fn: mod_int32_2147483647, fnname: "mod_int32_2147483647", in: 0, want: 0},
	test_int32{fn: mod_2147483647_int32, fnname: "mod_2147483647_int32", in: 1, want: 0},
	test_int32{fn: mod_int32_2147483647, fnname: "mod_int32_2147483647", in: 1, want: 1},
	test_int32{fn: mod_2147483647_int32, fnname: "mod_2147483647_int32", in: 2147483647, want: 0},
	test_int32{fn: mod_int32_2147483647, fnname: "mod_int32_2147483647", in: 2147483647, want: 0},
	test_int32{fn: and_Neg2147483648_int32, fnname: "and_Neg2147483648_int32", in: -2147483648, want: -2147483648},
	test_int32{fn: and_int32_Neg2147483648, fnname: "and_int32_Neg2147483648", in: -2147483648, want: -2147483648},
	test_int32{fn: and_Neg2147483648_int32, fnname: "and_Neg2147483648_int32", in: -2147483647, want: -2147483648},
	test_int32{fn: and_int32_Neg2147483648, fnname: "and_int32_Neg2147483648", in: -2147483647, want: -2147483648},
	test_int32{fn: and_Neg2147483648_int32, fnname: "and_Neg2147483648_int32", in: -1, want: -2147483648},
	test_int32{fn: and_int32_Neg2147483648, fnname: "and_int32_Neg2147483648", in: -1, want: -2147483648},
	test_int32{fn: and_Neg2147483648_int32, fnname: "and_Neg2147483648_int32", in: 0, want: 0},
	test_int32{fn: and_int32_Neg2147483648, fnname: "and_int32_Neg2147483648", in: 0, want: 0},
	test_int32{fn: and_Neg2147483648_int32, fnname: "and_Neg2147483648_int32", in: 1, want: 0},
	test_int32{fn: and_int32_Neg2147483648, fnname: "and_int32_Neg2147483648", in: 1, want: 0},
	test_int32{fn: and_Neg2147483648_int32, fnname: "and_Neg2147483648_int32", in: 2147483647, want: 0},
	test_int32{fn: and_int32_Neg2147483648, fnname: "and_int32_Neg2147483648", in: 2147483647, want: 0},
	test_int32{fn: and_Neg2147483647_int32, fnname: "and_Neg2147483647_int32", in: -2147483648, want: -2147483648},
	test_int32{fn: and_int32_Neg2147483647, fnname: "and_int32_Neg2147483647", in: -2147483648, want: -2147483648},
	test_int32{fn: and_Neg2147483647_int32, fnname: "and_Neg2147483647_int32", in: -2147483647, want: -2147483647},
	test_int32{fn: and_int32_Neg2147483647, fnname: "and_int32_Neg2147483647", in: -2147483647, want: -2147483647},
	test_int32{fn: and_Neg2147483647_int32, fnname: "and_Neg2147483647_int32", in: -1, want: -2147483647},
	test_int32{fn: and_int32_Neg2147483647, fnname: "and_int32_Neg2147483647", in: -1, want: -2147483647},
	test_int32{fn: and_Neg2147483647_int32, fnname: "and_Neg2147483647_int32", in: 0, want: 0},
	test_int32{fn: and_int32_Neg2147483647, fnname: "and_int32_Neg2147483647", in: 0, want: 0},
	test_int32{fn: and_Neg2147483647_int32, fnname: "and_Neg2147483647_int32", in: 1, want: 1},
	test_int32{fn: and_int32_Neg2147483647, fnname: "and_int32_Neg2147483647", in: 1, want: 1},
	test_int32{fn: and_Neg2147483647_int32, fnname: "and_Neg2147483647_int32", in: 2147483647, want: 1},
	test_int32{fn: and_int32_Neg2147483647, fnname: "and_int32_Neg2147483647", in: 2147483647, want: 1},
	test_int32{fn: and_Neg1_int32, fnname: "and_Neg1_int32", in: -2147483648, want: -2147483648},
	test_int32{fn: and_int32_Neg1, fnname: "and_int32_Neg1", in: -2147483648, want: -2147483648},
	test_int32{fn: and_Neg1_int32, fnname: "and_Neg1_int32", in: -2147483647, want: -2147483647},
	test_int32{fn: and_int32_Neg1, fnname: "and_int32_Neg1", in: -2147483647, want: -2147483647},
	test_int32{fn: and_Neg1_int32, fnname: "and_Neg1_int32", in: -1, want: -1},
	test_int32{fn: and_int32_Neg1, fnname: "and_int32_Neg1", in: -1, want: -1},
	test_int32{fn: and_Neg1_int32, fnname: "and_Neg1_int32", in: 0, want: 0},
	test_int32{fn: and_int32_Neg1, fnname: "and_int32_Neg1", in: 0, want: 0},
	test_int32{fn: and_Neg1_int32, fnname: "and_Neg1_int32", in: 1, want: 1},
	test_int32{fn: and_int32_Neg1, fnname: "and_int32_Neg1", in: 1, want: 1},
	test_int32{fn: and_Neg1_int32, fnname: "and_Neg1_int32", in: 2147483647, want: 2147483647},
	test_int32{fn: and_int32_Neg1, fnname: "and_int32_Neg1", in: 2147483647, want: 2147483647},
	test_int32{fn: and_0_int32, fnname: "and_0_int32", in: -2147483648, want: 0},
	test_int32{fn: and_int32_0, fnname: "and_int32_0", in: -2147483648, want: 0},
	test_int32{fn: and_0_int32, fnname: "and_0_int32", in: -2147483647, want: 0},
	test_int32{fn: and_int32_0, fnname: "and_int32_0", in: -2147483647, want: 0},
	test_int32{fn: and_0_int32, fnname: "and_0_int32", in: -1, want: 0},
	test_int32{fn: and_int32_0, fnname: "and_int32_0", in: -1, want: 0},
	test_int32{fn: and_0_int32, fnname: "and_0_int32", in: 0, want: 0},
	test_int32{fn: and_int32_0, fnname: "and_int32_0", in: 0, want: 0},
	test_int32{fn: and_0_int32, fnname: "and_0_int32", in: 1, want: 0},
	test_int32{fn: and_int32_0, fnname: "and_int32_0", in: 1, want: 0},
	test_int32{fn: and_0_int32, fnname: "and_0_int32", in: 2147483647, want: 0},
	test_int32{fn: and_int32_0, fnname: "and_int32_0", in: 2147483647, want: 0},
	test_int32{fn: and_1_int32, fnname: "and_1_int32", in: -2147483648, want: 0},
	test_int32{fn: and_int32_1, fnname: "and_int32_1", in: -2147483648, want: 0},
	test_int32{fn: and_1_int32, fnname: "and_1_int32", in: -2147483647, want: 1},
	test_int32{fn: and_int32_1, fnname: "and_int32_1", in: -2147483647, want: 1},
	test_int32{fn: and_1_int32, fnname: "and_1_int32", in: -1, want: 1},
	test_int32{fn: and_int32_1, fnname: "and_int32_1", in: -1, want: 1},
	test_int32{fn: and_1_int32, fnname: "and_1_int32", in: 0, want: 0},
	test_int32{fn: and_int32_1, fnname: "and_int32_1", in: 0, want: 0},
	test_int32{fn: and_1_int32, fnname: "and_1_int32", in: 1, want: 1},
	test_int32{fn: and_int32_1, fnname: "and_int32_1", in: 1, want: 1},
	test_int32{fn: and_1_int32, fnname: "and_1_int32", in: 2147483647, want: 1},
	test_int32{fn: and_int32_1, fnname: "and_int32_1", in: 2147483647, want: 1},
	test_int32{fn: and_2147483647_int32, fnname: "and_2147483647_int32", in: -2147483648, want: 0},
	test_int32{fn: and_int32_2147483647, fnname: "and_int32_2147483647", in: -2147483648, want: 0},
	test_int32{fn: and_2147483647_int32, fnname: "and_2147483647_int32", in: -2147483647, want: 1},
	test_int32{fn: and_int32_2147483647, fnname: "and_int32_2147483647", in: -2147483647, want: 1},
	test_int32{fn: and_2147483647_int32, fnname: "and_2147483647_int32", in: -1, want: 2147483647},
	test_int32{fn: and_int32_2147483647, fnname: "and_int32_2147483647", in: -1, want: 2147483647},
	test_int32{fn: and_2147483647_int32, fnname: "and_2147483647_int32", in: 0, want: 0},
	test_int32{fn: and_int32_2147483647, fnname: "and_int32_2147483647", in: 0, want: 0},
	test_int32{fn: and_2147483647_int32, fnname: "and_2147483647_int32", in: 1, want: 1},
	test_int32{fn: and_int32_2147483647, fnname: "and_int32_2147483647", in: 1, want: 1},
	test_int32{fn: and_2147483647_int32, fnname: "and_2147483647_int32", in: 2147483647, want: 2147483647},
	test_int32{fn: and_int32_2147483647, fnname: "and_int32_2147483647", in: 2147483647, want: 2147483647},
	test_int32{fn: or_Neg2147483648_int32, fnname: "or_Neg2147483648_int32", in: -2147483648, want: -2147483648},
	test_int32{fn: or_int32_Neg2147483648, fnname: "or_int32_Neg2147483648", in: -2147483648, want: -2147483648},
	test_int32{fn: or_Neg2147483648_int32, fnname: "or_Neg2147483648_int32", in: -2147483647, want: -2147483647},
	test_int32{fn: or_int32_Neg2147483648, fnname: "or_int32_Neg2147483648", in: -2147483647, want: -2147483647},
	test_int32{fn: or_Neg2147483648_int32, fnname: "or_Neg2147483648_int32", in: -1, want: -1},
	test_int32{fn: or_int32_Neg2147483648, fnname: "or_int32_Neg2147483648", in: -1, want: -1},
	test_int32{fn: or_Neg2147483648_int32, fnname: "or_Neg2147483648_int32", in: 0, want: -2147483648},
	test_int32{fn: or_int32_Neg2147483648, fnname: "or_int32_Neg2147483648", in: 0, want: -2147483648},
	test_int32{fn: or_Neg2147483648_int32, fnname: "or_Neg2147483648_int32", in: 1, want: -2147483647},
	test_int32{fn: or_int32_Neg2147483648, fnname: "or_int32_Neg2147483648", in: 1, want: -2147483647},
	test_int32{fn: or_Neg2147483648_int32, fnname: "or_Neg2147483648_int32", in: 2147483647, want: -1},
	test_int32{fn: or_int32_Neg2147483648, fnname: "or_int32_Neg2147483648", in: 2147483647, want: -1},
	test_int32{fn: or_Neg2147483647_int32, fnname: "or_Neg2147483647_int32", in: -2147483648, want: -2147483647},
	test_int32{fn: or_int32_Neg2147483647, fnname: "or_int32_Neg2147483647", in: -2147483648, want: -2147483647},
	test_int32{fn: or_Neg2147483647_int32, fnname: "or_Neg2147483647_int32", in: -2147483647, want: -2147483647},
	test_int32{fn: or_int32_Neg2147483647, fnname: "or_int32_Neg2147483647", in: -2147483647, want: -2147483647},
	test_int32{fn: or_Neg2147483647_int32, fnname: "or_Neg2147483647_int32", in: -1, want: -1},
	test_int32{fn: or_int32_Neg2147483647, fnname: "or_int32_Neg2147483647", in: -1, want: -1},
	test_int32{fn: or_Neg2147483647_int32, fnname: "or_Neg2147483647_int32", in: 0, want: -2147483647},
	test_int32{fn: or_int32_Neg2147483647, fnname: "or_int32_Neg2147483647", in: 0, want: -2147483647},
	test_int32{fn: or_Neg2147483647_int32, fnname: "or_Neg2147483647_int32", in: 1, want: -2147483647},
	test_int32{fn: or_int32_Neg2147483647, fnname: "or_int32_Neg2147483647", in: 1, want: -2147483647},
	test_int32{fn: or_Neg2147483647_int32, fnname: "or_Neg2147483647_int32", in: 2147483647, want: -1},
	test_int32{fn: or_int32_Neg2147483647, fnname: "or_int32_Neg2147483647", in: 2147483647, want: -1},
	test_int32{fn: or_Neg1_int32, fnname: "or_Neg1_int32", in: -2147483648, want: -1},
	test_int32{fn: or_int32_Neg1, fnname: "or_int32_Neg1", in: -2147483648, want: -1},
	test_int32{fn: or_Neg1_int32, fnname: "or_Neg1_int32", in: -2147483647, want: -1},
	test_int32{fn: or_int32_Neg1, fnname: "or_int32_Neg1", in: -2147483647, want: -1},
	test_int32{fn: or_Neg1_int32, fnname: "or_Neg1_int32", in: -1, want: -1},
	test_int32{fn: or_int32_Neg1, fnname: "or_int32_Neg1", in: -1, want: -1},
	test_int32{fn: or_Neg1_int32, fnname: "or_Neg1_int32", in: 0, want: -1},
	test_int32{fn: or_int32_Neg1, fnname: "or_int32_Neg1", in: 0, want: -1},
	test_int32{fn: or_Neg1_int32, fnname: "or_Neg1_int32", in: 1, want: -1},
	test_int32{fn: or_int32_Neg1, fnname: "or_int32_Neg1", in: 1, want: -1},
	test_int32{fn: or_Neg1_int32, fnname: "or_Neg1_int32", in: 2147483647, want: -1},
	test_int32{fn: or_int32_Neg1, fnname: "or_int32_Neg1", in: 2147483647, want: -1},
	test_int32{fn: or_0_int32, fnname: "or_0_int32", in: -2147483648, want: -2147483648},
	test_int32{fn: or_int32_0, fnname: "or_int32_0", in: -2147483648, want: -2147483648},
	test_int32{fn: or_0_int32, fnname: "or_0_int32", in: -2147483647, want: -2147483647},
	test_int32{fn: or_int32_0, fnname: "or_int32_0", in: -2147483647, want: -2147483647},
	test_int32{fn: or_0_int32, fnname: "or_0_int32", in: -1, want: -1},
	test_int32{fn: or_int32_0, fnname: "or_int32_0", in: -1, want: -1},
	test_int32{fn: or_0_int32, fnname: "or_0_int32", in: 0, want: 0},
	test_int32{fn: or_int32_0, fnname: "or_int32_0", in: 0, want: 0},
	test_int32{fn: or_0_int32, fnname: "or_0_int32", in: 1, want: 1},
	test_int32{fn: or_int32_0, fnname: "or_int32_0", in: 1, want: 1},
	test_int32{fn: or_0_int32, fnname: "or_0_int32", in: 2147483647, want: 2147483647},
	test_int32{fn: or_int32_0, fnname: "or_int32_0", in: 2147483647, want: 2147483647},
	test_int32{fn: or_1_int32, fnname: "or_1_int32", in: -2147483648, want: -2147483647},
	test_int32{fn: or_int32_1, fnname: "or_int32_1", in: -2147483648, want: -2147483647},
	test_int32{fn: or_1_int32, fnname: "or_1_int32", in: -2147483647, want: -2147483647},
	test_int32{fn: or_int32_1, fnname: "or_int32_1", in: -2147483647, want: -2147483647},
	test_int32{fn: or_1_int32, fnname: "or_1_int32", in: -1, want: -1},
	test_int32{fn: or_int32_1, fnname: "or_int32_1", in: -1, want: -1},
	test_int32{fn: or_1_int32, fnname: "or_1_int32", in: 0, want: 1},
	test_int32{fn: or_int32_1, fnname: "or_int32_1", in: 0, want: 1},
	test_int32{fn: or_1_int32, fnname: "or_1_int32", in: 1, want: 1},
	test_int32{fn: or_int32_1, fnname: "or_int32_1", in: 1, want: 1},
	test_int32{fn: or_1_int32, fnname: "or_1_int32", in: 2147483647, want: 2147483647},
	test_int32{fn: or_int32_1, fnname: "or_int32_1", in: 2147483647, want: 2147483647},
	test_int32{fn: or_2147483647_int32, fnname: "or_2147483647_int32", in: -2147483648, want: -1},
	test_int32{fn: or_int32_2147483647, fnname: "or_int32_2147483647", in: -2147483648, want: -1},
	test_int32{fn: or_2147483647_int32, fnname: "or_2147483647_int32", in: -2147483647, want: -1},
	test_int32{fn: or_int32_2147483647, fnname: "or_int32_2147483647", in: -2147483647, want: -1},
	test_int32{fn: or_2147483647_int32, fnname: "or_2147483647_int32", in: -1, want: -1},
	test_int32{fn: or_int32_2147483647, fnname: "or_int32_2147483647", in: -1, want: -1},
	test_int32{fn: or_2147483647_int32, fnname: "or_2147483647_int32", in: 0, want: 2147483647},
	test_int32{fn: or_int32_2147483647, fnname: "or_int32_2147483647", in: 0, want: 2147483647},
	test_int32{fn: or_2147483647_int32, fnname: "or_2147483647_int32", in: 1, want: 2147483647},
	test_int32{fn: or_int32_2147483647, fnname: "or_int32_2147483647", in: 1, want: 2147483647},
	test_int32{fn: or_2147483647_int32, fnname: "or_2147483647_int32", in: 2147483647, want: 2147483647},
	test_int32{fn: or_int32_2147483647, fnname: "or_int32_2147483647", in: 2147483647, want: 2147483647},
	test_int32{fn: xor_Neg2147483648_int32, fnname: "xor_Neg2147483648_int32", in: -2147483648, want: 0},
	test_int32{fn: xor_int32_Neg2147483648, fnname: "xor_int32_Neg2147483648", in: -2147483648, want: 0},
	test_int32{fn: xor_Neg2147483648_int32, fnname: "xor_Neg2147483648_int32", in: -2147483647, want: 1},
	test_int32{fn: xor_int32_Neg2147483648, fnname: "xor_int32_Neg2147483648", in: -2147483647, want: 1},
	test_int32{fn: xor_Neg2147483648_int32, fnname: "xor_Neg2147483648_int32", in: -1, want: 2147483647},
	test_int32{fn: xor_int32_Neg2147483648, fnname: "xor_int32_Neg2147483648", in: -1, want: 2147483647},
	test_int32{fn: xor_Neg2147483648_int32, fnname: "xor_Neg2147483648_int32", in: 0, want: -2147483648},
	test_int32{fn: xor_int32_Neg2147483648, fnname: "xor_int32_Neg2147483648", in: 0, want: -2147483648},
	test_int32{fn: xor_Neg2147483648_int32, fnname: "xor_Neg2147483648_int32", in: 1, want: -2147483647},
	test_int32{fn: xor_int32_Neg2147483648, fnname: "xor_int32_Neg2147483648", in: 1, want: -2147483647},
	test_int32{fn: xor_Neg2147483648_int32, fnname: "xor_Neg2147483648_int32", in: 2147483647, want: -1},
	test_int32{fn: xor_int32_Neg2147483648, fnname: "xor_int32_Neg2147483648", in: 2147483647, want: -1},
	test_int32{fn: xor_Neg2147483647_int32, fnname: "xor_Neg2147483647_int32", in: -2147483648, want: 1},
	test_int32{fn: xor_int32_Neg2147483647, fnname: "xor_int32_Neg2147483647", in: -2147483648, want: 1},
	test_int32{fn: xor_Neg2147483647_int32, fnname: "xor_Neg2147483647_int32", in: -2147483647, want: 0},
	test_int32{fn: xor_int32_Neg2147483647, fnname: "xor_int32_Neg2147483647", in: -2147483647, want: 0},
	test_int32{fn: xor_Neg2147483647_int32, fnname: "xor_Neg2147483647_int32", in: -1, want: 2147483646},
	test_int32{fn: xor_int32_Neg2147483647, fnname: "xor_int32_Neg2147483647", in: -1, want: 2147483646},
	test_int32{fn: xor_Neg2147483647_int32, fnname: "xor_Neg2147483647_int32", in: 0, want: -2147483647},
	test_int32{fn: xor_int32_Neg2147483647, fnname: "xor_int32_Neg2147483647", in: 0, want: -2147483647},
	test_int32{fn: xor_Neg2147483647_int32, fnname: "xor_Neg2147483647_int32", in: 1, want: -2147483648},
	test_int32{fn: xor_int32_Neg2147483647, fnname: "xor_int32_Neg2147483647", in: 1, want: -2147483648},
	test_int32{fn: xor_Neg2147483647_int32, fnname: "xor_Neg2147483647_int32", in: 2147483647, want: -2},
	test_int32{fn: xor_int32_Neg2147483647, fnname: "xor_int32_Neg2147483647", in: 2147483647, want: -2},
	test_int32{fn: xor_Neg1_int32, fnname: "xor_Neg1_int32", in: -2147483648, want: 2147483647},
	test_int32{fn: xor_int32_Neg1, fnname: "xor_int32_Neg1", in: -2147483648, want: 2147483647},
	test_int32{fn: xor_Neg1_int32, fnname: "xor_Neg1_int32", in: -2147483647, want: 2147483646},
	test_int32{fn: xor_int32_Neg1, fnname: "xor_int32_Neg1", in: -2147483647, want: 2147483646},
	test_int32{fn: xor_Neg1_int32, fnname: "xor_Neg1_int32", in: -1, want: 0},
	test_int32{fn: xor_int32_Neg1, fnname: "xor_int32_Neg1", in: -1, want: 0},
	test_int32{fn: xor_Neg1_int32, fnname: "xor_Neg1_int32", in: 0, want: -1},
	test_int32{fn: xor_int32_Neg1, fnname: "xor_int32_Neg1", in: 0, want: -1},
	test_int32{fn: xor_Neg1_int32, fnname: "xor_Neg1_int32", in: 1, want: -2},
	test_int32{fn: xor_int32_Neg1, fnname: "xor_int32_Neg1", in: 1, want: -2},
	test_int32{fn: xor_Neg1_int32, fnname: "xor_Neg1_int32", in: 2147483647, want: -2147483648},
	test_int32{fn: xor_int32_Neg1, fnname: "xor_int32_Neg1", in: 2147483647, want: -2147483648},
	test_int32{fn: xor_0_int32, fnname: "xor_0_int32", in: -2147483648, want: -2147483648},
	test_int32{fn: xor_int32_0, fnname: "xor_int32_0", in: -2147483648, want: -2147483648},
	test_int32{fn: xor_0_int32, fnname: "xor_0_int32", in: -2147483647, want: -2147483647},
	test_int32{fn: xor_int32_0, fnname: "xor_int32_0", in: -2147483647, want: -2147483647},
	test_int32{fn: xor_0_int32, fnname: "xor_0_int32", in: -1, want: -1},
	test_int32{fn: xor_int32_0, fnname: "xor_int32_0", in: -1, want: -1},
	test_int32{fn: xor_0_int32, fnname: "xor_0_int32", in: 0, want: 0},
	test_int32{fn: xor_int32_0, fnname: "xor_int32_0", in: 0, want: 0},
	test_int32{fn: xor_0_int32, fnname: "xor_0_int32", in: 1, want: 1},
	test_int32{fn: xor_int32_0, fnname: "xor_int32_0", in: 1, want: 1},
	test_int32{fn: xor_0_int32, fnname: "xor_0_int32", in: 2147483647, want: 2147483647},
	test_int32{fn: xor_int32_0, fnname: "xor_int32_0", in: 2147483647, want: 2147483647},
	test_int32{fn: xor_1_int32, fnname: "xor_1_int32", in: -2147483648, want: -2147483647},
	test_int32{fn: xor_int32_1, fnname: "xor_int32_1", in: -2147483648, want: -2147483647},
	test_int32{fn: xor_1_int32, fnname: "xor_1_int32", in: -2147483647, want: -2147483648},
	test_int32{fn: xor_int32_1, fnname: "xor_int32_1", in: -2147483647, want: -2147483648},
	test_int32{fn: xor_1_int32, fnname: "xor_1_int32", in: -1, want: -2},
	test_int32{fn: xor_int32_1, fnname: "xor_int32_1", in: -1, want: -2},
	test_int32{fn: xor_1_int32, fnname: "xor_1_int32", in: 0, want: 1},
	test_int32{fn: xor_int32_1, fnname: "xor_int32_1", in: 0, want: 1},
	test_int32{fn: xor_1_int32, fnname: "xor_1_int32", in: 1, want: 0},
	test_int32{fn: xor_int32_1, fnname: "xor_int32_1", in: 1, want: 0},
	test_int32{fn: xor_1_int32, fnname: "xor_1_int32", in: 2147483647, want: 2147483646},
	test_int32{fn: xor_int32_1, fnname: "xor_int32_1", in: 2147483647, want: 2147483646},
	test_int32{fn: xor_2147483647_int32, fnname: "xor_2147483647_int32", in: -2147483648, want: -1},
	test_int32{fn: xor_int32_2147483647, fnname: "xor_int32_2147483647", in: -2147483648, want: -1},
	test_int32{fn: xor_2147483647_int32, fnname: "xor_2147483647_int32", in: -2147483647, want: -2},
	test_int32{fn: xor_int32_2147483647, fnname: "xor_int32_2147483647", in: -2147483647, want: -2},
	test_int32{fn: xor_2147483647_int32, fnname: "xor_2147483647_int32", in: -1, want: -2147483648},
	test_int32{fn: xor_int32_2147483647, fnname: "xor_int32_2147483647", in: -1, want: -2147483648},
	test_int32{fn: xor_2147483647_int32, fnname: "xor_2147483647_int32", in: 0, want: 2147483647},
	test_int32{fn: xor_int32_2147483647, fnname: "xor_int32_2147483647", in: 0, want: 2147483647},
	test_int32{fn: xor_2147483647_int32, fnname: "xor_2147483647_int32", in: 1, want: 2147483646},
	test_int32{fn: xor_int32_2147483647, fnname: "xor_int32_2147483647", in: 1, want: 2147483646},
	test_int32{fn: xor_2147483647_int32, fnname: "xor_2147483647_int32", in: 2147483647, want: 0},
	test_int32{fn: xor_int32_2147483647, fnname: "xor_int32_2147483647", in: 2147483647, want: 0}}

type test_uint16 struct {
	fn     func(uint16) uint16
	fnname string
	in     uint16
	want   uint16
}

var tests_uint16 = []test_uint16{

	test_uint16{fn: add_0_uint16, fnname: "add_0_uint16", in: 0, want: 0},
	test_uint16{fn: add_uint16_0, fnname: "add_uint16_0", in: 0, want: 0},
	test_uint16{fn: add_0_uint16, fnname: "add_0_uint16", in: 1, want: 1},
	test_uint16{fn: add_uint16_0, fnname: "add_uint16_0", in: 1, want: 1},
	test_uint16{fn: add_0_uint16, fnname: "add_0_uint16", in: 65535, want: 65535},
	test_uint16{fn: add_uint16_0, fnname: "add_uint16_0", in: 65535, want: 65535},
	test_uint16{fn: add_1_uint16, fnname: "add_1_uint16", in: 0, want: 1},
	test_uint16{fn: add_uint16_1, fnname: "add_uint16_1", in: 0, want: 1},
	test_uint16{fn: add_1_uint16, fnname: "add_1_uint16", in: 1, want: 2},
	test_uint16{fn: add_uint16_1, fnname: "add_uint16_1", in: 1, want: 2},
	test_uint16{fn: add_1_uint16, fnname: "add_1_uint16", in: 65535, want: 0},
	test_uint16{fn: add_uint16_1, fnname: "add_uint16_1", in: 65535, want: 0},
	test_uint16{fn: add_65535_uint16, fnname: "add_65535_uint16", in: 0, want: 65535},
	test_uint16{fn: add_uint16_65535, fnname: "add_uint16_65535", in: 0, want: 65535},
	test_uint16{fn: add_65535_uint16, fnname: "add_65535_uint16", in: 1, want: 0},
	test_uint16{fn: add_uint16_65535, fnname: "add_uint16_65535", in: 1, want: 0},
	test_uint16{fn: add_65535_uint16, fnname: "add_65535_uint16", in: 65535, want: 65534},
	test_uint16{fn: add_uint16_65535, fnname: "add_uint16_65535", in: 65535, want: 65534},
	test_uint16{fn: sub_0_uint16, fnname: "sub_0_uint16", in: 0, want: 0},
	test_uint16{fn: sub_uint16_0, fnname: "sub_uint16_0", in: 0, want: 0},
	test_uint16{fn: sub_0_uint16, fnname: "sub_0_uint16", in: 1, want: 65535},
	test_uint16{fn: sub_uint16_0, fnname: "sub_uint16_0", in: 1, want: 1},
	test_uint16{fn: sub_0_uint16, fnname: "sub_0_uint16", in: 65535, want: 1},
	test_uint16{fn: sub_uint16_0, fnname: "sub_uint16_0", in: 65535, want: 65535},
	test_uint16{fn: sub_1_uint16, fnname: "sub_1_uint16", in: 0, want: 1},
	test_uint16{fn: sub_uint16_1, fnname: "sub_uint16_1", in: 0, want: 65535},
	test_uint16{fn: sub_1_uint16, fnname: "sub_1_uint16", in: 1, want: 0},
	test_uint16{fn: sub_uint16_1, fnname: "sub_uint16_1", in: 1, want: 0},
	test_uint16{fn: sub_1_uint16, fnname: "sub_1_uint16", in: 65535, want: 2},
	test_uint16{fn: sub_uint16_1, fnname: "sub_uint16_1", in: 65535, want: 65534},
	test_uint16{fn: sub_65535_uint16, fnname: "sub_65535_uint16", in: 0, want: 65535},
	test_uint16{fn: sub_uint16_65535, fnname: "sub_uint16_65535", in: 0, want: 1},
	test_uint16{fn: sub_65535_uint16, fnname: "sub_65535_uint16", in: 1, want: 65534},
	test_uint16{fn: sub_uint16_65535, fnname: "sub_uint16_65535", in: 1, want: 2},
	test_uint16{fn: sub_65535_uint16, fnname: "sub_65535_uint16", in: 65535, want: 0},
	test_uint16{fn: sub_uint16_65535, fnname: "sub_uint16_65535", in: 65535, want: 0},
	test_uint16{fn: div_0_uint16, fnname: "div_0_uint16", in: 1, want: 0},
	test_uint16{fn: div_0_uint16, fnname: "div_0_uint16", in: 65535, want: 0},
	test_uint16{fn: div_uint16_1, fnname: "div_uint16_1", in: 0, want: 0},
	test_uint16{fn: div_1_uint16, fnname: "div_1_uint16", in: 1, want: 1},
	test_uint16{fn: div_uint16_1, fnname: "div_uint16_1", in: 1, want: 1},
	test_uint16{fn: div_1_uint16, fnname: "div_1_uint16", in: 65535, want: 0},
	test_uint16{fn: div_uint16_1, fnname: "div_uint16_1", in: 65535, want: 65535},
	test_uint16{fn: div_uint16_65535, fnname: "div_uint16_65535", in: 0, want: 0},
	test_uint16{fn: div_65535_uint16, fnname: "div_65535_uint16", in: 1, want: 65535},
	test_uint16{fn: div_uint16_65535, fnname: "div_uint16_65535", in: 1, want: 0},
	test_uint16{fn: div_65535_uint16, fnname: "div_65535_uint16", in: 65535, want: 1},
	test_uint16{fn: div_uint16_65535, fnname: "div_uint16_65535", in: 65535, want: 1},
	test_uint16{fn: mul_0_uint16, fnname: "mul_0_uint16", in: 0, want: 0},
	test_uint16{fn: mul_uint16_0, fnname: "mul_uint16_0", in: 0, want: 0},
	test_uint16{fn: mul_0_uint16, fnname: "mul_0_uint16", in: 1, want: 0},
	test_uint16{fn: mul_uint16_0, fnname: "mul_uint16_0", in: 1, want: 0},
	test_uint16{fn: mul_0_uint16, fnname: "mul_0_uint16", in: 65535, want: 0},
	test_uint16{fn: mul_uint16_0, fnname: "mul_uint16_0", in: 65535, want: 0},
	test_uint16{fn: mul_1_uint16, fnname: "mul_1_uint16", in: 0, want: 0},
	test_uint16{fn: mul_uint16_1, fnname: "mul_uint16_1", in: 0, want: 0},
	test_uint16{fn: mul_1_uint16, fnname: "mul_1_uint16", in: 1, want: 1},
	test_uint16{fn: mul_uint16_1, fnname: "mul_uint16_1", in: 1, want: 1},
	test_uint16{fn: mul_1_uint16, fnname: "mul_1_uint16", in: 65535, want: 65535},
	test_uint16{fn: mul_uint16_1, fnname: "mul_uint16_1", in: 65535, want: 65535},
	test_uint16{fn: mul_65535_uint16, fnname: "mul_65535_uint16", in: 0, want: 0},
	test_uint16{fn: mul_uint16_65535, fnname: "mul_uint16_65535", in: 0, want: 0},
	test_uint16{fn: mul_65535_uint16, fnname: "mul_65535_uint16", in: 1, want: 65535},
	test_uint16{fn: mul_uint16_65535, fnname: "mul_uint16_65535", in: 1, want: 65535},
	test_uint16{fn: mul_65535_uint16, fnname: "mul_65535_uint16", in: 65535, want: 1},
	test_uint16{fn: mul_uint16_65535, fnname: "mul_uint16_65535", in: 65535, want: 1},
	test_uint16{fn: lsh_0_uint16, fnname: "lsh_0_uint16", in: 0, want: 0},
	test_uint16{fn: lsh_uint16_0, fnname: "lsh_uint16_0", in: 0, want: 0},
	test_uint16{fn: lsh_0_uint16, fnname: "lsh_0_uint16", in: 1, want: 0},
	test_uint16{fn: lsh_uint16_0, fnname: "lsh_uint16_0", in: 1, want: 1},
	test_uint16{fn: lsh_0_uint16, fnname: "lsh_0_uint16", in: 65535, want: 0},
	test_uint16{fn: lsh_uint16_0, fnname: "lsh_uint16_0", in: 65535, want: 65535},
	test_uint16{fn: lsh_1_uint16, fnname: "lsh_1_uint16", in: 0, want: 1},
	test_uint16{fn: lsh_uint16_1, fnname: "lsh_uint16_1", in: 0, want: 0},
	test_uint16{fn: lsh_1_uint16, fnname: "lsh_1_uint16", in: 1, want: 2},
	test_uint16{fn: lsh_uint16_1, fnname: "lsh_uint16_1", in: 1, want: 2},
	test_uint16{fn: lsh_1_uint16, fnname: "lsh_1_uint16", in: 65535, want: 0},
	test_uint16{fn: lsh_uint16_1, fnname: "lsh_uint16_1", in: 65535, want: 65534},
	test_uint16{fn: lsh_65535_uint16, fnname: "lsh_65535_uint16", in: 0, want: 65535},
	test_uint16{fn: lsh_uint16_65535, fnname: "lsh_uint16_65535", in: 0, want: 0},
	test_uint16{fn: lsh_65535_uint16, fnname: "lsh_65535_uint16", in: 1, want: 65534},
	test_uint16{fn: lsh_uint16_65535, fnname: "lsh_uint16_65535", in: 1, want: 0},
	test_uint16{fn: lsh_65535_uint16, fnname: "lsh_65535_uint16", in: 65535, want: 0},
	test_uint16{fn: lsh_uint16_65535, fnname: "lsh_uint16_65535", in: 65535, want: 0},
	test_uint16{fn: rsh_0_uint16, fnname: "rsh_0_uint16", in: 0, want: 0},
	test_uint16{fn: rsh_uint16_0, fnname: "rsh_uint16_0", in: 0, want: 0},
	test_uint16{fn: rsh_0_uint16, fnname: "rsh_0_uint16", in: 1, want: 0},
	test_uint16{fn: rsh_uint16_0, fnname: "rsh_uint16_0", in: 1, want: 1},
	test_uint16{fn: rsh_0_uint16, fnname: "rsh_0_uint16", in: 65535, want: 0},
	test_uint16{fn: rsh_uint16_0, fnname: "rsh_uint16_0", in: 65535, want: 65535},
	test_uint16{fn: rsh_1_uint16, fnname: "rsh_1_uint16", in: 0, want: 1},
	test_uint16{fn: rsh_uint16_1, fnname: "rsh_uint16_1", in: 0, want: 0},
	test_uint16{fn: rsh_1_uint16, fnname: "rsh_1_uint16", in: 1, want: 0},
	test_uint16{fn: rsh_uint16_1, fnname: "rsh_uint16_1", in: 1, want: 0},
	test_uint16{fn: rsh_1_uint16, fnname: "rsh_1_uint16", in: 65535, want: 0},
	test_uint16{fn: rsh_uint16_1, fnname: "rsh_uint16_1", in: 65535, want: 32767},
	test_uint16{fn: rsh_65535_uint16, fnname: "rsh_65535_uint16", in: 0, want: 65535},
	test_uint16{fn: rsh_uint16_65535, fnname: "rsh_uint16_65535", in: 0, want: 0},
	test_uint16{fn: rsh_65535_uint16, fnname: "rsh_65535_uint16", in: 1, want: 32767},
	test_uint16{fn: rsh_uint16_65535, fnname: "rsh_uint16_65535", in: 1, want: 0},
	test_uint16{fn: rsh_65535_uint16, fnname: "rsh_65535_uint16", in: 65535, want: 0},
	test_uint16{fn: rsh_uint16_65535, fnname: "rsh_uint16_65535", in: 65535, want: 0},
	test_uint16{fn: mod_0_uint16, fnname: "mod_0_uint16", in: 1, want: 0},
	test_uint16{fn: mod_0_uint16, fnname: "mod_0_uint16", in: 65535, want: 0},
	test_uint16{fn: mod_uint16_1, fnname: "mod_uint16_1", in: 0, want: 0},
	test_uint16{fn: mod_1_uint16, fnname: "mod_1_uint16", in: 1, want: 0},
	test_uint16{fn: mod_uint16_1, fnname: "mod_uint16_1", in: 1, want: 0},
	test_uint16{fn: mod_1_uint16, fnname: "mod_1_uint16", in: 65535, want: 1},
	test_uint16{fn: mod_uint16_1, fnname: "mod_uint16_1", in: 65535, want: 0},
	test_uint16{fn: mod_uint16_65535, fnname: "mod_uint16_65535", in: 0, want: 0},
	test_uint16{fn: mod_65535_uint16, fnname: "mod_65535_uint16", in: 1, want: 0},
	test_uint16{fn: mod_uint16_65535, fnname: "mod_uint16_65535", in: 1, want: 1},
	test_uint16{fn: mod_65535_uint16, fnname: "mod_65535_uint16", in: 65535, want: 0},
	test_uint16{fn: mod_uint16_65535, fnname: "mod_uint16_65535", in: 65535, want: 0},
	test_uint16{fn: and_0_uint16, fnname: "and_0_uint16", in: 0, want: 0},
	test_uint16{fn: and_uint16_0, fnname: "and_uint16_0", in: 0, want: 0},
	test_uint16{fn: and_0_uint16, fnname: "and_0_uint16", in: 1, want: 0},
	test_uint16{fn: and_uint16_0, fnname: "and_uint16_0", in: 1, want: 0},
	test_uint16{fn: and_0_uint16, fnname: "and_0_uint16", in: 65535, want: 0},
	test_uint16{fn: and_uint16_0, fnname: "and_uint16_0", in: 65535, want: 0},
	test_uint16{fn: and_1_uint16, fnname: "and_1_uint16", in: 0, want: 0},
	test_uint16{fn: and_uint16_1, fnname: "and_uint16_1", in: 0, want: 0},
	test_uint16{fn: and_1_uint16, fnname: "and_1_uint16", in: 1, want: 1},
	test_uint16{fn: and_uint16_1, fnname: "and_uint16_1", in: 1, want: 1},
	test_uint16{fn: and_1_uint16, fnname: "and_1_uint16", in: 65535, want: 1},
	test_uint16{fn: and_uint16_1, fnname: "and_uint16_1", in: 65535, want: 1},
	test_uint16{fn: and_65535_uint16, fnname: "and_65535_uint16", in: 0, want: 0},
	test_uint16{fn: and_uint16_65535, fnname: "and_uint16_65535", in: 0, want: 0},
	test_uint16{fn: and_65535_uint16, fnname: "and_65535_uint16", in: 1, want: 1},
	test_uint16{fn: and_uint16_65535, fnname: "and_uint16_65535", in: 1, want: 1},
	test_uint16{fn: and_65535_uint16, fnname: "and_65535_uint16", in: 65535, want: 65535},
	test_uint16{fn: and_uint16_65535, fnname: "and_uint16_65535", in: 65535, want: 65535},
	test_uint16{fn: or_0_uint16, fnname: "or_0_uint16", in: 0, want: 0},
	test_uint16{fn: or_uint16_0, fnname: "or_uint16_0", in: 0, want: 0},
	test_uint16{fn: or_0_uint16, fnname: "or_0_uint16", in: 1, want: 1},
	test_uint16{fn: or_uint16_0, fnname: "or_uint16_0", in: 1, want: 1},
	test_uint16{fn: or_0_uint16, fnname: "or_0_uint16", in: 65535, want: 65535},
	test_uint16{fn: or_uint16_0, fnname: "or_uint16_0", in: 65535, want: 65535},
	test_uint16{fn: or_1_uint16, fnname: "or_1_uint16", in: 0, want: 1},
	test_uint16{fn: or_uint16_1, fnname: "or_uint16_1", in: 0, want: 1},
	test_uint16{fn: or_1_uint16, fnname: "or_1_uint16", in: 1, want: 1},
	test_uint16{fn: or_uint16_1, fnname: "or_uint16_1", in: 1, want: 1},
	test_uint16{fn: or_1_uint16, fnname: "or_1_uint16", in: 65535, want: 65535},
	test_uint16{fn: or_uint16_1, fnname: "or_uint16_1", in: 65535, want: 65535},
	test_uint16{fn: or_65535_uint16, fnname: "or_65535_uint16", in: 0, want: 65535},
	test_uint16{fn: or_uint16_65535, fnname: "or_uint16_65535", in: 0, want: 65535},
	test_uint16{fn: or_65535_uint16, fnname: "or_65535_uint16", in: 1, want: 65535},
	test_uint16{fn: or_uint16_65535, fnname: "or_uint16_65535", in: 1, want: 65535},
	test_uint16{fn: or_65535_uint16, fnname: "or_65535_uint16", in: 65535, want: 65535},
	test_uint16{fn: or_uint16_65535, fnname: "or_uint16_65535", in: 65535, want: 65535},
	test_uint16{fn: xor_0_uint16, fnname: "xor_0_uint16", in: 0, want: 0},
	test_uint16{fn: xor_uint16_0, fnname: "xor_uint16_0", in: 0, want: 0},
	test_uint16{fn: xor_0_uint16, fnname: "xor_0_uint16", in: 1, want: 1},
	test_uint16{fn: xor_uint16_0, fnname: "xor_uint16_0", in: 1, want: 1},
	test_uint16{fn: xor_0_uint16, fnname: "xor_0_uint16", in: 65535, want: 65535},
	test_uint16{fn: xor_uint16_0, fnname: "xor_uint16_0", in: 65535, want: 65535},
	test_uint16{fn: xor_1_uint16, fnname: "xor_1_uint16", in: 0, want: 1},
	test_uint16{fn: xor_uint16_1, fnname: "xor_uint16_1", in: 0, want: 1},
	test_uint16{fn: xor_1_uint16, fnname: "xor_1_uint16", in: 1, want: 0},
	test_uint16{fn: xor_uint16_1, fnname: "xor_uint16_1", in: 1, want: 0},
	test_uint16{fn: xor_1_uint16, fnname: "xor_1_uint16", in: 65535, want: 65534},
	test_uint16{fn: xor_uint16_1, fnname: "xor_uint16_1", in: 65535, want: 65534},
	test_uint16{fn: xor_65535_uint16, fnname: "xor_65535_uint16", in: 0, want: 65535},
	test_uint16{fn: xor_uint16_65535, fnname: "xor_uint16_65535", in: 0, want: 65535},
	test_uint16{fn: xor_65535_uint16, fnname: "xor_65535_uint16", in: 1, want: 65534},
	test_uint16{fn: xor_uint16_65535, fnname: "xor_uint16_65535", in: 1, want: 65534},
	test_uint16{fn: xor_65535_uint16, fnname: "xor_65535_uint16", in: 65535, want: 0},
	test_uint16{fn: xor_uint16_65535, fnname: "xor_uint16_65535", in: 65535, want: 0}}

type test_int16 struct {
	fn     func(int16) int16
	fnname string
	in     int16
	want   int16
}

var tests_int16 = []test_int16{

	test_int16{fn: add_Neg32768_int16, fnname: "add_Neg32768_int16", in: -32768, want: 0},
	test_int16{fn: add_int16_Neg32768, fnname: "add_int16_Neg32768", in: -32768, want: 0},
	test_int16{fn: add_Neg32768_int16, fnname: "add_Neg32768_int16", in: -32767, want: 1},
	test_int16{fn: add_int16_Neg32768, fnname: "add_int16_Neg32768", in: -32767, want: 1},
	test_int16{fn: add_Neg32768_int16, fnname: "add_Neg32768_int16", in: -1, want: 32767},
	test_int16{fn: add_int16_Neg32768, fnname: "add_int16_Neg32768", in: -1, want: 32767},
	test_int16{fn: add_Neg32768_int16, fnname: "add_Neg32768_int16", in: 0, want: -32768},
	test_int16{fn: add_int16_Neg32768, fnname: "add_int16_Neg32768", in: 0, want: -32768},
	test_int16{fn: add_Neg32768_int16, fnname: "add_Neg32768_int16", in: 1, want: -32767},
	test_int16{fn: add_int16_Neg32768, fnname: "add_int16_Neg32768", in: 1, want: -32767},
	test_int16{fn: add_Neg32768_int16, fnname: "add_Neg32768_int16", in: 32766, want: -2},
	test_int16{fn: add_int16_Neg32768, fnname: "add_int16_Neg32768", in: 32766, want: -2},
	test_int16{fn: add_Neg32768_int16, fnname: "add_Neg32768_int16", in: 32767, want: -1},
	test_int16{fn: add_int16_Neg32768, fnname: "add_int16_Neg32768", in: 32767, want: -1},
	test_int16{fn: add_Neg32767_int16, fnname: "add_Neg32767_int16", in: -32768, want: 1},
	test_int16{fn: add_int16_Neg32767, fnname: "add_int16_Neg32767", in: -32768, want: 1},
	test_int16{fn: add_Neg32767_int16, fnname: "add_Neg32767_int16", in: -32767, want: 2},
	test_int16{fn: add_int16_Neg32767, fnname: "add_int16_Neg32767", in: -32767, want: 2},
	test_int16{fn: add_Neg32767_int16, fnname: "add_Neg32767_int16", in: -1, want: -32768},
	test_int16{fn: add_int16_Neg32767, fnname: "add_int16_Neg32767", in: -1, want: -32768},
	test_int16{fn: add_Neg32767_int16, fnname: "add_Neg32767_int16", in: 0, want: -32767},
	test_int16{fn: add_int16_Neg32767, fnname: "add_int16_Neg32767", in: 0, want: -32767},
	test_int16{fn: add_Neg32767_int16, fnname: "add_Neg32767_int16", in: 1, want: -32766},
	test_int16{fn: add_int16_Neg32767, fnname: "add_int16_Neg32767", in: 1, want: -32766},
	test_int16{fn: add_Neg32767_int16, fnname: "add_Neg32767_int16", in: 32766, want: -1},
	test_int16{fn: add_int16_Neg32767, fnname: "add_int16_Neg32767", in: 32766, want: -1},
	test_int16{fn: add_Neg32767_int16, fnname: "add_Neg32767_int16", in: 32767, want: 0},
	test_int16{fn: add_int16_Neg32767, fnname: "add_int16_Neg32767", in: 32767, want: 0},
	test_int16{fn: add_Neg1_int16, fnname: "add_Neg1_int16", in: -32768, want: 32767},
	test_int16{fn: add_int16_Neg1, fnname: "add_int16_Neg1", in: -32768, want: 32767},
	test_int16{fn: add_Neg1_int16, fnname: "add_Neg1_int16", in: -32767, want: -32768},
	test_int16{fn: add_int16_Neg1, fnname: "add_int16_Neg1", in: -32767, want: -32768},
	test_int16{fn: add_Neg1_int16, fnname: "add_Neg1_int16", in: -1, want: -2},
	test_int16{fn: add_int16_Neg1, fnname: "add_int16_Neg1", in: -1, want: -2},
	test_int16{fn: add_Neg1_int16, fnname: "add_Neg1_int16", in: 0, want: -1},
	test_int16{fn: add_int16_Neg1, fnname: "add_int16_Neg1", in: 0, want: -1},
	test_int16{fn: add_Neg1_int16, fnname: "add_Neg1_int16", in: 1, want: 0},
	test_int16{fn: add_int16_Neg1, fnname: "add_int16_Neg1", in: 1, want: 0},
	test_int16{fn: add_Neg1_int16, fnname: "add_Neg1_int16", in: 32766, want: 32765},
	test_int16{fn: add_int16_Neg1, fnname: "add_int16_Neg1", in: 32766, want: 32765},
	test_int16{fn: add_Neg1_int16, fnname: "add_Neg1_int16", in: 32767, want: 32766},
	test_int16{fn: add_int16_Neg1, fnname: "add_int16_Neg1", in: 32767, want: 32766},
	test_int16{fn: add_0_int16, fnname: "add_0_int16", in: -32768, want: -32768},
	test_int16{fn: add_int16_0, fnname: "add_int16_0", in: -32768, want: -32768},
	test_int16{fn: add_0_int16, fnname: "add_0_int16", in: -32767, want: -32767},
	test_int16{fn: add_int16_0, fnname: "add_int16_0", in: -32767, want: -32767},
	test_int16{fn: add_0_int16, fnname: "add_0_int16", in: -1, want: -1},
	test_int16{fn: add_int16_0, fnname: "add_int16_0", in: -1, want: -1},
	test_int16{fn: add_0_int16, fnname: "add_0_int16", in: 0, want: 0},
	test_int16{fn: add_int16_0, fnname: "add_int16_0", in: 0, want: 0},
	test_int16{fn: add_0_int16, fnname: "add_0_int16", in: 1, want: 1},
	test_int16{fn: add_int16_0, fnname: "add_int16_0", in: 1, want: 1},
	test_int16{fn: add_0_int16, fnname: "add_0_int16", in: 32766, want: 32766},
	test_int16{fn: add_int16_0, fnname: "add_int16_0", in: 32766, want: 32766},
	test_int16{fn: add_0_int16, fnname: "add_0_int16", in: 32767, want: 32767},
	test_int16{fn: add_int16_0, fnname: "add_int16_0", in: 32767, want: 32767},
	test_int16{fn: add_1_int16, fnname: "add_1_int16", in: -32768, want: -32767},
	test_int16{fn: add_int16_1, fnname: "add_int16_1", in: -32768, want: -32767},
	test_int16{fn: add_1_int16, fnname: "add_1_int16", in: -32767, want: -32766},
	test_int16{fn: add_int16_1, fnname: "add_int16_1", in: -32767, want: -32766},
	test_int16{fn: add_1_int16, fnname: "add_1_int16", in: -1, want: 0},
	test_int16{fn: add_int16_1, fnname: "add_int16_1", in: -1, want: 0},
	test_int16{fn: add_1_int16, fnname: "add_1_int16", in: 0, want: 1},
	test_int16{fn: add_int16_1, fnname: "add_int16_1", in: 0, want: 1},
	test_int16{fn: add_1_int16, fnname: "add_1_int16", in: 1, want: 2},
	test_int16{fn: add_int16_1, fnname: "add_int16_1", in: 1, want: 2},
	test_int16{fn: add_1_int16, fnname: "add_1_int16", in: 32766, want: 32767},
	test_int16{fn: add_int16_1, fnname: "add_int16_1", in: 32766, want: 32767},
	test_int16{fn: add_1_int16, fnname: "add_1_int16", in: 32767, want: -32768},
	test_int16{fn: add_int16_1, fnname: "add_int16_1", in: 32767, want: -32768},
	test_int16{fn: add_32766_int16, fnname: "add_32766_int16", in: -32768, want: -2},
	test_int16{fn: add_int16_32766, fnname: "add_int16_32766", in: -32768, want: -2},
	test_int16{fn: add_32766_int16, fnname: "add_32766_int16", in: -32767, want: -1},
	test_int16{fn: add_int16_32766, fnname: "add_int16_32766", in: -32767, want: -1},
	test_int16{fn: add_32766_int16, fnname: "add_32766_int16", in: -1, want: 32765},
	test_int16{fn: add_int16_32766, fnname: "add_int16_32766", in: -1, want: 32765},
	test_int16{fn: add_32766_int16, fnname: "add_32766_int16", in: 0, want: 32766},
	test_int16{fn: add_int16_32766, fnname: "add_int16_32766", in: 0, want: 32766},
	test_int16{fn: add_32766_int16, fnname: "add_32766_int16", in: 1, want: 32767},
	test_int16{fn: add_int16_32766, fnname: "add_int16_32766", in: 1, want: 32767},
	test_int16{fn: add_32766_int16, fnname: "add_32766_int16", in: 32766, want: -4},
	test_int16{fn: add_int16_32766, fnname: "add_int16_32766", in: 32766, want: -4},
	test_int16{fn: add_32766_int16, fnname: "add_32766_int16", in: 32767, want: -3},
	test_int16{fn: add_int16_32766, fnname: "add_int16_32766", in: 32767, want: -3},
	test_int16{fn: add_32767_int16, fnname: "add_32767_int16", in: -32768, want: -1},
	test_int16{fn: add_int16_32767, fnname: "add_int16_32767", in: -32768, want: -1},
	test_int16{fn: add_32767_int16, fnname: "add_32767_int16", in: -32767, want: 0},
	test_int16{fn: add_int16_32767, fnname: "add_int16_32767", in: -32767, want: 0},
	test_int16{fn: add_32767_int16, fnname: "add_32767_int16", in: -1, want: 32766},
	test_int16{fn: add_int16_32767, fnname: "add_int16_32767", in: -1, want: 32766},
	test_int16{fn: add_32767_int16, fnname: "add_32767_int16", in: 0, want: 32767},
	test_int16{fn: add_int16_32767, fnname: "add_int16_32767", in: 0, want: 32767},
	test_int16{fn: add_32767_int16, fnname: "add_32767_int16", in: 1, want: -32768},
	test_int16{fn: add_int16_32767, fnname: "add_int16_32767", in: 1, want: -32768},
	test_int16{fn: add_32767_int16, fnname: "add_32767_int16", in: 32766, want: -3},
	test_int16{fn: add_int16_32767, fnname: "add_int16_32767", in: 32766, want: -3},
	test_int16{fn: add_32767_int16, fnname: "add_32767_int16", in: 32767, want: -2},
	test_int16{fn: add_int16_32767, fnname: "add_int16_32767", in: 32767, want: -2},
	test_int16{fn: sub_Neg32768_int16, fnname: "sub_Neg32768_int16", in: -32768, want: 0},
	test_int16{fn: sub_int16_Neg32768, fnname: "sub_int16_Neg32768", in: -32768, want: 0},
	test_int16{fn: sub_Neg32768_int16, fnname: "sub_Neg32768_int16", in: -32767, want: -1},
	test_int16{fn: sub_int16_Neg32768, fnname: "sub_int16_Neg32768", in: -32767, want: 1},
	test_int16{fn: sub_Neg32768_int16, fnname: "sub_Neg32768_int16", in: -1, want: -32767},
	test_int16{fn: sub_int16_Neg32768, fnname: "sub_int16_Neg32768", in: -1, want: 32767},
	test_int16{fn: sub_Neg32768_int16, fnname: "sub_Neg32768_int16", in: 0, want: -32768},
	test_int16{fn: sub_int16_Neg32768, fnname: "sub_int16_Neg32768", in: 0, want: -32768},
	test_int16{fn: sub_Neg32768_int16, fnname: "sub_Neg32768_int16", in: 1, want: 32767},
	test_int16{fn: sub_int16_Neg32768, fnname: "sub_int16_Neg32768", in: 1, want: -32767},
	test_int16{fn: sub_Neg32768_int16, fnname: "sub_Neg32768_int16", in: 32766, want: 2},
	test_int16{fn: sub_int16_Neg32768, fnname: "sub_int16_Neg32768", in: 32766, want: -2},
	test_int16{fn: sub_Neg32768_int16, fnname: "sub_Neg32768_int16", in: 32767, want: 1},
	test_int16{fn: sub_int16_Neg32768, fnname: "sub_int16_Neg32768", in: 32767, want: -1},
	test_int16{fn: sub_Neg32767_int16, fnname: "sub_Neg32767_int16", in: -32768, want: 1},
	test_int16{fn: sub_int16_Neg32767, fnname: "sub_int16_Neg32767", in: -32768, want: -1},
	test_int16{fn: sub_Neg32767_int16, fnname: "sub_Neg32767_int16", in: -32767, want: 0},
	test_int16{fn: sub_int16_Neg32767, fnname: "sub_int16_Neg32767", in: -32767, want: 0},
	test_int16{fn: sub_Neg32767_int16, fnname: "sub_Neg32767_int16", in: -1, want: -32766},
	test_int16{fn: sub_int16_Neg32767, fnname: "sub_int16_Neg32767", in: -1, want: 32766},
	test_int16{fn: sub_Neg32767_int16, fnname: "sub_Neg32767_int16", in: 0, want: -32767},
	test_int16{fn: sub_int16_Neg32767, fnname: "sub_int16_Neg32767", in: 0, want: 32767},
	test_int16{fn: sub_Neg32767_int16, fnname: "sub_Neg32767_int16", in: 1, want: -32768},
	test_int16{fn: sub_int16_Neg32767, fnname: "sub_int16_Neg32767", in: 1, want: -32768},
	test_int16{fn: sub_Neg32767_int16, fnname: "sub_Neg32767_int16", in: 32766, want: 3},
	test_int16{fn: sub_int16_Neg32767, fnname: "sub_int16_Neg32767", in: 32766, want: -3},
	test_int16{fn: sub_Neg32767_int16, fnname: "sub_Neg32767_int16", in: 32767, want: 2},
	test_int16{fn: sub_int16_Neg32767, fnname: "sub_int16_Neg32767", in: 32767, want: -2},
	test_int16{fn: sub_Neg1_int16, fnname: "sub_Neg1_int16", in: -32768, want: 32767},
	test_int16{fn: sub_int16_Neg1, fnname: "sub_int16_Neg1", in: -32768, want: -32767},
	test_int16{fn: sub_Neg1_int16, fnname: "sub_Neg1_int16", in: -32767, want: 32766},
	test_int16{fn: sub_int16_Neg1, fnname: "sub_int16_Neg1", in: -32767, want: -32766},
	test_int16{fn: sub_Neg1_int16, fnname: "sub_Neg1_int16", in: -1, want: 0},
	test_int16{fn: sub_int16_Neg1, fnname: "sub_int16_Neg1", in: -1, want: 0},
	test_int16{fn: sub_Neg1_int16, fnname: "sub_Neg1_int16", in: 0, want: -1},
	test_int16{fn: sub_int16_Neg1, fnname: "sub_int16_Neg1", in: 0, want: 1},
	test_int16{fn: sub_Neg1_int16, fnname: "sub_Neg1_int16", in: 1, want: -2},
	test_int16{fn: sub_int16_Neg1, fnname: "sub_int16_Neg1", in: 1, want: 2},
	test_int16{fn: sub_Neg1_int16, fnname: "sub_Neg1_int16", in: 32766, want: -32767},
	test_int16{fn: sub_int16_Neg1, fnname: "sub_int16_Neg1", in: 32766, want: 32767},
	test_int16{fn: sub_Neg1_int16, fnname: "sub_Neg1_int16", in: 32767, want: -32768},
	test_int16{fn: sub_int16_Neg1, fnname: "sub_int16_Neg1", in: 32767, want: -32768},
	test_int16{fn: sub_0_int16, fnname: "sub_0_int16", in: -32768, want: -32768},
	test_int16{fn: sub_int16_0, fnname: "sub_int16_0", in: -32768, want: -32768},
	test_int16{fn: sub_0_int16, fnname: "sub_0_int16", in: -32767, want: 32767},
	test_int16{fn: sub_int16_0, fnname: "sub_int16_0", in: -32767, want: -32767},
	test_int16{fn: sub_0_int16, fnname: "sub_0_int16", in: -1, want: 1},
	test_int16{fn: sub_int16_0, fnname: "sub_int16_0", in: -1, want: -1},
	test_int16{fn: sub_0_int16, fnname: "sub_0_int16", in: 0, want: 0},
	test_int16{fn: sub_int16_0, fnname: "sub_int16_0", in: 0, want: 0},
	test_int16{fn: sub_0_int16, fnname: "sub_0_int16", in: 1, want: -1},
	test_int16{fn: sub_int16_0, fnname: "sub_int16_0", in: 1, want: 1},
	test_int16{fn: sub_0_int16, fnname: "sub_0_int16", in: 32766, want: -32766},
	test_int16{fn: sub_int16_0, fnname: "sub_int16_0", in: 32766, want: 32766},
	test_int16{fn: sub_0_int16, fnname: "sub_0_int16", in: 32767, want: -32767},
	test_int16{fn: sub_int16_0, fnname: "sub_int16_0", in: 32767, want: 32767},
	test_int16{fn: sub_1_int16, fnname: "sub_1_int16", in: -32768, want: -32767},
	test_int16{fn: sub_int16_1, fnname: "sub_int16_1", in: -32768, want: 32767},
	test_int16{fn: sub_1_int16, fnname: "sub_1_int16", in: -32767, want: -32768},
	test_int16{fn: sub_int16_1, fnname: "sub_int16_1", in: -32767, want: -32768},
	test_int16{fn: sub_1_int16, fnname: "sub_1_int16", in: -1, want: 2},
	test_int16{fn: sub_int16_1, fnname: "sub_int16_1", in: -1, want: -2},
	test_int16{fn: sub_1_int16, fnname: "sub_1_int16", in: 0, want: 1},
	test_int16{fn: sub_int16_1, fnname: "sub_int16_1", in: 0, want: -1},
	test_int16{fn: sub_1_int16, fnname: "sub_1_int16", in: 1, want: 0},
	test_int16{fn: sub_int16_1, fnname: "sub_int16_1", in: 1, want: 0},
	test_int16{fn: sub_1_int16, fnname: "sub_1_int16", in: 32766, want: -32765},
	test_int16{fn: sub_int16_1, fnname: "sub_int16_1", in: 32766, want: 32765},
	test_int16{fn: sub_1_int16, fnname: "sub_1_int16", in: 32767, want: -32766},
	test_int16{fn: sub_int16_1, fnname: "sub_int16_1", in: 32767, want: 32766},
	test_int16{fn: sub_32766_int16, fnname: "sub_32766_int16", in: -32768, want: -2},
	test_int16{fn: sub_int16_32766, fnname: "sub_int16_32766", in: -32768, want: 2},
	test_int16{fn: sub_32766_int16, fnname: "sub_32766_int16", in: -32767, want: -3},
	test_int16{fn: sub_int16_32766, fnname: "sub_int16_32766", in: -32767, want: 3},
	test_int16{fn: sub_32766_int16, fnname: "sub_32766_int16", in: -1, want: 32767},
	test_int16{fn: sub_int16_32766, fnname: "sub_int16_32766", in: -1, want: -32767},
	test_int16{fn: sub_32766_int16, fnname: "sub_32766_int16", in: 0, want: 32766},
	test_int16{fn: sub_int16_32766, fnname: "sub_int16_32766", in: 0, want: -32766},
	test_int16{fn: sub_32766_int16, fnname: "sub_32766_int16", in: 1, want: 32765},
	test_int16{fn: sub_int16_32766, fnname: "sub_int16_32766", in: 1, want: -32765},
	test_int16{fn: sub_32766_int16, fnname: "sub_32766_int16", in: 32766, want: 0},
	test_int16{fn: sub_int16_32766, fnname: "sub_int16_32766", in: 32766, want: 0},
	test_int16{fn: sub_32766_int16, fnname: "sub_32766_int16", in: 32767, want: -1},
	test_int16{fn: sub_int16_32766, fnname: "sub_int16_32766", in: 32767, want: 1},
	test_int16{fn: sub_32767_int16, fnname: "sub_32767_int16", in: -32768, want: -1},
	test_int16{fn: sub_int16_32767, fnname: "sub_int16_32767", in: -32768, want: 1},
	test_int16{fn: sub_32767_int16, fnname: "sub_32767_int16", in: -32767, want: -2},
	test_int16{fn: sub_int16_32767, fnname: "sub_int16_32767", in: -32767, want: 2},
	test_int16{fn: sub_32767_int16, fnname: "sub_32767_int16", in: -1, want: -32768},
	test_int16{fn: sub_int16_32767, fnname: "sub_int16_32767", in: -1, want: -32768},
	test_int16{fn: sub_32767_int16, fnname: "sub_32767_int16", in: 0, want: 32767},
	test_int16{fn: sub_int16_32767, fnname: "sub_int16_32767", in: 0, want: -32767},
	test_int16{fn: sub_32767_int16, fnname: "sub_32767_int16", in: 1, want: 32766},
	test_int16{fn: sub_int16_32767, fnname: "sub_int16_32767", in: 1, want: -32766},
	test_int16{fn: sub_32767_int16, fnname: "sub_32767_int16", in: 32766, want: 1},
	test_int16{fn: sub_int16_32767, fnname: "sub_int16_32767", in: 32766, want: -1},
	test_int16{fn: sub_32767_int16, fnname: "sub_32767_int16", in: 32767, want: 0},
	test_int16{fn: sub_int16_32767, fnname: "sub_int16_32767", in: 32767, want: 0},
	test_int16{fn: div_Neg32768_int16, fnname: "div_Neg32768_int16", in: -32768, want: 1},
	test_int16{fn: div_int16_Neg32768, fnname: "div_int16_Neg32768", in: -32768, want: 1},
	test_int16{fn: div_Neg32768_int16, fnname: "div_Neg32768_int16", in: -32767, want: 1},
	test_int16{fn: div_int16_Neg32768, fnname: "div_int16_Neg32768", in: -32767, want: 0},
	test_int16{fn: div_Neg32768_int16, fnname: "div_Neg32768_int16", in: -1, want: -32768},
	test_int16{fn: div_int16_Neg32768, fnname: "div_int16_Neg32768", in: -1, want: 0},
	test_int16{fn: div_int16_Neg32768, fnname: "div_int16_Neg32768", in: 0, want: 0},
	test_int16{fn: div_Neg32768_int16, fnname: "div_Neg32768_int16", in: 1, want: -32768},
	test_int16{fn: div_int16_Neg32768, fnname: "div_int16_Neg32768", in: 1, want: 0},
	test_int16{fn: div_Neg32768_int16, fnname: "div_Neg32768_int16", in: 32766, want: -1},
	test_int16{fn: div_int16_Neg32768, fnname: "div_int16_Neg32768", in: 32766, want: 0},
	test_int16{fn: div_Neg32768_int16, fnname: "div_Neg32768_int16", in: 32767, want: -1},
	test_int16{fn: div_int16_Neg32768, fnname: "div_int16_Neg32768", in: 32767, want: 0},
	test_int16{fn: div_Neg32767_int16, fnname: "div_Neg32767_int16", in: -32768, want: 0},
	test_int16{fn: div_int16_Neg32767, fnname: "div_int16_Neg32767", in: -32768, want: 1},
	test_int16{fn: div_Neg32767_int16, fnname: "div_Neg32767_int16", in: -32767, want: 1},
	test_int16{fn: div_int16_Neg32767, fnname: "div_int16_Neg32767", in: -32767, want: 1},
	test_int16{fn: div_Neg32767_int16, fnname: "div_Neg32767_int16", in: -1, want: 32767},
	test_int16{fn: div_int16_Neg32767, fnname: "div_int16_Neg32767", in: -1, want: 0},
	test_int16{fn: div_int16_Neg32767, fnname: "div_int16_Neg32767", in: 0, want: 0},
	test_int16{fn: div_Neg32767_int16, fnname: "div_Neg32767_int16", in: 1, want: -32767},
	test_int16{fn: div_int16_Neg32767, fnname: "div_int16_Neg32767", in: 1, want: 0},
	test_int16{fn: div_Neg32767_int16, fnname: "div_Neg32767_int16", in: 32766, want: -1},
	test_int16{fn: div_int16_Neg32767, fnname: "div_int16_Neg32767", in: 32766, want: 0},
	test_int16{fn: div_Neg32767_int16, fnname: "div_Neg32767_int16", in: 32767, want: -1},
	test_int16{fn: div_int16_Neg32767, fnname: "div_int16_Neg32767", in: 32767, want: -1},
	test_int16{fn: div_Neg1_int16, fnname: "div_Neg1_int16", in: -32768, want: 0},
	test_int16{fn: div_int16_Neg1, fnname: "div_int16_Neg1", in: -32768, want: -32768},
	test_int16{fn: div_Neg1_int16, fnname: "div_Neg1_int16", in: -32767, want: 0},
	test_int16{fn: div_int16_Neg1, fnname: "div_int16_Neg1", in: -32767, want: 32767},
	test_int16{fn: div_Neg1_int16, fnname: "div_Neg1_int16", in: -1, want: 1},
	test_int16{fn: div_int16_Neg1, fnname: "div_int16_Neg1", in: -1, want: 1},
	test_int16{fn: div_int16_Neg1, fnname: "div_int16_Neg1", in: 0, want: 0},
	test_int16{fn: div_Neg1_int16, fnname: "div_Neg1_int16", in: 1, want: -1},
	test_int16{fn: div_int16_Neg1, fnname: "div_int16_Neg1", in: 1, want: -1},
	test_int16{fn: div_Neg1_int16, fnname: "div_Neg1_int16", in: 32766, want: 0},
	test_int16{fn: div_int16_Neg1, fnname: "div_int16_Neg1", in: 32766, want: -32766},
	test_int16{fn: div_Neg1_int16, fnname: "div_Neg1_int16", in: 32767, want: 0},
	test_int16{fn: div_int16_Neg1, fnname: "div_int16_Neg1", in: 32767, want: -32767},
	test_int16{fn: div_0_int16, fnname: "div_0_int16", in: -32768, want: 0},
	test_int16{fn: div_0_int16, fnname: "div_0_int16", in: -32767, want: 0},
	test_int16{fn: div_0_int16, fnname: "div_0_int16", in: -1, want: 0},
	test_int16{fn: div_0_int16, fnname: "div_0_int16", in: 1, want: 0},
	test_int16{fn: div_0_int16, fnname: "div_0_int16", in: 32766, want: 0},
	test_int16{fn: div_0_int16, fnname: "div_0_int16", in: 32767, want: 0},
	test_int16{fn: div_1_int16, fnname: "div_1_int16", in: -32768, want: 0},
	test_int16{fn: div_int16_1, fnname: "div_int16_1", in: -32768, want: -32768},
	test_int16{fn: div_1_int16, fnname: "div_1_int16", in: -32767, want: 0},
	test_int16{fn: div_int16_1, fnname: "div_int16_1", in: -32767, want: -32767},
	test_int16{fn: div_1_int16, fnname: "div_1_int16", in: -1, want: -1},
	test_int16{fn: div_int16_1, fnname: "div_int16_1", in: -1, want: -1},
	test_int16{fn: div_int16_1, fnname: "div_int16_1", in: 0, want: 0},
	test_int16{fn: div_1_int16, fnname: "div_1_int16", in: 1, want: 1},
	test_int16{fn: div_int16_1, fnname: "div_int16_1", in: 1, want: 1},
	test_int16{fn: div_1_int16, fnname: "div_1_int16", in: 32766, want: 0},
	test_int16{fn: div_int16_1, fnname: "div_int16_1", in: 32766, want: 32766},
	test_int16{fn: div_1_int16, fnname: "div_1_int16", in: 32767, want: 0},
	test_int16{fn: div_int16_1, fnname: "div_int16_1", in: 32767, want: 32767},
	test_int16{fn: div_32766_int16, fnname: "div_32766_int16", in: -32768, want: 0},
	test_int16{fn: div_int16_32766, fnname: "div_int16_32766", in: -32768, want: -1},
	test_int16{fn: div_32766_int16, fnname: "div_32766_int16", in: -32767, want: 0},
	test_int16{fn: div_int16_32766, fnname: "div_int16_32766", in: -32767, want: -1},
	test_int16{fn: div_32766_int16, fnname: "div_32766_int16", in: -1, want: -32766},
	test_int16{fn: div_int16_32766, fnname: "div_int16_32766", in: -1, want: 0},
	test_int16{fn: div_int16_32766, fnname: "div_int16_32766", in: 0, want: 0},
	test_int16{fn: div_32766_int16, fnname: "div_32766_int16", in: 1, want: 32766},
	test_int16{fn: div_int16_32766, fnname: "div_int16_32766", in: 1, want: 0},
	test_int16{fn: div_32766_int16, fnname: "div_32766_int16", in: 32766, want: 1},
	test_int16{fn: div_int16_32766, fnname: "div_int16_32766", in: 32766, want: 1},
	test_int16{fn: div_32766_int16, fnname: "div_32766_int16", in: 32767, want: 0},
	test_int16{fn: div_int16_32766, fnname: "div_int16_32766", in: 32767, want: 1},
	test_int16{fn: div_32767_int16, fnname: "div_32767_int16", in: -32768, want: 0},
	test_int16{fn: div_int16_32767, fnname: "div_int16_32767", in: -32768, want: -1},
	test_int16{fn: div_32767_int16, fnname: "div_32767_int16", in: -32767, want: -1},
	test_int16{fn: div_int16_32767, fnname: "div_int16_32767", in: -32767, want: -1},
	test_int16{fn: div_32767_int16, fnname: "div_32767_int16", in: -1, want: -32767},
	test_int16{fn: div_int16_32767, fnname: "div_int16_32767", in: -1, want: 0},
	test_int16{fn: div_int16_32767, fnname: "div_int16_32767", in: 0, want: 0},
	test_int16{fn: div_32767_int16, fnname: "div_32767_int16", in: 1, want: 32767},
	test_int16{fn: div_int16_32767, fnname: "div_int16_32767", in: 1, want: 0},
	test_int16{fn: div_32767_int16, fnname: "div_32767_int16", in: 32766, want: 1},
	test_int16{fn: div_int16_32767, fnname: "div_int16_32767", in: 32766, want: 0},
	test_int16{fn: div_32767_int16, fnname: "div_32767_int16", in: 32767, want: 1},
	test_int16{fn: div_int16_32767, fnname: "div_int16_32767", in: 32767, want: 1},
	test_int16{fn: mul_Neg32768_int16, fnname: "mul_Neg32768_int16", in: -32768, want: 0},
	test_int16{fn: mul_int16_Neg32768, fnname: "mul_int16_Neg32768", in: -32768, want: 0},
	test_int16{fn: mul_Neg32768_int16, fnname: "mul_Neg32768_int16", in: -32767, want: -32768},
	test_int16{fn: mul_int16_Neg32768, fnname: "mul_int16_Neg32768", in: -32767, want: -32768},
	test_int16{fn: mul_Neg32768_int16, fnname: "mul_Neg32768_int16", in: -1, want: -32768},
	test_int16{fn: mul_int16_Neg32768, fnname: "mul_int16_Neg32768", in: -1, want: -32768},
	test_int16{fn: mul_Neg32768_int16, fnname: "mul_Neg32768_int16", in: 0, want: 0},
	test_int16{fn: mul_int16_Neg32768, fnname: "mul_int16_Neg32768", in: 0, want: 0},
	test_int16{fn: mul_Neg32768_int16, fnname: "mul_Neg32768_int16", in: 1, want: -32768},
	test_int16{fn: mul_int16_Neg32768, fnname: "mul_int16_Neg32768", in: 1, want: -32768},
	test_int16{fn: mul_Neg32768_int16, fnname: "mul_Neg32768_int16", in: 32766, want: 0},
	test_int16{fn: mul_int16_Neg32768, fnname: "mul_int16_Neg32768", in: 32766, want: 0},
	test_int16{fn: mul_Neg32768_int16, fnname: "mul_Neg32768_int16", in: 32767, want: -32768},
	test_int16{fn: mul_int16_Neg32768, fnname: "mul_int16_Neg32768", in: 32767, want: -32768},
	test_int16{fn: mul_Neg32767_int16, fnname: "mul_Neg32767_int16", in: -32768, want: -32768},
	test_int16{fn: mul_int16_Neg32767, fnname: "mul_int16_Neg32767", in: -32768, want: -32768},
	test_int16{fn: mul_Neg32767_int16, fnname: "mul_Neg32767_int16", in: -32767, want: 1},
	test_int16{fn: mul_int16_Neg32767, fnname: "mul_int16_Neg32767", in: -32767, want: 1},
	test_int16{fn: mul_Neg32767_int16, fnname: "mul_Neg32767_int16", in: -1, want: 32767},
	test_int16{fn: mul_int16_Neg32767, fnname: "mul_int16_Neg32767", in: -1, want: 32767},
	test_int16{fn: mul_Neg32767_int16, fnname: "mul_Neg32767_int16", in: 0, want: 0},
	test_int16{fn: mul_int16_Neg32767, fnname: "mul_int16_Neg32767", in: 0, want: 0},
	test_int16{fn: mul_Neg32767_int16, fnname: "mul_Neg32767_int16", in: 1, want: -32767},
	test_int16{fn: mul_int16_Neg32767, fnname: "mul_int16_Neg32767", in: 1, want: -32767},
	test_int16{fn: mul_Neg32767_int16, fnname: "mul_Neg32767_int16", in: 32766, want: 32766},
	test_int16{fn: mul_int16_Neg32767, fnname: "mul_int16_Neg32767", in: 32766, want: 32766},
	test_int16{fn: mul_Neg32767_int16, fnname: "mul_Neg32767_int16", in: 32767, want: -1},
	test_int16{fn: mul_int16_Neg32767, fnname: "mul_int16_Neg32767", in: 32767, want: -1},
	test_int16{fn: mul_Neg1_int16, fnname: "mul_Neg1_int16", in: -32768, want: -32768},
	test_int16{fn: mul_int16_Neg1, fnname: "mul_int16_Neg1", in: -32768, want: -32768},
	test_int16{fn: mul_Neg1_int16, fnname: "mul_Neg1_int16", in: -32767, want: 32767},
	test_int16{fn: mul_int16_Neg1, fnname: "mul_int16_Neg1", in: -32767, want: 32767},
	test_int16{fn: mul_Neg1_int16, fnname: "mul_Neg1_int16", in: -1, want: 1},
	test_int16{fn: mul_int16_Neg1, fnname: "mul_int16_Neg1", in: -1, want: 1},
	test_int16{fn: mul_Neg1_int16, fnname: "mul_Neg1_int16", in: 0, want: 0},
	test_int16{fn: mul_int16_Neg1, fnname: "mul_int16_Neg1", in: 0, want: 0},
	test_int16{fn: mul_Neg1_int16, fnname: "mul_Neg1_int16", in: 1, want: -1},
	test_int16{fn: mul_int16_Neg1, fnname: "mul_int16_Neg1", in: 1, want: -1},
	test_int16{fn: mul_Neg1_int16, fnname: "mul_Neg1_int16", in: 32766, want: -32766},
	test_int16{fn: mul_int16_Neg1, fnname: "mul_int16_Neg1", in: 32766, want: -32766},
	test_int16{fn: mul_Neg1_int16, fnname: "mul_Neg1_int16", in: 32767, want: -32767},
	test_int16{fn: mul_int16_Neg1, fnname: "mul_int16_Neg1", in: 32767, want: -32767},
	test_int16{fn: mul_0_int16, fnname: "mul_0_int16", in: -32768, want: 0},
	test_int16{fn: mul_int16_0, fnname: "mul_int16_0", in: -32768, want: 0},
	test_int16{fn: mul_0_int16, fnname: "mul_0_int16", in: -32767, want: 0},
	test_int16{fn: mul_int16_0, fnname: "mul_int16_0", in: -32767, want: 0},
	test_int16{fn: mul_0_int16, fnname: "mul_0_int16", in: -1, want: 0},
	test_int16{fn: mul_int16_0, fnname: "mul_int16_0", in: -1, want: 0},
	test_int16{fn: mul_0_int16, fnname: "mul_0_int16", in: 0, want: 0},
	test_int16{fn: mul_int16_0, fnname: "mul_int16_0", in: 0, want: 0},
	test_int16{fn: mul_0_int16, fnname: "mul_0_int16", in: 1, want: 0},
	test_int16{fn: mul_int16_0, fnname: "mul_int16_0", in: 1, want: 0},
	test_int16{fn: mul_0_int16, fnname: "mul_0_int16", in: 32766, want: 0},
	test_int16{fn: mul_int16_0, fnname: "mul_int16_0", in: 32766, want: 0},
	test_int16{fn: mul_0_int16, fnname: "mul_0_int16", in: 32767, want: 0},
	test_int16{fn: mul_int16_0, fnname: "mul_int16_0", in: 32767, want: 0},
	test_int16{fn: mul_1_int16, fnname: "mul_1_int16", in: -32768, want: -32768},
	test_int16{fn: mul_int16_1, fnname: "mul_int16_1", in: -32768, want: -32768},
	test_int16{fn: mul_1_int16, fnname: "mul_1_int16", in: -32767, want: -32767},
	test_int16{fn: mul_int16_1, fnname: "mul_int16_1", in: -32767, want: -32767},
	test_int16{fn: mul_1_int16, fnname: "mul_1_int16", in: -1, want: -1},
	test_int16{fn: mul_int16_1, fnname: "mul_int16_1", in: -1, want: -1},
	test_int16{fn: mul_1_int16, fnname: "mul_1_int16", in: 0, want: 0},
	test_int16{fn: mul_int16_1, fnname: "mul_int16_1", in: 0, want: 0},
	test_int16{fn: mul_1_int16, fnname: "mul_1_int16", in: 1, want: 1},
	test_int16{fn: mul_int16_1, fnname: "mul_int16_1", in: 1, want: 1},
	test_int16{fn: mul_1_int16, fnname: "mul_1_int16", in: 32766, want: 32766},
	test_int16{fn: mul_int16_1, fnname: "mul_int16_1", in: 32766, want: 32766},
	test_int16{fn: mul_1_int16, fnname: "mul_1_int16", in: 32767, want: 32767},
	test_int16{fn: mul_int16_1, fnname: "mul_int16_1", in: 32767, want: 32767},
	test_int16{fn: mul_32766_int16, fnname: "mul_32766_int16", in: -32768, want: 0},
	test_int16{fn: mul_int16_32766, fnname: "mul_int16_32766", in: -32768, want: 0},
	test_int16{fn: mul_32766_int16, fnname: "mul_32766_int16", in: -32767, want: 32766},
	test_int16{fn: mul_int16_32766, fnname: "mul_int16_32766", in: -32767, want: 32766},
	test_int16{fn: mul_32766_int16, fnname: "mul_32766_int16", in: -1, want: -32766},
	test_int16{fn: mul_int16_32766, fnname: "mul_int16_32766", in: -1, want: -32766},
	test_int16{fn: mul_32766_int16, fnname: "mul_32766_int16", in: 0, want: 0},
	test_int16{fn: mul_int16_32766, fnname: "mul_int16_32766", in: 0, want: 0},
	test_int16{fn: mul_32766_int16, fnname: "mul_32766_int16", in: 1, want: 32766},
	test_int16{fn: mul_int16_32766, fnname: "mul_int16_32766", in: 1, want: 32766},
	test_int16{fn: mul_32766_int16, fnname: "mul_32766_int16", in: 32766, want: 4},
	test_int16{fn: mul_int16_32766, fnname: "mul_int16_32766", in: 32766, want: 4},
	test_int16{fn: mul_32766_int16, fnname: "mul_32766_int16", in: 32767, want: -32766},
	test_int16{fn: mul_int16_32766, fnname: "mul_int16_32766", in: 32767, want: -32766},
	test_int16{fn: mul_32767_int16, fnname: "mul_32767_int16", in: -32768, want: -32768},
	test_int16{fn: mul_int16_32767, fnname: "mul_int16_32767", in: -32768, want: -32768},
	test_int16{fn: mul_32767_int16, fnname: "mul_32767_int16", in: -32767, want: -1},
	test_int16{fn: mul_int16_32767, fnname: "mul_int16_32767", in: -32767, want: -1},
	test_int16{fn: mul_32767_int16, fnname: "mul_32767_int16", in: -1, want: -32767},
	test_int16{fn: mul_int16_32767, fnname: "mul_int16_32767", in: -1, want: -32767},
	test_int16{fn: mul_32767_int16, fnname: "mul_32767_int16", in: 0, want: 0},
	test_int16{fn: mul_int16_32767, fnname: "mul_int16_32767", in: 0, want: 0},
	test_int16{fn: mul_32767_int16, fnname: "mul_32767_int16", in: 1, want: 32767},
	test_int16{fn: mul_int16_32767, fnname: "mul_int16_32767", in: 1, want: 32767},
	test_int16{fn: mul_32767_int16, fnname: "mul_32767_int16", in: 32766, want: -32766},
	test_int16{fn: mul_int16_32767, fnname: "mul_int16_32767", in: 32766, want: -32766},
	test_int16{fn: mul_32767_int16, fnname: "mul_32767_int16", in: 32767, want: 1},
	test_int16{fn: mul_int16_32767, fnname: "mul_int16_32767", in: 32767, want: 1},
	test_int16{fn: mod_Neg32768_int16, fnname: "mod_Neg32768_int16", in: -32768, want: 0},
	test_int16{fn: mod_int16_Neg32768, fnname: "mod_int16_Neg32768", in: -32768, want: 0},
	test_int16{fn: mod_Neg32768_int16, fnname: "mod_Neg32768_int16", in: -32767, want: -1},
	test_int16{fn: mod_int16_Neg32768, fnname: "mod_int16_Neg32768", in: -32767, want: -32767},
	test_int16{fn: mod_Neg32768_int16, fnname: "mod_Neg32768_int16", in: -1, want: 0},
	test_int16{fn: mod_int16_Neg32768, fnname: "mod_int16_Neg32768", in: -1, want: -1},
	test_int16{fn: mod_int16_Neg32768, fnname: "mod_int16_Neg32768", in: 0, want: 0},
	test_int16{fn: mod_Neg32768_int16, fnname: "mod_Neg32768_int16", in: 1, want: 0},
	test_int16{fn: mod_int16_Neg32768, fnname: "mod_int16_Neg32768", in: 1, want: 1},
	test_int16{fn: mod_Neg32768_int16, fnname: "mod_Neg32768_int16", in: 32766, want: -2},
	test_int16{fn: mod_int16_Neg32768, fnname: "mod_int16_Neg32768", in: 32766, want: 32766},
	test_int16{fn: mod_Neg32768_int16, fnname: "mod_Neg32768_int16", in: 32767, want: -1},
	test_int16{fn: mod_int16_Neg32768, fnname: "mod_int16_Neg32768", in: 32767, want: 32767},
	test_int16{fn: mod_Neg32767_int16, fnname: "mod_Neg32767_int16", in: -32768, want: -32767},
	test_int16{fn: mod_int16_Neg32767, fnname: "mod_int16_Neg32767", in: -32768, want: -1},
	test_int16{fn: mod_Neg32767_int16, fnname: "mod_Neg32767_int16", in: -32767, want: 0},
	test_int16{fn: mod_int16_Neg32767, fnname: "mod_int16_Neg32767", in: -32767, want: 0},
	test_int16{fn: mod_Neg32767_int16, fnname: "mod_Neg32767_int16", in: -1, want: 0},
	test_int16{fn: mod_int16_Neg32767, fnname: "mod_int16_Neg32767", in: -1, want: -1},
	test_int16{fn: mod_int16_Neg32767, fnname: "mod_int16_Neg32767", in: 0, want: 0},
	test_int16{fn: mod_Neg32767_int16, fnname: "mod_Neg32767_int16", in: 1, want: 0},
	test_int16{fn: mod_int16_Neg32767, fnname: "mod_int16_Neg32767", in: 1, want: 1},
	test_int16{fn: mod_Neg32767_int16, fnname: "mod_Neg32767_int16", in: 32766, want: -1},
	test_int16{fn: mod_int16_Neg32767, fnname: "mod_int16_Neg32767", in: 32766, want: 32766},
	test_int16{fn: mod_Neg32767_int16, fnname: "mod_Neg32767_int16", in: 32767, want: 0},
	test_int16{fn: mod_int16_Neg32767, fnname: "mod_int16_Neg32767", in: 32767, want: 0},
	test_int16{fn: mod_Neg1_int16, fnname: "mod_Neg1_int16", in: -32768, want: -1},
	test_int16{fn: mod_int16_Neg1, fnname: "mod_int16_Neg1", in: -32768, want: 0},
	test_int16{fn: mod_Neg1_int16, fnname: "mod_Neg1_int16", in: -32767, want: -1},
	test_int16{fn: mod_int16_Neg1, fnname: "mod_int16_Neg1", in: -32767, want: 0},
	test_int16{fn: mod_Neg1_int16, fnname: "mod_Neg1_int16", in: -1, want: 0},
	test_int16{fn: mod_int16_Neg1, fnname: "mod_int16_Neg1", in: -1, want: 0},
	test_int16{fn: mod_int16_Neg1, fnname: "mod_int16_Neg1", in: 0, want: 0},
	test_int16{fn: mod_Neg1_int16, fnname: "mod_Neg1_int16", in: 1, want: 0},
	test_int16{fn: mod_int16_Neg1, fnname: "mod_int16_Neg1", in: 1, want: 0},
	test_int16{fn: mod_Neg1_int16, fnname: "mod_Neg1_int16", in: 32766, want: -1},
	test_int16{fn: mod_int16_Neg1, fnname: "mod_int16_Neg1", in: 32766, want: 0},
	test_int16{fn: mod_Neg1_int16, fnname: "mod_Neg1_int16", in: 32767, want: -1},
	test_int16{fn: mod_int16_Neg1, fnname: "mod_int16_Neg1", in: 32767, want: 0},
	test_int16{fn: mod_0_int16, fnname: "mod_0_int16", in: -32768, want: 0},
	test_int16{fn: mod_0_int16, fnname: "mod_0_int16", in: -32767, want: 0},
	test_int16{fn: mod_0_int16, fnname: "mod_0_int16", in: -1, want: 0},
	test_int16{fn: mod_0_int16, fnname: "mod_0_int16", in: 1, want: 0},
	test_int16{fn: mod_0_int16, fnname: "mod_0_int16", in: 32766, want: 0},
	test_int16{fn: mod_0_int16, fnname: "mod_0_int16", in: 32767, want: 0},
	test_int16{fn: mod_1_int16, fnname: "mod_1_int16", in: -32768, want: 1},
	test_int16{fn: mod_int16_1, fnname: "mod_int16_1", in: -32768, want: 0},
	test_int16{fn: mod_1_int16, fnname: "mod_1_int16", in: -32767, want: 1},
	test_int16{fn: mod_int16_1, fnname: "mod_int16_1", in: -32767, want: 0},
	test_int16{fn: mod_1_int16, fnname: "mod_1_int16", in: -1, want: 0},
	test_int16{fn: mod_int16_1, fnname: "mod_int16_1", in: -1, want: 0},
	test_int16{fn: mod_int16_1, fnname: "mod_int16_1", in: 0, want: 0},
	test_int16{fn: mod_1_int16, fnname: "mod_1_int16", in: 1, want: 0},
	test_int16{fn: mod_int16_1, fnname: "mod_int16_1", in: 1, want: 0},
	test_int16{fn: mod_1_int16, fnname: "mod_1_int16", in: 32766, want: 1},
	test_int16{fn: mod_int16_1, fnname: "mod_int16_1", in: 32766, want: 0},
	test_int16{fn: mod_1_int16, fnname: "mod_1_int16", in: 32767, want: 1},
	test_int16{fn: mod_int16_1, fnname: "mod_int16_1", in: 32767, want: 0},
	test_int16{fn: mod_32766_int16, fnname: "mod_32766_int16", in: -32768, want: 32766},
	test_int16{fn: mod_int16_32766, fnname: "mod_int16_32766", in: -32768, want: -2},
	test_int16{fn: mod_32766_int16, fnname: "mod_32766_int16", in: -32767, want: 32766},
	test_int16{fn: mod_int16_32766, fnname: "mod_int16_32766", in: -32767, want: -1},
	test_int16{fn: mod_32766_int16, fnname: "mod_32766_int16", in: -1, want: 0},
	test_int16{fn: mod_int16_32766, fnname: "mod_int16_32766", in: -1, want: -1},
	test_int16{fn: mod_int16_32766, fnname: "mod_int16_32766", in: 0, want: 0},
	test_int16{fn: mod_32766_int16, fnname: "mod_32766_int16", in: 1, want: 0},
	test_int16{fn: mod_int16_32766, fnname: "mod_int16_32766", in: 1, want: 1},
	test_int16{fn: mod_32766_int16, fnname: "mod_32766_int16", in: 32766, want: 0},
	test_int16{fn: mod_int16_32766, fnname: "mod_int16_32766", in: 32766, want: 0},
	test_int16{fn: mod_32766_int16, fnname: "mod_32766_int16", in: 32767, want: 32766},
	test_int16{fn: mod_int16_32766, fnname: "mod_int16_32766", in: 32767, want: 1},
	test_int16{fn: mod_32767_int16, fnname: "mod_32767_int16", in: -32768, want: 32767},
	test_int16{fn: mod_int16_32767, fnname: "mod_int16_32767", in: -32768, want: -1},
	test_int16{fn: mod_32767_int16, fnname: "mod_32767_int16", in: -32767, want: 0},
	test_int16{fn: mod_int16_32767, fnname: "mod_int16_32767", in: -32767, want: 0},
	test_int16{fn: mod_32767_int16, fnname: "mod_32767_int16", in: -1, want: 0},
	test_int16{fn: mod_int16_32767, fnname: "mod_int16_32767", in: -1, want: -1},
	test_int16{fn: mod_int16_32767, fnname: "mod_int16_32767", in: 0, want: 0},
	test_int16{fn: mod_32767_int16, fnname: "mod_32767_int16", in: 1, want: 0},
	test_int16{fn: mod_int16_32767, fnname: "mod_int16_32767", in: 1, want: 1},
	test_int16{fn: mod_32767_int16, fnname: "mod_32767_int16", in: 32766, want: 1},
	test_int16{fn: mod_int16_32767, fnname: "mod_int16_32767", in: 32766, want: 32766},
	test_int16{fn: mod_32767_int16, fnname: "mod_32767_int16", in: 32767, want: 0},
	test_int16{fn: mod_int16_32767, fnname: "mod_int16_32767", in: 32767, want: 0},
	test_int16{fn: and_Neg32768_int16, fnname: "and_Neg32768_int16", in: -32768, want: -32768},
	test_int16{fn: and_int16_Neg32768, fnname: "and_int16_Neg32768", in: -32768, want: -32768},
	test_int16{fn: and_Neg32768_int16, fnname: "and_Neg32768_int16", in: -32767, want: -32768},
	test_int16{fn: and_int16_Neg32768, fnname: "and_int16_Neg32768", in: -32767, want: -32768},
	test_int16{fn: and_Neg32768_int16, fnname: "and_Neg32768_int16", in: -1, want: -32768},
	test_int16{fn: and_int16_Neg32768, fnname: "and_int16_Neg32768", in: -1, want: -32768},
	test_int16{fn: and_Neg32768_int16, fnname: "and_Neg32768_int16", in: 0, want: 0},
	test_int16{fn: and_int16_Neg32768, fnname: "and_int16_Neg32768", in: 0, want: 0},
	test_int16{fn: and_Neg32768_int16, fnname: "and_Neg32768_int16", in: 1, want: 0},
	test_int16{fn: and_int16_Neg32768, fnname: "and_int16_Neg32768", in: 1, want: 0},
	test_int16{fn: and_Neg32768_int16, fnname: "and_Neg32768_int16", in: 32766, want: 0},
	test_int16{fn: and_int16_Neg32768, fnname: "and_int16_Neg32768", in: 32766, want: 0},
	test_int16{fn: and_Neg32768_int16, fnname: "and_Neg32768_int16", in: 32767, want: 0},
	test_int16{fn: and_int16_Neg32768, fnname: "and_int16_Neg32768", in: 32767, want: 0},
	test_int16{fn: and_Neg32767_int16, fnname: "and_Neg32767_int16", in: -32768, want: -32768},
	test_int16{fn: and_int16_Neg32767, fnname: "and_int16_Neg32767", in: -32768, want: -32768},
	test_int16{fn: and_Neg32767_int16, fnname: "and_Neg32767_int16", in: -32767, want: -32767},
	test_int16{fn: and_int16_Neg32767, fnname: "and_int16_Neg32767", in: -32767, want: -32767},
	test_int16{fn: and_Neg32767_int16, fnname: "and_Neg32767_int16", in: -1, want: -32767},
	test_int16{fn: and_int16_Neg32767, fnname: "and_int16_Neg32767", in: -1, want: -32767},
	test_int16{fn: and_Neg32767_int16, fnname: "and_Neg32767_int16", in: 0, want: 0},
	test_int16{fn: and_int16_Neg32767, fnname: "and_int16_Neg32767", in: 0, want: 0},
	test_int16{fn: and_Neg32767_int16, fnname: "and_Neg32767_int16", in: 1, want: 1},
	test_int16{fn: and_int16_Neg32767, fnname: "and_int16_Neg32767", in: 1, want: 1},
	test_int16{fn: and_Neg32767_int16, fnname: "and_Neg32767_int16", in: 32766, want: 0},
	test_int16{fn: and_int16_Neg32767, fnname: "and_int16_Neg32767", in: 32766, want: 0},
	test_int16{fn: and_Neg32767_int16, fnname: "and_Neg32767_int16", in: 32767, want: 1},
	test_int16{fn: and_int16_Neg32767, fnname: "and_int16_Neg32767", in: 32767, want: 1},
	test_int16{fn: and_Neg1_int16, fnname: "and_Neg1_int16", in: -32768, want: -32768},
	test_int16{fn: and_int16_Neg1, fnname: "and_int16_Neg1", in: -32768, want: -32768},
	test_int16{fn: and_Neg1_int16, fnname: "and_Neg1_int16", in: -32767, want: -32767},
	test_int16{fn: and_int16_Neg1, fnname: "and_int16_Neg1", in: -32767, want: -32767},
	test_int16{fn: and_Neg1_int16, fnname: "and_Neg1_int16", in: -1, want: -1},
	test_int16{fn: and_int16_Neg1, fnname: "and_int16_Neg1", in: -1, want: -1},
	test_int16{fn: and_Neg1_int16, fnname: "and_Neg1_int16", in: 0, want: 0},
	test_int16{fn: and_int16_Neg1, fnname: "and_int16_Neg1", in: 0, want: 0},
	test_int16{fn: and_Neg1_int16, fnname: "and_Neg1_int16", in: 1, want: 1},
	test_int16{fn: and_int16_Neg1, fnname: "and_int16_Neg1", in: 1, want: 1},
	test_int16{fn: and_Neg1_int16, fnname: "and_Neg1_int16", in: 32766, want: 32766},
	test_int16{fn: and_int16_Neg1, fnname: "and_int16_Neg1", in: 32766, want: 32766},
	test_int16{fn: and_Neg1_int16, fnname: "and_Neg1_int16", in: 32767, want: 32767},
	test_int16{fn: and_int16_Neg1, fnname: "and_int16_Neg1", in: 32767, want: 32767},
	test_int16{fn: and_0_int16, fnname: "and_0_int16", in: -32768, want: 0},
	test_int16{fn: and_int16_0, fnname: "and_int16_0", in: -32768, want: 0},
	test_int16{fn: and_0_int16, fnname: "and_0_int16", in: -32767, want: 0},
	test_int16{fn: and_int16_0, fnname: "and_int16_0", in: -32767, want: 0},
	test_int16{fn: and_0_int16, fnname: "and_0_int16", in: -1, want: 0},
	test_int16{fn: and_int16_0, fnname: "and_int16_0", in: -1, want: 0},
	test_int16{fn: and_0_int16, fnname: "and_0_int16", in: 0, want: 0},
	test_int16{fn: and_int16_0, fnname: "and_int16_0", in: 0, want: 0},
	test_int16{fn: and_0_int16, fnname: "and_0_int16", in: 1, want: 0},
	test_int16{fn: and_int16_0, fnname: "and_int16_0", in: 1, want: 0},
	test_int16{fn: and_0_int16, fnname: "and_0_int16", in: 32766, want: 0},
	test_int16{fn: and_int16_0, fnname: "and_int16_0", in: 32766, want: 0},
	test_int16{fn: and_0_int16, fnname: "and_0_int16", in: 32767, want: 0},
	test_int16{fn: and_int16_0, fnname: "and_int16_0", in: 32767, want: 0},
	test_int16{fn: and_1_int16, fnname: "and_1_int16", in: -32768, want: 0},
	test_int16{fn: and_int16_1, fnname: "and_int16_1", in: -32768, want: 0},
	test_int16{fn: and_1_int16, fnname: "and_1_int16", in: -32767, want: 1},
	test_int16{fn: and_int16_1, fnname: "and_int16_1", in: -32767, want: 1},
	test_int16{fn: and_1_int16, fnname: "and_1_int16", in: -1, want: 1},
	test_int16{fn: and_int16_1, fnname: "and_int16_1", in: -1, want: 1},
	test_int16{fn: and_1_int16, fnname: "and_1_int16", in: 0, want: 0},
	test_int16{fn: and_int16_1, fnname: "and_int16_1", in: 0, want: 0},
	test_int16{fn: and_1_int16, fnname: "and_1_int16", in: 1, want: 1},
	test_int16{fn: and_int16_1, fnname: "and_int16_1", in: 1, want: 1},
	test_int16{fn: and_1_int16, fnname: "and_1_int16", in: 32766, want: 0},
	test_int16{fn: and_int16_1, fnname: "and_int16_1", in: 32766, want: 0},
	test_int16{fn: and_1_int16, fnname: "and_1_int16", in: 32767, want: 1},
	test_int16{fn: and_int16_1, fnname: "and_int16_1", in: 32767, want: 1},
	test_int16{fn: and_32766_int16, fnname: "and_32766_int16", in: -32768, want: 0},
	test_int16{fn: and_int16_32766, fnname: "and_int16_32766", in: -32768, want: 0},
	test_int16{fn: and_32766_int16, fnname: "and_32766_int16", in: -32767, want: 0},
	test_int16{fn: and_int16_32766, fnname: "and_int16_32766", in: -32767, want: 0},
	test_int16{fn: and_32766_int16, fnname: "and_32766_int16", in: -1, want: 32766},
	test_int16{fn: and_int16_32766, fnname: "and_int16_32766", in: -1, want: 32766},
	test_int16{fn: and_32766_int16, fnname: "and_32766_int16", in: 0, want: 0},
	test_int16{fn: and_int16_32766, fnname: "and_int16_32766", in: 0, want: 0},
	test_int16{fn: and_32766_int16, fnname: "and_32766_int16", in: 1, want: 0},
	test_int16{fn: and_int16_32766, fnname: "and_int16_32766", in: 1, want: 0},
	test_int16{fn: and_32766_int16, fnname: "and_32766_int16", in: 32766, want: 32766},
	test_int16{fn: and_int16_32766, fnname: "and_int16_32766", in: 32766, want: 32766},
	test_int16{fn: and_32766_int16, fnname: "and_32766_int16", in: 32767, want: 32766},
	test_int16{fn: and_int16_32766, fnname: "and_int16_32766", in: 32767, want: 32766},
	test_int16{fn: and_32767_int16, fnname: "and_32767_int16", in: -32768, want: 0},
	test_int16{fn: and_int16_32767, fnname: "and_int16_32767", in: -32768, want: 0},
	test_int16{fn: and_32767_int16, fnname: "and_32767_int16", in: -32767, want: 1},
	test_int16{fn: and_int16_32767, fnname: "and_int16_32767", in: -32767, want: 1},
	test_int16{fn: and_32767_int16, fnname: "and_32767_int16", in: -1, want: 32767},
	test_int16{fn: and_int16_32767, fnname: "and_int16_32767", in: -1, want: 32767},
	test_int16{fn: and_32767_int16, fnname: "and_32767_int16", in: 0, want: 0},
	test_int16{fn: and_int16_32767, fnname: "and_int16_32767", in: 0, want: 0},
	test_int16{fn: and_32767_int16, fnname: "and_32767_int16", in: 1, want: 1},
	test_int16{fn: and_int16_32767, fnname: "and_int16_32767", in: 1, want: 1},
	test_int16{fn: and_32767_int16, fnname: "and_32767_int16", in: 32766, want: 32766},
	test_int16{fn: and_int16_32767, fnname: "and_int16_32767", in: 32766, want: 32766},
	test_int16{fn: and_32767_int16, fnname: "and_32767_int16", in: 32767, want: 32767},
	test_int16{fn: and_int16_32767, fnname: "and_int16_32767", in: 32767, want: 32767},
	test_int16{fn: or_Neg32768_int16, fnname: "or_Neg32768_int16", in: -32768, want: -32768},
	test_int16{fn: or_int16_Neg32768, fnname: "or_int16_Neg32768", in: -32768, want: -32768},
	test_int16{fn: or_Neg32768_int16, fnname: "or_Neg32768_int16", in: -32767, want: -32767},
	test_int16{fn: or_int16_Neg32768, fnname: "or_int16_Neg32768", in: -32767, want: -32767},
	test_int16{fn: or_Neg32768_int16, fnname: "or_Neg32768_int16", in: -1, want: -1},
	test_int16{fn: or_int16_Neg32768, fnname: "or_int16_Neg32768", in: -1, want: -1},
	test_int16{fn: or_Neg32768_int16, fnname: "or_Neg32768_int16", in: 0, want: -32768},
	test_int16{fn: or_int16_Neg32768, fnname: "or_int16_Neg32768", in: 0, want: -32768},
	test_int16{fn: or_Neg32768_int16, fnname: "or_Neg32768_int16", in: 1, want: -32767},
	test_int16{fn: or_int16_Neg32768, fnname: "or_int16_Neg32768", in: 1, want: -32767},
	test_int16{fn: or_Neg32768_int16, fnname: "or_Neg32768_int16", in: 32766, want: -2},
	test_int16{fn: or_int16_Neg32768, fnname: "or_int16_Neg32768", in: 32766, want: -2},
	test_int16{fn: or_Neg32768_int16, fnname: "or_Neg32768_int16", in: 32767, want: -1},
	test_int16{fn: or_int16_Neg32768, fnname: "or_int16_Neg32768", in: 32767, want: -1},
	test_int16{fn: or_Neg32767_int16, fnname: "or_Neg32767_int16", in: -32768, want: -32767},
	test_int16{fn: or_int16_Neg32767, fnname: "or_int16_Neg32767", in: -32768, want: -32767},
	test_int16{fn: or_Neg32767_int16, fnname: "or_Neg32767_int16", in: -32767, want: -32767},
	test_int16{fn: or_int16_Neg32767, fnname: "or_int16_Neg32767", in: -32767, want: -32767},
	test_int16{fn: or_Neg32767_int16, fnname: "or_Neg32767_int16", in: -1, want: -1},
	test_int16{fn: or_int16_Neg32767, fnname: "or_int16_Neg32767", in: -1, want: -1},
	test_int16{fn: or_Neg32767_int16, fnname: "or_Neg32767_int16", in: 0, want: -32767},
	test_int16{fn: or_int16_Neg32767, fnname: "or_int16_Neg32767", in: 0, want: -32767},
	test_int16{fn: or_Neg32767_int16, fnname: "or_Neg32767_int16", in: 1, want: -32767},
	test_int16{fn: or_int16_Neg32767, fnname: "or_int16_Neg32767", in: 1, want: -32767},
	test_int16{fn: or_Neg32767_int16, fnname: "or_Neg32767_int16", in: 32766, want: -1},
	test_int16{fn: or_int16_Neg32767, fnname: "or_int16_Neg32767", in: 32766, want: -1},
	test_int16{fn: or_Neg32767_int16, fnname: "or_Neg32767_int16", in: 32767, want: -1},
	test_int16{fn: or_int16_Neg32767, fnname: "or_int16_Neg32767", in: 32767, want: -1},
	test_int16{fn: or_Neg1_int16, fnname: "or_Neg1_int16", in: -32768, want: -1},
	test_int16{fn: or_int16_Neg1, fnname: "or_int16_Neg1", in: -32768, want: -1},
	test_int16{fn: or_Neg1_int16, fnname: "or_Neg1_int16", in: -32767, want: -1},
	test_int16{fn: or_int16_Neg1, fnname: "or_int16_Neg1", in: -32767, want: -1},
	test_int16{fn: or_Neg1_int16, fnname: "or_Neg1_int16", in: -1, want: -1},
	test_int16{fn: or_int16_Neg1, fnname: "or_int16_Neg1", in: -1, want: -1},
	test_int16{fn: or_Neg1_int16, fnname: "or_Neg1_int16", in: 0, want: -1},
	test_int16{fn: or_int16_Neg1, fnname: "or_int16_Neg1", in: 0, want: -1},
	test_int16{fn: or_Neg1_int16, fnname: "or_Neg1_int16", in: 1, want: -1},
	test_int16{fn: or_int16_Neg1, fnname: "or_int16_Neg1", in: 1, want: -1},
	test_int16{fn: or_Neg1_int16, fnname: "or_Neg1_int16", in: 32766, want: -1},
	test_int16{fn: or_int16_Neg1, fnname: "or_int16_Neg1", in: 32766, want: -1},
	test_int16{fn: or_Neg1_int16, fnname: "or_Neg1_int16", in: 32767, want: -1},
	test_int16{fn: or_int16_Neg1, fnname: "or_int16_Neg1", in: 32767, want: -1},
	test_int16{fn: or_0_int16, fnname: "or_0_int16", in: -32768, want: -32768},
	test_int16{fn: or_int16_0, fnname: "or_int16_0", in: -32768, want: -32768},
	test_int16{fn: or_0_int16, fnname: "or_0_int16", in: -32767, want: -32767},
	test_int16{fn: or_int16_0, fnname: "or_int16_0", in: -32767, want: -32767},
	test_int16{fn: or_0_int16, fnname: "or_0_int16", in: -1, want: -1},
	test_int16{fn: or_int16_0, fnname: "or_int16_0", in: -1, want: -1},
	test_int16{fn: or_0_int16, fnname: "or_0_int16", in: 0, want: 0},
	test_int16{fn: or_int16_0, fnname: "or_int16_0", in: 0, want: 0},
	test_int16{fn: or_0_int16, fnname: "or_0_int16", in: 1, want: 1},
	test_int16{fn: or_int16_0, fnname: "or_int16_0", in: 1, want: 1},
	test_int16{fn: or_0_int16, fnname: "or_0_int16", in: 32766, want: 32766},
	test_int16{fn: or_int16_0, fnname: "or_int16_0", in: 32766, want: 32766},
	test_int16{fn: or_0_int16, fnname: "or_0_int16", in: 32767, want: 32767},
	test_int16{fn: or_int16_0, fnname: "or_int16_0", in: 32767, want: 32767},
	test_int16{fn: or_1_int16, fnname: "or_1_int16", in: -32768, want: -32767},
	test_int16{fn: or_int16_1, fnname: "or_int16_1", in: -32768, want: -32767},
	test_int16{fn: or_1_int16, fnname: "or_1_int16", in: -32767, want: -32767},
	test_int16{fn: or_int16_1, fnname: "or_int16_1", in: -32767, want: -32767},
	test_int16{fn: or_1_int16, fnname: "or_1_int16", in: -1, want: -1},
	test_int16{fn: or_int16_1, fnname: "or_int16_1", in: -1, want: -1},
	test_int16{fn: or_1_int16, fnname: "or_1_int16", in: 0, want: 1},
	test_int16{fn: or_int16_1, fnname: "or_int16_1", in: 0, want: 1},
	test_int16{fn: or_1_int16, fnname: "or_1_int16", in: 1, want: 1},
	test_int16{fn: or_int16_1, fnname: "or_int16_1", in: 1, want: 1},
	test_int16{fn: or_1_int16, fnname: "or_1_int16", in: 32766, want: 32767},
	test_int16{fn: or_int16_1, fnname: "or_int16_1", in: 32766, want: 32767},
	test_int16{fn: or_1_int16, fnname: "or_1_int16", in: 32767, want: 32767},
	test_int16{fn: or_int16_1, fnname: "or_int16_1", in: 32767, want: 32767},
	test_int16{fn: or_32766_int16, fnname: "or_32766_int16", in: -32768, want: -2},
	test_int16{fn: or_int16_32766, fnname: "or_int16_32766", in: -32768, want: -2},
	test_int16{fn: or_32766_int16, fnname: "or_32766_int16", in: -32767, want: -1},
	test_int16{fn: or_int16_32766, fnname: "or_int16_32766", in: -32767, want: -1},
	test_int16{fn: or_32766_int16, fnname: "or_32766_int16", in: -1, want: -1},
	test_int16{fn: or_int16_32766, fnname: "or_int16_32766", in: -1, want: -1},
	test_int16{fn: or_32766_int16, fnname: "or_32766_int16", in: 0, want: 32766},
	test_int16{fn: or_int16_32766, fnname: "or_int16_32766", in: 0, want: 32766},
	test_int16{fn: or_32766_int16, fnname: "or_32766_int16", in: 1, want: 32767},
	test_int16{fn: or_int16_32766, fnname: "or_int16_32766", in: 1, want: 32767},
	test_int16{fn: or_32766_int16, fnname: "or_32766_int16", in: 32766, want: 32766},
	test_int16{fn: or_int16_32766, fnname: "or_int16_32766", in: 32766, want: 32766},
	test_int16{fn: or_32766_int16, fnname: "or_32766_int16", in: 32767, want: 32767},
	test_int16{fn: or_int16_32766, fnname: "or_int16_32766", in: 32767, want: 32767},
	test_int16{fn: or_32767_int16, fnname: "or_32767_int16", in: -32768, want: -1},
	test_int16{fn: or_int16_32767, fnname: "or_int16_32767", in: -32768, want: -1},
	test_int16{fn: or_32767_int16, fnname: "or_32767_int16", in: -32767, want: -1},
	test_int16{fn: or_int16_32767, fnname: "or_int16_32767", in: -32767, want: -1},
	test_int16{fn: or_32767_int16, fnname: "or_32767_int16", in: -1, want: -1},
	test_int16{fn: or_int16_32767, fnname: "or_int16_32767", in: -1, want: -1},
	test_int16{fn: or_32767_int16, fnname: "or_32767_int16", in: 0, want: 32767},
	test_int16{fn: or_int16_32767, fnname: "or_int16_32767", in: 0, want: 32767},
	test_int16{fn: or_32767_int16, fnname: "or_32767_int16", in: 1, want: 32767},
	test_int16{fn: or_int16_32767, fnname: "or_int16_32767", in: 1, want: 32767},
	test_int16{fn: or_32767_int16, fnname: "or_32767_int16", in: 32766, want: 32767},
	test_int16{fn: or_int16_32767, fnname: "or_int16_32767", in: 32766, want: 32767},
	test_int16{fn: or_32767_int16, fnname: "or_32767_int16", in: 32767, want: 32767},
	test_int16{fn: or_int16_32767, fnname: "or_int16_32767", in: 32767, want: 32767},
	test_int16{fn: xor_Neg32768_int16, fnname: "xor_Neg32768_int16", in: -32768, want: 0},
	test_int16{fn: xor_int16_Neg32768, fnname: "xor_int16_Neg32768", in: -32768, want: 0},
	test_int16{fn: xor_Neg32768_int16, fnname: "xor_Neg32768_int16", in: -32767, want: 1},
	test_int16{fn: xor_int16_Neg32768, fnname: "xor_int16_Neg32768", in: -32767, want: 1},
	test_int16{fn: xor_Neg32768_int16, fnname: "xor_Neg32768_int16", in: -1, want: 32767},
	test_int16{fn: xor_int16_Neg32768, fnname: "xor_int16_Neg32768", in: -1, want: 32767},
	test_int16{fn: xor_Neg32768_int16, fnname: "xor_Neg32768_int16", in: 0, want: -32768},
	test_int16{fn: xor_int16_Neg32768, fnname: "xor_int16_Neg32768", in: 0, want: -32768},
	test_int16{fn: xor_Neg32768_int16, fnname: "xor_Neg32768_int16", in: 1, want: -32767},
	test_int16{fn: xor_int16_Neg32768, fnname: "xor_int16_Neg32768", in: 1, want: -32767},
	test_int16{fn: xor_Neg32768_int16, fnname: "xor_Neg32768_int16", in: 32766, want: -2},
	test_int16{fn: xor_int16_Neg32768, fnname: "xor_int16_Neg32768", in: 32766, want: -2},
	test_int16{fn: xor_Neg32768_int16, fnname: "xor_Neg32768_int16", in: 32767, want: -1},
	test_int16{fn: xor_int16_Neg32768, fnname: "xor_int16_Neg32768", in: 32767, want: -1},
	test_int16{fn: xor_Neg32767_int16, fnname: "xor_Neg32767_int16", in: -32768, want: 1},
	test_int16{fn: xor_int16_Neg32767, fnname: "xor_int16_Neg32767", in: -32768, want: 1},
	test_int16{fn: xor_Neg32767_int16, fnname: "xor_Neg32767_int16", in: -32767, want: 0},
	test_int16{fn: xor_int16_Neg32767, fnname: "xor_int16_Neg32767", in: -32767, want: 0},
	test_int16{fn: xor_Neg32767_int16, fnname: "xor_Neg32767_int16", in: -1, want: 32766},
	test_int16{fn: xor_int16_Neg32767, fnname: "xor_int16_Neg32767", in: -1, want: 32766},
	test_int16{fn: xor_Neg32767_int16, fnname: "xor_Neg32767_int16", in: 0, want: -32767},
	test_int16{fn: xor_int16_Neg32767, fnname: "xor_int16_Neg32767", in: 0, want: -32767},
	test_int16{fn: xor_Neg32767_int16, fnname: "xor_Neg32767_int16", in: 1, want: -32768},
	test_int16{fn: xor_int16_Neg32767, fnname: "xor_int16_Neg32767", in: 1, want: -32768},
	test_int16{fn: xor_Neg32767_int16, fnname: "xor_Neg32767_int16", in: 32766, want: -1},
	test_int16{fn: xor_int16_Neg32767, fnname: "xor_int16_Neg32767", in: 32766, want: -1},
	test_int16{fn: xor_Neg32767_int16, fnname: "xor_Neg32767_int16", in: 32767, want: -2},
	test_int16{fn: xor_int16_Neg32767, fnname: "xor_int16_Neg32767", in: 32767, want: -2},
	test_int16{fn: xor_Neg1_int16, fnname: "xor_Neg1_int16", in: -32768, want: 32767},
	test_int16{fn: xor_int16_Neg1, fnname: "xor_int16_Neg1", in: -32768, want: 32767},
	test_int16{fn: xor_Neg1_int16, fnname: "xor_Neg1_int16", in: -32767, want: 32766},
	test_int16{fn: xor_int16_Neg1, fnname: "xor_int16_Neg1", in: -32767, want: 32766},
	test_int16{fn: xor_Neg1_int16, fnname: "xor_Neg1_int16", in: -1, want: 0},
	test_int16{fn: xor_int16_Neg1, fnname: "xor_int16_Neg1", in: -1, want: 0},
	test_int16{fn: xor_Neg1_int16, fnname: "xor_Neg1_int16", in: 0, want: -1},
	test_int16{fn: xor_int16_Neg1, fnname: "xor_int16_Neg1", in: 0, want: -1},
	test_int16{fn: xor_Neg1_int16, fnname: "xor_Neg1_int16", in: 1, want: -2},
	test_int16{fn: xor_int16_Neg1, fnname: "xor_int16_Neg1", in: 1, want: -2},
	test_int16{fn: xor_Neg1_int16, fnname: "xor_Neg1_int16", in: 32766, want: -32767},
	test_int16{fn: xor_int16_Neg1, fnname: "xor_int16_Neg1", in: 32766, want: -32767},
	test_int16{fn: xor_Neg1_int16, fnname: "xor_Neg1_int16", in: 32767, want: -32768},
	test_int16{fn: xor_int16_Neg1, fnname: "xor_int16_Neg1", in: 32767, want: -32768},
	test_int16{fn: xor_0_int16, fnname: "xor_0_int16", in: -32768, want: -32768},
	test_int16{fn: xor_int16_0, fnname: "xor_int16_0", in: -32768, want: -32768},
	test_int16{fn: xor_0_int16, fnname: "xor_0_int16", in: -32767, want: -32767},
	test_int16{fn: xor_int16_0, fnname: "xor_int16_0", in: -32767, want: -32767},
	test_int16{fn: xor_0_int16, fnname: "xor_0_int16", in: -1, want: -1},
	test_int16{fn: xor_int16_0, fnname: "xor_int16_0", in: -1, want: -1},
	test_int16{fn: xor_0_int16, fnname: "xor_0_int16", in: 0, want: 0},
	test_int16{fn: xor_int16_0, fnname: "xor_int16_0", in: 0, want: 0},
	test_int16{fn: xor_0_int16, fnname: "xor_0_int16", in: 1, want: 1},
	test_int16{fn: xor_int16_0, fnname: "xor_int16_0", in: 1, want: 1},
	test_int16{fn: xor_0_int16, fnname: "xor_0_int16", in: 32766, want: 32766},
	test_int16{fn: xor_int16_0, fnname: "xor_int16_0", in: 32766, want: 32766},
	test_int16{fn: xor_0_int16, fnname: "xor_0_int16", in: 32767, want: 32767},
	test_int16{fn: xor_int16_0, fnname: "xor_int16_0", in: 32767, want: 32767},
	test_int16{fn: xor_1_int16, fnname: "xor_1_int16", in: -32768, want: -32767},
	test_int16{fn: xor_int16_1, fnname: "xor_int16_1", in: -32768, want: -32767},
	test_int16{fn: xor_1_int16, fnname: "xor_1_int16", in: -32767, want: -32768},
	test_int16{fn: xor_int16_1, fnname: "xor_int16_1", in: -32767, want: -32768},
	test_int16{fn: xor_1_int16, fnname: "xor_1_int16", in: -1, want: -2},
	test_int16{fn: xor_int16_1, fnname: "xor_int16_1", in: -1, want: -2},
	test_int16{fn: xor_1_int16, fnname: "xor_1_int16", in: 0, want: 1},
	test_int16{fn: xor_int16_1, fnname: "xor_int16_1", in: 0, want: 1},
	test_int16{fn: xor_1_int16, fnname: "xor_1_int16", in: 1, want: 0},
	test_int16{fn: xor_int16_1, fnname: "xor_int16_1", in: 1, want: 0},
	test_int16{fn: xor_1_int16, fnname: "xor_1_int16", in: 32766, want: 32767},
	test_int16{fn: xor_int16_1, fnname: "xor_int16_1", in: 32766, want: 32767},
	test_int16{fn: xor_1_int16, fnname: "xor_1_int16", in: 32767, want: 32766},
	test_int16{fn: xor_int16_1, fnname: "xor_int16_1", in: 32767, want: 32766},
	test_int16{fn: xor_32766_int16, fnname: "xor_32766_int16", in: -32768, want: -2},
	test_int16{fn: xor_int16_32766, fnname: "xor_int16_32766", in: -32768, want: -2},
	test_int16{fn: xor_32766_int16, fnname: "xor_32766_int16", in: -32767, want: -1},
	test_int16{fn: xor_int16_32766, fnname: "xor_int16_32766", in: -32767, want: -1},
	test_int16{fn: xor_32766_int16, fnname: "xor_32766_int16", in: -1, want: -32767},
	test_int16{fn: xor_int16_32766, fnname: "xor_int16_32766", in: -1, want: -32767},
	test_int16{fn: xor_32766_int16, fnname: "xor_32766_int16", in: 0, want: 32766},
	test_int16{fn: xor_int16_32766, fnname: "xor_int16_32766", in: 0, want: 32766},
	test_int16{fn: xor_32766_int16, fnname: "xor_32766_int16", in: 1, want: 32767},
	test_int16{fn: xor_int16_32766, fnname: "xor_int16_32766", in: 1, want: 32767},
	test_int16{fn: xor_32766_int16, fnname: "xor_32766_int16", in: 32766, want: 0},
	test_int16{fn: xor_int16_32766, fnname: "xor_int16_32766", in: 32766, want: 0},
	test_int16{fn: xor_32766_int16, fnname: "xor_32766_int16", in: 32767, want: 1},
	test_int16{fn: xor_int16_32766, fnname: "xor_int16_32766", in: 32767, want: 1},
	test_int16{fn: xor_32767_int16, fnname: "xor_32767_int16", in: -32768, want: -1},
	test_int16{fn: xor_int16_32767, fnname: "xor_int16_32767", in: -32768, want: -1},
	test_int16{fn: xor_32767_int16, fnname: "xor_32767_int16", in: -32767, want: -2},
	test_int16{fn: xor_int16_32767, fnname: "xor_int16_32767", in: -32767, want: -2},
	test_int16{fn: xor_32767_int16, fnname: "xor_32767_int16", in: -1, want: -32768},
	test_int16{fn: xor_int16_32767, fnname: "xor_int16_32767", in: -1, want: -32768},
	test_int16{fn: xor_32767_int16, fnname: "xor_32767_int16", in: 0, want: 32767},
	test_int16{fn: xor_int16_32767, fnname: "xor_int16_32767", in: 0, want: 32767},
	test_int16{fn: xor_32767_int16, fnname: "xor_32767_int16", in: 1, want: 32766},
	test_int16{fn: xor_int16_32767, fnname: "xor_int16_32767", in: 1, want: 32766},
	test_int16{fn: xor_32767_int16, fnname: "xor_32767_int16", in: 32766, want: 1},
	test_int16{fn: xor_int16_32767, fnname: "xor_int16_32767", in: 32766, want: 1},
	test_int16{fn: xor_32767_int16, fnname: "xor_32767_int16", in: 32767, want: 0},
	test_int16{fn: xor_int16_32767, fnname: "xor_int16_32767", in: 32767, want: 0}}

type test_uint8 struct {
	fn     func(uint8) uint8
	fnname string
	in     uint8
	want   uint8
}

var tests_uint8 = []test_uint8{

	test_uint8{fn: add_0_uint8, fnname: "add_0_uint8", in: 0, want: 0},
	test_uint8{fn: add_uint8_0, fnname: "add_uint8_0", in: 0, want: 0},
	test_uint8{fn: add_0_uint8, fnname: "add_0_uint8", in: 1, want: 1},
	test_uint8{fn: add_uint8_0, fnname: "add_uint8_0", in: 1, want: 1},
	test_uint8{fn: add_0_uint8, fnname: "add_0_uint8", in: 255, want: 255},
	test_uint8{fn: add_uint8_0, fnname: "add_uint8_0", in: 255, want: 255},
	test_uint8{fn: add_1_uint8, fnname: "add_1_uint8", in: 0, want: 1},
	test_uint8{fn: add_uint8_1, fnname: "add_uint8_1", in: 0, want: 1},
	test_uint8{fn: add_1_uint8, fnname: "add_1_uint8", in: 1, want: 2},
	test_uint8{fn: add_uint8_1, fnname: "add_uint8_1", in: 1, want: 2},
	test_uint8{fn: add_1_uint8, fnname: "add_1_uint8", in: 255, want: 0},
	test_uint8{fn: add_uint8_1, fnname: "add_uint8_1", in: 255, want: 0},
	test_uint8{fn: add_255_uint8, fnname: "add_255_uint8", in: 0, want: 255},
	test_uint8{fn: add_uint8_255, fnname: "add_uint8_255", in: 0, want: 255},
	test_uint8{fn: add_255_uint8, fnname: "add_255_uint8", in: 1, want: 0},
	test_uint8{fn: add_uint8_255, fnname: "add_uint8_255", in: 1, want: 0},
	test_uint8{fn: add_255_uint8, fnname: "add_255_uint8", in: 255, want: 254},
	test_uint8{fn: add_uint8_255, fnname: "add_uint8_255", in: 255, want: 254},
	test_uint8{fn: sub_0_uint8, fnname: "sub_0_uint8", in: 0, want: 0},
	test_uint8{fn: sub_uint8_0, fnname: "sub_uint8_0", in: 0, want: 0},
	test_uint8{fn: sub_0_uint8, fnname: "sub_0_uint8", in: 1, want: 255},
	test_uint8{fn: sub_uint8_0, fnname: "sub_uint8_0", in: 1, want: 1},
	test_uint8{fn: sub_0_uint8, fnname: "sub_0_uint8", in: 255, want: 1},
	test_uint8{fn: sub_uint8_0, fnname: "sub_uint8_0", in: 255, want: 255},
	test_uint8{fn: sub_1_uint8, fnname: "sub_1_uint8", in: 0, want: 1},
	test_uint8{fn: sub_uint8_1, fnname: "sub_uint8_1", in: 0, want: 255},
	test_uint8{fn: sub_1_uint8, fnname: "sub_1_uint8", in: 1, want: 0},
	test_uint8{fn: sub_uint8_1, fnname: "sub_uint8_1", in: 1, want: 0},
	test_uint8{fn: sub_1_uint8, fnname: "sub_1_uint8", in: 255, want: 2},
	test_uint8{fn: sub_uint8_1, fnname: "sub_uint8_1", in: 255, want: 254},
	test_uint8{fn: sub_255_uint8, fnname: "sub_255_uint8", in: 0, want: 255},
	test_uint8{fn: sub_uint8_255, fnname: "sub_uint8_255", in: 0, want: 1},
	test_uint8{fn: sub_255_uint8, fnname: "sub_255_uint8", in: 1, want: 254},
	test_uint8{fn: sub_uint8_255, fnname: "sub_uint8_255", in: 1, want: 2},
	test_uint8{fn: sub_255_uint8, fnname: "sub_255_uint8", in: 255, want: 0},
	test_uint8{fn: sub_uint8_255, fnname: "sub_uint8_255", in: 255, want: 0},
	test_uint8{fn: div_0_uint8, fnname: "div_0_uint8", in: 1, want: 0},
	test_uint8{fn: div_0_uint8, fnname: "div_0_uint8", in: 255, want: 0},
	test_uint8{fn: div_uint8_1, fnname: "div_uint8_1", in: 0, want: 0},
	test_uint8{fn: div_1_uint8, fnname: "div_1_uint8", in: 1, want: 1},
	test_uint8{fn: div_uint8_1, fnname: "div_uint8_1", in: 1, want: 1},
	test_uint8{fn: div_1_uint8, fnname: "div_1_uint8", in: 255, want: 0},
	test_uint8{fn: div_uint8_1, fnname: "div_uint8_1", in: 255, want: 255},
	test_uint8{fn: div_uint8_255, fnname: "div_uint8_255", in: 0, want: 0},
	test_uint8{fn: div_255_uint8, fnname: "div_255_uint8", in: 1, want: 255},
	test_uint8{fn: div_uint8_255, fnname: "div_uint8_255", in: 1, want: 0},
	test_uint8{fn: div_255_uint8, fnname: "div_255_uint8", in: 255, want: 1},
	test_uint8{fn: div_uint8_255, fnname: "div_uint8_255", in: 255, want: 1},
	test_uint8{fn: mul_0_uint8, fnname: "mul_0_uint8", in: 0, want: 0},
	test_uint8{fn: mul_uint8_0, fnname: "mul_uint8_0", in: 0, want: 0},
	test_uint8{fn: mul_0_uint8, fnname: "mul_0_uint8", in: 1, want: 0},
	test_uint8{fn: mul_uint8_0, fnname: "mul_uint8_0", in: 1, want: 0},
	test_uint8{fn: mul_0_uint8, fnname: "mul_0_uint8", in: 255, want: 0},
	test_uint8{fn: mul_uint8_0, fnname: "mul_uint8_0", in: 255, want: 0},
	test_uint8{fn: mul_1_uint8, fnname: "mul_1_uint8", in: 0, want: 0},
	test_uint8{fn: mul_uint8_1, fnname: "mul_uint8_1", in: 0, want: 0},
	test_uint8{fn: mul_1_uint8, fnname: "mul_1_uint8", in: 1, want: 1},
	test_uint8{fn: mul_uint8_1, fnname: "mul_uint8_1", in: 1, want: 1},
	test_uint8{fn: mul_1_uint8, fnname: "mul_1_uint8", in: 255, want: 255},
	test_uint8{fn: mul_uint8_1, fnname: "mul_uint8_1", in: 255, want: 255},
	test_uint8{fn: mul_255_uint8, fnname: "mul_255_uint8", in: 0, want: 0},
	test_uint8{fn: mul_uint8_255, fnname: "mul_uint8_255", in: 0, want: 0},
	test_uint8{fn: mul_255_uint8, fnname: "mul_255_uint8", in: 1, want: 255},
	test_uint8{fn: mul_uint8_255, fnname: "mul_uint8_255", in: 1, want: 255},
	test_uint8{fn: mul_255_uint8, fnname: "mul_255_uint8", in: 255, want: 1},
	test_uint8{fn: mul_uint8_255, fnname: "mul_uint8_255", in: 255, want: 1},
	test_uint8{fn: lsh_0_uint8, fnname: "lsh_0_uint8", in: 0, want: 0},
	test_uint8{fn: lsh_uint8_0, fnname: "lsh_uint8_0", in: 0, want: 0},
	test_uint8{fn: lsh_0_uint8, fnname: "lsh_0_uint8", in: 1, want: 0},
	test_uint8{fn: lsh_uint8_0, fnname: "lsh_uint8_0", in: 1, want: 1},
	test_uint8{fn: lsh_0_uint8, fnname: "lsh_0_uint8", in: 255, want: 0},
	test_uint8{fn: lsh_uint8_0, fnname: "lsh_uint8_0", in: 255, want: 255},
	test_uint8{fn: lsh_1_uint8, fnname: "lsh_1_uint8", in: 0, want: 1},
	test_uint8{fn: lsh_uint8_1, fnname: "lsh_uint8_1", in: 0, want: 0},
	test_uint8{fn: lsh_1_uint8, fnname: "lsh_1_uint8", in: 1, want: 2},
	test_uint8{fn: lsh_uint8_1, fnname: "lsh_uint8_1", in: 1, want: 2},
	test_uint8{fn: lsh_1_uint8, fnname: "lsh_1_uint8", in: 255, want: 0},
	test_uint8{fn: lsh_uint8_1, fnname: "lsh_uint8_1", in: 255, want: 254},
	test_uint8{fn: lsh_255_uint8, fnname: "lsh_255_uint8", in: 0, want: 255},
	test_uint8{fn: lsh_uint8_255, fnname: "lsh_uint8_255", in: 0, want: 0},
	test_uint8{fn: lsh_255_uint8, fnname: "lsh_255_uint8", in: 1, want: 254},
	test_uint8{fn: lsh_uint8_255, fnname: "lsh_uint8_255", in: 1, want: 0},
	test_uint8{fn: lsh_255_uint8, fnname: "lsh_255_uint8", in: 255, want: 0},
	test_uint8{fn: lsh_uint8_255, fnname: "lsh_uint8_255", in: 255, want: 0},
	test_uint8{fn: rsh_0_uint8, fnname: "rsh_0_uint8", in: 0, want: 0},
	test_uint8{fn: rsh_uint8_0, fnname: "rsh_uint8_0", in: 0, want: 0},
	test_uint8{fn: rsh_0_uint8, fnname: "rsh_0_uint8", in: 1, want: 0},
	test_uint8{fn: rsh_uint8_0, fnname: "rsh_uint8_0", in: 1, want: 1},
	test_uint8{fn: rsh_0_uint8, fnname: "rsh_0_uint8", in: 255, want: 0},
	test_uint8{fn: rsh_uint8_0, fnname: "rsh_uint8_0", in: 255, want: 255},
	test_uint8{fn: rsh_1_uint8, fnname: "rsh_1_uint8", in: 0, want: 1},
	test_uint8{fn: rsh_uint8_1, fnname: "rsh_uint8_1", in: 0, want: 0},
	test_uint8{fn: rsh_1_uint8, fnname: "rsh_1_uint8", in: 1, want: 0},
	test_uint8{fn: rsh_uint8_1, fnname: "rsh_uint8_1", in: 1, want: 0},
	test_uint8{fn: rsh_1_uint8, fnname: "rsh_1_uint8", in: 255, want: 0},
	test_uint8{fn: rsh_uint8_1, fnname: "rsh_uint8_1", in: 255, want: 127},
	test_uint8{fn: rsh_255_uint8, fnname: "rsh_255_uint8", in: 0, want: 255},
	test_uint8{fn: rsh_uint8_255, fnname: "rsh_uint8_255", in: 0, want: 0},
	test_uint8{fn: rsh_255_uint8, fnname: "rsh_255_uint8", in: 1, want: 127},
	test_uint8{fn: rsh_uint8_255, fnname: "rsh_uint8_255", in: 1, want: 0},
	test_uint8{fn: rsh_255_uint8, fnname: "rsh_255_uint8", in: 255, want: 0},
	test_uint8{fn: rsh_uint8_255, fnname: "rsh_uint8_255", in: 255, want: 0},
	test_uint8{fn: mod_0_uint8, fnname: "mod_0_uint8", in: 1, want: 0},
	test_uint8{fn: mod_0_uint8, fnname: "mod_0_uint8", in: 255, want: 0},
	test_uint8{fn: mod_uint8_1, fnname: "mod_uint8_1", in: 0, want: 0},
	test_uint8{fn: mod_1_uint8, fnname: "mod_1_uint8", in: 1, want: 0},
	test_uint8{fn: mod_uint8_1, fnname: "mod_uint8_1", in: 1, want: 0},
	test_uint8{fn: mod_1_uint8, fnname: "mod_1_uint8", in: 255, want: 1},
	test_uint8{fn: mod_uint8_1, fnname: "mod_uint8_1", in: 255, want: 0},
	test_uint8{fn: mod_uint8_255, fnname: "mod_uint8_255", in: 0, want: 0},
	test_uint8{fn: mod_255_uint8, fnname: "mod_255_uint8", in: 1, want: 0},
	test_uint8{fn: mod_uint8_255, fnname: "mod_uint8_255", in: 1, want: 1},
	test_uint8{fn: mod_255_uint8, fnname: "mod_255_uint8", in: 255, want: 0},
	test_uint8{fn: mod_uint8_255, fnname: "mod_uint8_255", in: 255, want: 0},
	test_uint8{fn: and_0_uint8, fnname: "and_0_uint8", in: 0, want: 0},
	test_uint8{fn: and_uint8_0, fnname: "and_uint8_0", in: 0, want: 0},
	test_uint8{fn: and_0_uint8, fnname: "and_0_uint8", in: 1, want: 0},
	test_uint8{fn: and_uint8_0, fnname: "and_uint8_0", in: 1, want: 0},
	test_uint8{fn: and_0_uint8, fnname: "and_0_uint8", in: 255, want: 0},
	test_uint8{fn: and_uint8_0, fnname: "and_uint8_0", in: 255, want: 0},
	test_uint8{fn: and_1_uint8, fnname: "and_1_uint8", in: 0, want: 0},
	test_uint8{fn: and_uint8_1, fnname: "and_uint8_1", in: 0, want: 0},
	test_uint8{fn: and_1_uint8, fnname: "and_1_uint8", in: 1, want: 1},
	test_uint8{fn: and_uint8_1, fnname: "and_uint8_1", in: 1, want: 1},
	test_uint8{fn: and_1_uint8, fnname: "and_1_uint8", in: 255, want: 1},
	test_uint8{fn: and_uint8_1, fnname: "and_uint8_1", in: 255, want: 1},
	test_uint8{fn: and_255_uint8, fnname: "and_255_uint8", in: 0, want: 0},
	test_uint8{fn: and_uint8_255, fnname: "and_uint8_255", in: 0, want: 0},
	test_uint8{fn: and_255_uint8, fnname: "and_255_uint8", in: 1, want: 1},
	test_uint8{fn: and_uint8_255, fnname: "and_uint8_255", in: 1, want: 1},
	test_uint8{fn: and_255_uint8, fnname: "and_255_uint8", in: 255, want: 255},
	test_uint8{fn: and_uint8_255, fnname: "and_uint8_255", in: 255, want: 255},
	test_uint8{fn: or_0_uint8, fnname: "or_0_uint8", in: 0, want: 0},
	test_uint8{fn: or_uint8_0, fnname: "or_uint8_0", in: 0, want: 0},
	test_uint8{fn: or_0_uint8, fnname: "or_0_uint8", in: 1, want: 1},
	test_uint8{fn: or_uint8_0, fnname: "or_uint8_0", in: 1, want: 1},
	test_uint8{fn: or_0_uint8, fnname: "or_0_uint8", in: 255, want: 255},
	test_uint8{fn: or_uint8_0, fnname: "or_uint8_0", in: 255, want: 255},
	test_uint8{fn: or_1_uint8, fnname: "or_1_uint8", in: 0, want: 1},
	test_uint8{fn: or_uint8_1, fnname: "or_uint8_1", in: 0, want: 1},
	test_uint8{fn: or_1_uint8, fnname: "or_1_uint8", in: 1, want: 1},
	test_uint8{fn: or_uint8_1, fnname: "or_uint8_1", in: 1, want: 1},
	test_uint8{fn: or_1_uint8, fnname: "or_1_uint8", in: 255, want: 255},
	test_uint8{fn: or_uint8_1, fnname: "or_uint8_1", in: 255, want: 255},
	test_uint8{fn: or_255_uint8, fnname: "or_255_uint8", in: 0, want: 255},
	test_uint8{fn: or_uint8_255, fnname: "or_uint8_255", in: 0, want: 255},
	test_uint8{fn: or_255_uint8, fnname: "or_255_uint8", in: 1, want: 255},
	test_uint8{fn: or_uint8_255, fnname: "or_uint8_255", in: 1, want: 255},
	test_uint8{fn: or_255_uint8, fnname: "or_255_uint8", in: 255, want: 255},
	test_uint8{fn: or_uint8_255, fnname: "or_uint8_255", in: 255, want: 255},
	test_uint8{fn: xor_0_uint8, fnname: "xor_0_uint8", in: 0, want: 0},
	test_uint8{fn: xor_uint8_0, fnname: "xor_uint8_0", in: 0, want: 0},
	test_uint8{fn: xor_0_uint8, fnname: "xor_0_uint8", in: 1, want: 1},
	test_uint8{fn: xor_uint8_0, fnname: "xor_uint8_0", in: 1, want: 1},
	test_uint8{fn: xor_0_uint8, fnname: "xor_0_uint8", in: 255, want: 255},
	test_uint8{fn: xor_uint8_0, fnname: "xor_uint8_0", in: 255, want: 255},
	test_uint8{fn: xor_1_uint8, fnname: "xor_1_uint8", in: 0, want: 1},
	test_uint8{fn: xor_uint8_1, fnname: "xor_uint8_1", in: 0, want: 1},
	test_uint8{fn: xor_1_uint8, fnname: "xor_1_uint8", in: 1, want: 0},
	test_uint8{fn: xor_uint8_1, fnname: "xor_uint8_1", in: 1, want: 0},
	test_uint8{fn: xor_1_uint8, fnname: "xor_1_uint8", in: 255, want: 254},
	test_uint8{fn: xor_uint8_1, fnname: "xor_uint8_1", in: 255, want: 254},
	test_uint8{fn: xor_255_uint8, fnname: "xor_255_uint8", in: 0, want: 255},
	test_uint8{fn: xor_uint8_255, fnname: "xor_uint8_255", in: 0, want: 255},
	test_uint8{fn: xor_255_uint8, fnname: "xor_255_uint8", in: 1, want: 254},
	test_uint8{fn: xor_uint8_255, fnname: "xor_uint8_255", in: 1, want: 254},
	test_uint8{fn: xor_255_uint8, fnname: "xor_255_uint8", in: 255, want: 0},
	test_uint8{fn: xor_uint8_255, fnname: "xor_uint8_255", in: 255, want: 0}}

type test_int8 struct {
	fn     func(int8) int8
	fnname string
	in     int8
	want   int8
}

var tests_int8 = []test_int8{

	test_int8{fn: add_Neg128_int8, fnname: "add_Neg128_int8", in: -128, want: 0},
	test_int8{fn: add_int8_Neg128, fnname: "add_int8_Neg128", in: -128, want: 0},
	test_int8{fn: add_Neg128_int8, fnname: "add_Neg128_int8", in: -127, want: 1},
	test_int8{fn: add_int8_Neg128, fnname: "add_int8_Neg128", in: -127, want: 1},
	test_int8{fn: add_Neg128_int8, fnname: "add_Neg128_int8", in: -1, want: 127},
	test_int8{fn: add_int8_Neg128, fnname: "add_int8_Neg128", in: -1, want: 127},
	test_int8{fn: add_Neg128_int8, fnname: "add_Neg128_int8", in: 0, want: -128},
	test_int8{fn: add_int8_Neg128, fnname: "add_int8_Neg128", in: 0, want: -128},
	test_int8{fn: add_Neg128_int8, fnname: "add_Neg128_int8", in: 1, want: -127},
	test_int8{fn: add_int8_Neg128, fnname: "add_int8_Neg128", in: 1, want: -127},
	test_int8{fn: add_Neg128_int8, fnname: "add_Neg128_int8", in: 126, want: -2},
	test_int8{fn: add_int8_Neg128, fnname: "add_int8_Neg128", in: 126, want: -2},
	test_int8{fn: add_Neg128_int8, fnname: "add_Neg128_int8", in: 127, want: -1},
	test_int8{fn: add_int8_Neg128, fnname: "add_int8_Neg128", in: 127, want: -1},
	test_int8{fn: add_Neg127_int8, fnname: "add_Neg127_int8", in: -128, want: 1},
	test_int8{fn: add_int8_Neg127, fnname: "add_int8_Neg127", in: -128, want: 1},
	test_int8{fn: add_Neg127_int8, fnname: "add_Neg127_int8", in: -127, want: 2},
	test_int8{fn: add_int8_Neg127, fnname: "add_int8_Neg127", in: -127, want: 2},
	test_int8{fn: add_Neg127_int8, fnname: "add_Neg127_int8", in: -1, want: -128},
	test_int8{fn: add_int8_Neg127, fnname: "add_int8_Neg127", in: -1, want: -128},
	test_int8{fn: add_Neg127_int8, fnname: "add_Neg127_int8", in: 0, want: -127},
	test_int8{fn: add_int8_Neg127, fnname: "add_int8_Neg127", in: 0, want: -127},
	test_int8{fn: add_Neg127_int8, fnname: "add_Neg127_int8", in: 1, want: -126},
	test_int8{fn: add_int8_Neg127, fnname: "add_int8_Neg127", in: 1, want: -126},
	test_int8{fn: add_Neg127_int8, fnname: "add_Neg127_int8", in: 126, want: -1},
	test_int8{fn: add_int8_Neg127, fnname: "add_int8_Neg127", in: 126, want: -1},
	test_int8{fn: add_Neg127_int8, fnname: "add_Neg127_int8", in: 127, want: 0},
	test_int8{fn: add_int8_Neg127, fnname: "add_int8_Neg127", in: 127, want: 0},
	test_int8{fn: add_Neg1_int8, fnname: "add_Neg1_int8", in: -128, want: 127},
	test_int8{fn: add_int8_Neg1, fnname: "add_int8_Neg1", in: -128, want: 127},
	test_int8{fn: add_Neg1_int8, fnname: "add_Neg1_int8", in: -127, want: -128},
	test_int8{fn: add_int8_Neg1, fnname: "add_int8_Neg1", in: -127, want: -128},
	test_int8{fn: add_Neg1_int8, fnname: "add_Neg1_int8", in: -1, want: -2},
	test_int8{fn: add_int8_Neg1, fnname: "add_int8_Neg1", in: -1, want: -2},
	test_int8{fn: add_Neg1_int8, fnname: "add_Neg1_int8", in: 0, want: -1},
	test_int8{fn: add_int8_Neg1, fnname: "add_int8_Neg1", in: 0, want: -1},
	test_int8{fn: add_Neg1_int8, fnname: "add_Neg1_int8", in: 1, want: 0},
	test_int8{fn: add_int8_Neg1, fnname: "add_int8_Neg1", in: 1, want: 0},
	test_int8{fn: add_Neg1_int8, fnname: "add_Neg1_int8", in: 126, want: 125},
	test_int8{fn: add_int8_Neg1, fnname: "add_int8_Neg1", in: 126, want: 125},
	test_int8{fn: add_Neg1_int8, fnname: "add_Neg1_int8", in: 127, want: 126},
	test_int8{fn: add_int8_Neg1, fnname: "add_int8_Neg1", in: 127, want: 126},
	test_int8{fn: add_0_int8, fnname: "add_0_int8", in: -128, want: -128},
	test_int8{fn: add_int8_0, fnname: "add_int8_0", in: -128, want: -128},
	test_int8{fn: add_0_int8, fnname: "add_0_int8", in: -127, want: -127},
	test_int8{fn: add_int8_0, fnname: "add_int8_0", in: -127, want: -127},
	test_int8{fn: add_0_int8, fnname: "add_0_int8", in: -1, want: -1},
	test_int8{fn: add_int8_0, fnname: "add_int8_0", in: -1, want: -1},
	test_int8{fn: add_0_int8, fnname: "add_0_int8", in: 0, want: 0},
	test_int8{fn: add_int8_0, fnname: "add_int8_0", in: 0, want: 0},
	test_int8{fn: add_0_int8, fnname: "add_0_int8", in: 1, want: 1},
	test_int8{fn: add_int8_0, fnname: "add_int8_0", in: 1, want: 1},
	test_int8{fn: add_0_int8, fnname: "add_0_int8", in: 126, want: 126},
	test_int8{fn: add_int8_0, fnname: "add_int8_0", in: 126, want: 126},
	test_int8{fn: add_0_int8, fnname: "add_0_int8", in: 127, want: 127},
	test_int8{fn: add_int8_0, fnname: "add_int8_0", in: 127, want: 127},
	test_int8{fn: add_1_int8, fnname: "add_1_int8", in: -128, want: -127},
	test_int8{fn: add_int8_1, fnname: "add_int8_1", in: -128, want: -127},
	test_int8{fn: add_1_int8, fnname: "add_1_int8", in: -127, want: -126},
	test_int8{fn: add_int8_1, fnname: "add_int8_1", in: -127, want: -126},
	test_int8{fn: add_1_int8, fnname: "add_1_int8", in: -1, want: 0},
	test_int8{fn: add_int8_1, fnname: "add_int8_1", in: -1, want: 0},
	test_int8{fn: add_1_int8, fnname: "add_1_int8", in: 0, want: 1},
	test_int8{fn: add_int8_1, fnname: "add_int8_1", in: 0, want: 1},
	test_int8{fn: add_1_int8, fnname: "add_1_int8", in: 1, want: 2},
	test_int8{fn: add_int8_1, fnname: "add_int8_1", in: 1, want: 2},
	test_int8{fn: add_1_int8, fnname: "add_1_int8", in: 126, want: 127},
	test_int8{fn: add_int8_1, fnname: "add_int8_1", in: 126, want: 127},
	test_int8{fn: add_1_int8, fnname: "add_1_int8", in: 127, want: -128},
	test_int8{fn: add_int8_1, fnname: "add_int8_1", in: 127, want: -128},
	test_int8{fn: add_126_int8, fnname: "add_126_int8", in: -128, want: -2},
	test_int8{fn: add_int8_126, fnname: "add_int8_126", in: -128, want: -2},
	test_int8{fn: add_126_int8, fnname: "add_126_int8", in: -127, want: -1},
	test_int8{fn: add_int8_126, fnname: "add_int8_126", in: -127, want: -1},
	test_int8{fn: add_126_int8, fnname: "add_126_int8", in: -1, want: 125},
	test_int8{fn: add_int8_126, fnname: "add_int8_126", in: -1, want: 125},
	test_int8{fn: add_126_int8, fnname: "add_126_int8", in: 0, want: 126},
	test_int8{fn: add_int8_126, fnname: "add_int8_126", in: 0, want: 126},
	test_int8{fn: add_126_int8, fnname: "add_126_int8", in: 1, want: 127},
	test_int8{fn: add_int8_126, fnname: "add_int8_126", in: 1, want: 127},
	test_int8{fn: add_126_int8, fnname: "add_126_int8", in: 126, want: -4},
	test_int8{fn: add_int8_126, fnname: "add_int8_126", in: 126, want: -4},
	test_int8{fn: add_126_int8, fnname: "add_126_int8", in: 127, want: -3},
	test_int8{fn: add_int8_126, fnname: "add_int8_126", in: 127, want: -3},
	test_int8{fn: add_127_int8, fnname: "add_127_int8", in: -128, want: -1},
	test_int8{fn: add_int8_127, fnname: "add_int8_127", in: -128, want: -1},
	test_int8{fn: add_127_int8, fnname: "add_127_int8", in: -127, want: 0},
	test_int8{fn: add_int8_127, fnname: "add_int8_127", in: -127, want: 0},
	test_int8{fn: add_127_int8, fnname: "add_127_int8", in: -1, want: 126},
	test_int8{fn: add_int8_127, fnname: "add_int8_127", in: -1, want: 126},
	test_int8{fn: add_127_int8, fnname: "add_127_int8", in: 0, want: 127},
	test_int8{fn: add_int8_127, fnname: "add_int8_127", in: 0, want: 127},
	test_int8{fn: add_127_int8, fnname: "add_127_int8", in: 1, want: -128},
	test_int8{fn: add_int8_127, fnname: "add_int8_127", in: 1, want: -128},
	test_int8{fn: add_127_int8, fnname: "add_127_int8", in: 126, want: -3},
	test_int8{fn: add_int8_127, fnname: "add_int8_127", in: 126, want: -3},
	test_int8{fn: add_127_int8, fnname: "add_127_int8", in: 127, want: -2},
	test_int8{fn: add_int8_127, fnname: "add_int8_127", in: 127, want: -2},
	test_int8{fn: sub_Neg128_int8, fnname: "sub_Neg128_int8", in: -128, want: 0},
	test_int8{fn: sub_int8_Neg128, fnname: "sub_int8_Neg128", in: -128, want: 0},
	test_int8{fn: sub_Neg128_int8, fnname: "sub_Neg128_int8", in: -127, want: -1},
	test_int8{fn: sub_int8_Neg128, fnname: "sub_int8_Neg128", in: -127, want: 1},
	test_int8{fn: sub_Neg128_int8, fnname: "sub_Neg128_int8", in: -1, want: -127},
	test_int8{fn: sub_int8_Neg128, fnname: "sub_int8_Neg128", in: -1, want: 127},
	test_int8{fn: sub_Neg128_int8, fnname: "sub_Neg128_int8", in: 0, want: -128},
	test_int8{fn: sub_int8_Neg128, fnname: "sub_int8_Neg128", in: 0, want: -128},
	test_int8{fn: sub_Neg128_int8, fnname: "sub_Neg128_int8", in: 1, want: 127},
	test_int8{fn: sub_int8_Neg128, fnname: "sub_int8_Neg128", in: 1, want: -127},
	test_int8{fn: sub_Neg128_int8, fnname: "sub_Neg128_int8", in: 126, want: 2},
	test_int8{fn: sub_int8_Neg128, fnname: "sub_int8_Neg128", in: 126, want: -2},
	test_int8{fn: sub_Neg128_int8, fnname: "sub_Neg128_int8", in: 127, want: 1},
	test_int8{fn: sub_int8_Neg128, fnname: "sub_int8_Neg128", in: 127, want: -1},
	test_int8{fn: sub_Neg127_int8, fnname: "sub_Neg127_int8", in: -128, want: 1},
	test_int8{fn: sub_int8_Neg127, fnname: "sub_int8_Neg127", in: -128, want: -1},
	test_int8{fn: sub_Neg127_int8, fnname: "sub_Neg127_int8", in: -127, want: 0},
	test_int8{fn: sub_int8_Neg127, fnname: "sub_int8_Neg127", in: -127, want: 0},
	test_int8{fn: sub_Neg127_int8, fnname: "sub_Neg127_int8", in: -1, want: -126},
	test_int8{fn: sub_int8_Neg127, fnname: "sub_int8_Neg127", in: -1, want: 126},
	test_int8{fn: sub_Neg127_int8, fnname: "sub_Neg127_int8", in: 0, want: -127},
	test_int8{fn: sub_int8_Neg127, fnname: "sub_int8_Neg127", in: 0, want: 127},
	test_int8{fn: sub_Neg127_int8, fnname: "sub_Neg127_int8", in: 1, want: -128},
	test_int8{fn: sub_int8_Neg127, fnname: "sub_int8_Neg127", in: 1, want: -128},
	test_int8{fn: sub_Neg127_int8, fnname: "sub_Neg127_int8", in: 126, want: 3},
	test_int8{fn: sub_int8_Neg127, fnname: "sub_int8_Neg127", in: 126, want: -3},
	test_int8{fn: sub_Neg127_int8, fnname: "sub_Neg127_int8", in: 127, want: 2},
	test_int8{fn: sub_int8_Neg127, fnname: "sub_int8_Neg127", in: 127, want: -2},
	test_int8{fn: sub_Neg1_int8, fnname: "sub_Neg1_int8", in: -128, want: 127},
	test_int8{fn: sub_int8_Neg1, fnname: "sub_int8_Neg1", in: -128, want: -127},
	test_int8{fn: sub_Neg1_int8, fnname: "sub_Neg1_int8", in: -127, want: 126},
	test_int8{fn: sub_int8_Neg1, fnname: "sub_int8_Neg1", in: -127, want: -126},
	test_int8{fn: sub_Neg1_int8, fnname: "sub_Neg1_int8", in: -1, want: 0},
	test_int8{fn: sub_int8_Neg1, fnname: "sub_int8_Neg1", in: -1, want: 0},
	test_int8{fn: sub_Neg1_int8, fnname: "sub_Neg1_int8", in: 0, want: -1},
	test_int8{fn: sub_int8_Neg1, fnname: "sub_int8_Neg1", in: 0, want: 1},
	test_int8{fn: sub_Neg1_int8, fnname: "sub_Neg1_int8", in: 1, want: -2},
	test_int8{fn: sub_int8_Neg1, fnname: "sub_int8_Neg1", in: 1, want: 2},
	test_int8{fn: sub_Neg1_int8, fnname: "sub_Neg1_int8", in: 126, want: -127},
	test_int8{fn: sub_int8_Neg1, fnname: "sub_int8_Neg1", in: 126, want: 127},
	test_int8{fn: sub_Neg1_int8, fnname: "sub_Neg1_int8", in: 127, want: -128},
	test_int8{fn: sub_int8_Neg1, fnname: "sub_int8_Neg1", in: 127, want: -128},
	test_int8{fn: sub_0_int8, fnname: "sub_0_int8", in: -128, want: -128},
	test_int8{fn: sub_int8_0, fnname: "sub_int8_0", in: -128, want: -128},
	test_int8{fn: sub_0_int8, fnname: "sub_0_int8", in: -127, want: 127},
	test_int8{fn: sub_int8_0, fnname: "sub_int8_0", in: -127, want: -127},
	test_int8{fn: sub_0_int8, fnname: "sub_0_int8", in: -1, want: 1},
	test_int8{fn: sub_int8_0, fnname: "sub_int8_0", in: -1, want: -1},
	test_int8{fn: sub_0_int8, fnname: "sub_0_int8", in: 0, want: 0},
	test_int8{fn: sub_int8_0, fnname: "sub_int8_0", in: 0, want: 0},
	test_int8{fn: sub_0_int8, fnname: "sub_0_int8", in: 1, want: -1},
	test_int8{fn: sub_int8_0, fnname: "sub_int8_0", in: 1, want: 1},
	test_int8{fn: sub_0_int8, fnname: "sub_0_int8", in: 126, want: -126},
	test_int8{fn: sub_int8_0, fnname: "sub_int8_0", in: 126, want: 126},
	test_int8{fn: sub_0_int8, fnname: "sub_0_int8", in: 127, want: -127},
	test_int8{fn: sub_int8_0, fnname: "sub_int8_0", in: 127, want: 127},
	test_int8{fn: sub_1_int8, fnname: "sub_1_int8", in: -128, want: -127},
	test_int8{fn: sub_int8_1, fnname: "sub_int8_1", in: -128, want: 127},
	test_int8{fn: sub_1_int8, fnname: "sub_1_int8", in: -127, want: -128},
	test_int8{fn: sub_int8_1, fnname: "sub_int8_1", in: -127, want: -128},
	test_int8{fn: sub_1_int8, fnname: "sub_1_int8", in: -1, want: 2},
	test_int8{fn: sub_int8_1, fnname: "sub_int8_1", in: -1, want: -2},
	test_int8{fn: sub_1_int8, fnname: "sub_1_int8", in: 0, want: 1},
	test_int8{fn: sub_int8_1, fnname: "sub_int8_1", in: 0, want: -1},
	test_int8{fn: sub_1_int8, fnname: "sub_1_int8", in: 1, want: 0},
	test_int8{fn: sub_int8_1, fnname: "sub_int8_1", in: 1, want: 0},
	test_int8{fn: sub_1_int8, fnname: "sub_1_int8", in: 126, want: -125},
	test_int8{fn: sub_int8_1, fnname: "sub_int8_1", in: 126, want: 125},
	test_int8{fn: sub_1_int8, fnname: "sub_1_int8", in: 127, want: -126},
	test_int8{fn: sub_int8_1, fnname: "sub_int8_1", in: 127, want: 126},
	test_int8{fn: sub_126_int8, fnname: "sub_126_int8", in: -128, want: -2},
	test_int8{fn: sub_int8_126, fnname: "sub_int8_126", in: -128, want: 2},
	test_int8{fn: sub_126_int8, fnname: "sub_126_int8", in: -127, want: -3},
	test_int8{fn: sub_int8_126, fnname: "sub_int8_126", in: -127, want: 3},
	test_int8{fn: sub_126_int8, fnname: "sub_126_int8", in: -1, want: 127},
	test_int8{fn: sub_int8_126, fnname: "sub_int8_126", in: -1, want: -127},
	test_int8{fn: sub_126_int8, fnname: "sub_126_int8", in: 0, want: 126},
	test_int8{fn: sub_int8_126, fnname: "sub_int8_126", in: 0, want: -126},
	test_int8{fn: sub_126_int8, fnname: "sub_126_int8", in: 1, want: 125},
	test_int8{fn: sub_int8_126, fnname: "sub_int8_126", in: 1, want: -125},
	test_int8{fn: sub_126_int8, fnname: "sub_126_int8", in: 126, want: 0},
	test_int8{fn: sub_int8_126, fnname: "sub_int8_126", in: 126, want: 0},
	test_int8{fn: sub_126_int8, fnname: "sub_126_int8", in: 127, want: -1},
	test_int8{fn: sub_int8_126, fnname: "sub_int8_126", in: 127, want: 1},
	test_int8{fn: sub_127_int8, fnname: "sub_127_int8", in: -128, want: -1},
	test_int8{fn: sub_int8_127, fnname: "sub_int8_127", in: -128, want: 1},
	test_int8{fn: sub_127_int8, fnname: "sub_127_int8", in: -127, want: -2},
	test_int8{fn: sub_int8_127, fnname: "sub_int8_127", in: -127, want: 2},
	test_int8{fn: sub_127_int8, fnname: "sub_127_int8", in: -1, want: -128},
	test_int8{fn: sub_int8_127, fnname: "sub_int8_127", in: -1, want: -128},
	test_int8{fn: sub_127_int8, fnname: "sub_127_int8", in: 0, want: 127},
	test_int8{fn: sub_int8_127, fnname: "sub_int8_127", in: 0, want: -127},
	test_int8{fn: sub_127_int8, fnname: "sub_127_int8", in: 1, want: 126},
	test_int8{fn: sub_int8_127, fnname: "sub_int8_127", in: 1, want: -126},
	test_int8{fn: sub_127_int8, fnname: "sub_127_int8", in: 126, want: 1},
	test_int8{fn: sub_int8_127, fnname: "sub_int8_127", in: 126, want: -1},
	test_int8{fn: sub_127_int8, fnname: "sub_127_int8", in: 127, want: 0},
	test_int8{fn: sub_int8_127, fnname: "sub_int8_127", in: 127, want: 0},
	test_int8{fn: div_Neg128_int8, fnname: "div_Neg128_int8", in: -128, want: 1},
	test_int8{fn: div_int8_Neg128, fnname: "div_int8_Neg128", in: -128, want: 1},
	test_int8{fn: div_Neg128_int8, fnname: "div_Neg128_int8", in: -127, want: 1},
	test_int8{fn: div_int8_Neg128, fnname: "div_int8_Neg128", in: -127, want: 0},
	test_int8{fn: div_Neg128_int8, fnname: "div_Neg128_int8", in: -1, want: -128},
	test_int8{fn: div_int8_Neg128, fnname: "div_int8_Neg128", in: -1, want: 0},
	test_int8{fn: div_int8_Neg128, fnname: "div_int8_Neg128", in: 0, want: 0},
	test_int8{fn: div_Neg128_int8, fnname: "div_Neg128_int8", in: 1, want: -128},
	test_int8{fn: div_int8_Neg128, fnname: "div_int8_Neg128", in: 1, want: 0},
	test_int8{fn: div_Neg128_int8, fnname: "div_Neg128_int8", in: 126, want: -1},
	test_int8{fn: div_int8_Neg128, fnname: "div_int8_Neg128", in: 126, want: 0},
	test_int8{fn: div_Neg128_int8, fnname: "div_Neg128_int8", in: 127, want: -1},
	test_int8{fn: div_int8_Neg128, fnname: "div_int8_Neg128", in: 127, want: 0},
	test_int8{fn: div_Neg127_int8, fnname: "div_Neg127_int8", in: -128, want: 0},
	test_int8{fn: div_int8_Neg127, fnname: "div_int8_Neg127", in: -128, want: 1},
	test_int8{fn: div_Neg127_int8, fnname: "div_Neg127_int8", in: -127, want: 1},
	test_int8{fn: div_int8_Neg127, fnname: "div_int8_Neg127", in: -127, want: 1},
	test_int8{fn: div_Neg127_int8, fnname: "div_Neg127_int8", in: -1, want: 127},
	test_int8{fn: div_int8_Neg127, fnname: "div_int8_Neg127", in: -1, want: 0},
	test_int8{fn: div_int8_Neg127, fnname: "div_int8_Neg127", in: 0, want: 0},
	test_int8{fn: div_Neg127_int8, fnname: "div_Neg127_int8", in: 1, want: -127},
	test_int8{fn: div_int8_Neg127, fnname: "div_int8_Neg127", in: 1, want: 0},
	test_int8{fn: div_Neg127_int8, fnname: "div_Neg127_int8", in: 126, want: -1},
	test_int8{fn: div_int8_Neg127, fnname: "div_int8_Neg127", in: 126, want: 0},
	test_int8{fn: div_Neg127_int8, fnname: "div_Neg127_int8", in: 127, want: -1},
	test_int8{fn: div_int8_Neg127, fnname: "div_int8_Neg127", in: 127, want: -1},
	test_int8{fn: div_Neg1_int8, fnname: "div_Neg1_int8", in: -128, want: 0},
	test_int8{fn: div_int8_Neg1, fnname: "div_int8_Neg1", in: -128, want: -128},
	test_int8{fn: div_Neg1_int8, fnname: "div_Neg1_int8", in: -127, want: 0},
	test_int8{fn: div_int8_Neg1, fnname: "div_int8_Neg1", in: -127, want: 127},
	test_int8{fn: div_Neg1_int8, fnname: "div_Neg1_int8", in: -1, want: 1},
	test_int8{fn: div_int8_Neg1, fnname: "div_int8_Neg1", in: -1, want: 1},
	test_int8{fn: div_int8_Neg1, fnname: "div_int8_Neg1", in: 0, want: 0},
	test_int8{fn: div_Neg1_int8, fnname: "div_Neg1_int8", in: 1, want: -1},
	test_int8{fn: div_int8_Neg1, fnname: "div_int8_Neg1", in: 1, want: -1},
	test_int8{fn: div_Neg1_int8, fnname: "div_Neg1_int8", in: 126, want: 0},
	test_int8{fn: div_int8_Neg1, fnname: "div_int8_Neg1", in: 126, want: -126},
	test_int8{fn: div_Neg1_int8, fnname: "div_Neg1_int8", in: 127, want: 0},
	test_int8{fn: div_int8_Neg1, fnname: "div_int8_Neg1", in: 127, want: -127},
	test_int8{fn: div_0_int8, fnname: "div_0_int8", in: -128, want: 0},
	test_int8{fn: div_0_int8, fnname: "div_0_int8", in: -127, want: 0},
	test_int8{fn: div_0_int8, fnname: "div_0_int8", in: -1, want: 0},
	test_int8{fn: div_0_int8, fnname: "div_0_int8", in: 1, want: 0},
	test_int8{fn: div_0_int8, fnname: "div_0_int8", in: 126, want: 0},
	test_int8{fn: div_0_int8, fnname: "div_0_int8", in: 127, want: 0},
	test_int8{fn: div_1_int8, fnname: "div_1_int8", in: -128, want: 0},
	test_int8{fn: div_int8_1, fnname: "div_int8_1", in: -128, want: -128},
	test_int8{fn: div_1_int8, fnname: "div_1_int8", in: -127, want: 0},
	test_int8{fn: div_int8_1, fnname: "div_int8_1", in: -127, want: -127},
	test_int8{fn: div_1_int8, fnname: "div_1_int8", in: -1, want: -1},
	test_int8{fn: div_int8_1, fnname: "div_int8_1", in: -1, want: -1},
	test_int8{fn: div_int8_1, fnname: "div_int8_1", in: 0, want: 0},
	test_int8{fn: div_1_int8, fnname: "div_1_int8", in: 1, want: 1},
	test_int8{fn: div_int8_1, fnname: "div_int8_1", in: 1, want: 1},
	test_int8{fn: div_1_int8, fnname: "div_1_int8", in: 126, want: 0},
	test_int8{fn: div_int8_1, fnname: "div_int8_1", in: 126, want: 126},
	test_int8{fn: div_1_int8, fnname: "div_1_int8", in: 127, want: 0},
	test_int8{fn: div_int8_1, fnname: "div_int8_1", in: 127, want: 127},
	test_int8{fn: div_126_int8, fnname: "div_126_int8", in: -128, want: 0},
	test_int8{fn: div_int8_126, fnname: "div_int8_126", in: -128, want: -1},
	test_int8{fn: div_126_int8, fnname: "div_126_int8", in: -127, want: 0},
	test_int8{fn: div_int8_126, fnname: "div_int8_126", in: -127, want: -1},
	test_int8{fn: div_126_int8, fnname: "div_126_int8", in: -1, want: -126},
	test_int8{fn: div_int8_126, fnname: "div_int8_126", in: -1, want: 0},
	test_int8{fn: div_int8_126, fnname: "div_int8_126", in: 0, want: 0},
	test_int8{fn: div_126_int8, fnname: "div_126_int8", in: 1, want: 126},
	test_int8{fn: div_int8_126, fnname: "div_int8_126", in: 1, want: 0},
	test_int8{fn: div_126_int8, fnname: "div_126_int8", in: 126, want: 1},
	test_int8{fn: div_int8_126, fnname: "div_int8_126", in: 126, want: 1},
	test_int8{fn: div_126_int8, fnname: "div_126_int8", in: 127, want: 0},
	test_int8{fn: div_int8_126, fnname: "div_int8_126", in: 127, want: 1},
	test_int8{fn: div_127_int8, fnname: "div_127_int8", in: -128, want: 0},
	test_int8{fn: div_int8_127, fnname: "div_int8_127", in: -128, want: -1},
	test_int8{fn: div_127_int8, fnname: "div_127_int8", in: -127, want: -1},
	test_int8{fn: div_int8_127, fnname: "div_int8_127", in: -127, want: -1},
	test_int8{fn: div_127_int8, fnname: "div_127_int8", in: -1, want: -127},
	test_int8{fn: div_int8_127, fnname: "div_int8_127", in: -1, want: 0},
	test_int8{fn: div_int8_127, fnname: "div_int8_127", in: 0, want: 0},
	test_int8{fn: div_127_int8, fnname: "div_127_int8", in: 1, want: 127},
	test_int8{fn: div_int8_127, fnname: "div_int8_127", in: 1, want: 0},
	test_int8{fn: div_127_int8, fnname: "div_127_int8", in: 126, want: 1},
	test_int8{fn: div_int8_127, fnname: "div_int8_127", in: 126, want: 0},
	test_int8{fn: div_127_int8, fnname: "div_127_int8", in: 127, want: 1},
	test_int8{fn: div_int8_127, fnname: "div_int8_127", in: 127, want: 1},
	test_int8{fn: mul_Neg128_int8, fnname: "mul_Neg128_int8", in: -128, want: 0},
	test_int8{fn: mul_int8_Neg128, fnname: "mul_int8_Neg128", in: -128, want: 0},
	test_int8{fn: mul_Neg128_int8, fnname: "mul_Neg128_int8", in: -127, want: -128},
	test_int8{fn: mul_int8_Neg128, fnname: "mul_int8_Neg128", in: -127, want: -128},
	test_int8{fn: mul_Neg128_int8, fnname: "mul_Neg128_int8", in: -1, want: -128},
	test_int8{fn: mul_int8_Neg128, fnname: "mul_int8_Neg128", in: -1, want: -128},
	test_int8{fn: mul_Neg128_int8, fnname: "mul_Neg128_int8", in: 0, want: 0},
	test_int8{fn: mul_int8_Neg128, fnname: "mul_int8_Neg128", in: 0, want: 0},
	test_int8{fn: mul_Neg128_int8, fnname: "mul_Neg128_int8", in: 1, want: -128},
	test_int8{fn: mul_int8_Neg128, fnname: "mul_int8_Neg128", in: 1, want: -128},
	test_int8{fn: mul_Neg128_int8, fnname: "mul_Neg128_int8", in: 126, want: 0},
	test_int8{fn: mul_int8_Neg128, fnname: "mul_int8_Neg128", in: 126, want: 0},
	test_int8{fn: mul_Neg128_int8, fnname: "mul_Neg128_int8", in: 127, want: -128},
	test_int8{fn: mul_int8_Neg128, fnname: "mul_int8_Neg128", in: 127, want: -128},
	test_int8{fn: mul_Neg127_int8, fnname: "mul_Neg127_int8", in: -128, want: -128},
	test_int8{fn: mul_int8_Neg127, fnname: "mul_int8_Neg127", in: -128, want: -128},
	test_int8{fn: mul_Neg127_int8, fnname: "mul_Neg127_int8", in: -127, want: 1},
	test_int8{fn: mul_int8_Neg127, fnname: "mul_int8_Neg127", in: -127, want: 1},
	test_int8{fn: mul_Neg127_int8, fnname: "mul_Neg127_int8", in: -1, want: 127},
	test_int8{fn: mul_int8_Neg127, fnname: "mul_int8_Neg127", in: -1, want: 127},
	test_int8{fn: mul_Neg127_int8, fnname: "mul_Neg127_int8", in: 0, want: 0},
	test_int8{fn: mul_int8_Neg127, fnname: "mul_int8_Neg127", in: 0, want: 0},
	test_int8{fn: mul_Neg127_int8, fnname: "mul_Neg127_int8", in: 1, want: -127},
	test_int8{fn: mul_int8_Neg127, fnname: "mul_int8_Neg127", in: 1, want: -127},
	test_int8{fn: mul_Neg127_int8, fnname: "mul_Neg127_int8", in: 126, want: 126},
	test_int8{fn: mul_int8_Neg127, fnname: "mul_int8_Neg127", in: 126, want: 126},
	test_int8{fn: mul_Neg127_int8, fnname: "mul_Neg127_int8", in: 127, want: -1},
	test_int8{fn: mul_int8_Neg127, fnname: "mul_int8_Neg127", in: 127, want: -1},
	test_int8{fn: mul_Neg1_int8, fnname: "mul_Neg1_int8", in: -128, want: -128},
	test_int8{fn: mul_int8_Neg1, fnname: "mul_int8_Neg1", in: -128, want: -128},
	test_int8{fn: mul_Neg1_int8, fnname: "mul_Neg1_int8", in: -127, want: 127},
	test_int8{fn: mul_int8_Neg1, fnname: "mul_int8_Neg1", in: -127, want: 127},
	test_int8{fn: mul_Neg1_int8, fnname: "mul_Neg1_int8", in: -1, want: 1},
	test_int8{fn: mul_int8_Neg1, fnname: "mul_int8_Neg1", in: -1, want: 1},
	test_int8{fn: mul_Neg1_int8, fnname: "mul_Neg1_int8", in: 0, want: 0},
	test_int8{fn: mul_int8_Neg1, fnname: "mul_int8_Neg1", in: 0, want: 0},
	test_int8{fn: mul_Neg1_int8, fnname: "mul_Neg1_int8", in: 1, want: -1},
	test_int8{fn: mul_int8_Neg1, fnname: "mul_int8_Neg1", in: 1, want: -1},
	test_int8{fn: mul_Neg1_int8, fnname: "mul_Neg1_int8", in: 126, want: -126},
	test_int8{fn: mul_int8_Neg1, fnname: "mul_int8_Neg1", in: 126, want: -126},
	test_int8{fn: mul_Neg1_int8, fnname: "mul_Neg1_int8", in: 127, want: -127},
	test_int8{fn: mul_int8_Neg1, fnname: "mul_int8_Neg1", in: 127, want: -127},
	test_int8{fn: mul_0_int8, fnname: "mul_0_int8", in: -128, want: 0},
	test_int8{fn: mul_int8_0, fnname: "mul_int8_0", in: -128, want: 0},
	test_int8{fn: mul_0_int8, fnname: "mul_0_int8", in: -127, want: 0},
	test_int8{fn: mul_int8_0, fnname: "mul_int8_0", in: -127, want: 0},
	test_int8{fn: mul_0_int8, fnname: "mul_0_int8", in: -1, want: 0},
	test_int8{fn: mul_int8_0, fnname: "mul_int8_0", in: -1, want: 0},
	test_int8{fn: mul_0_int8, fnname: "mul_0_int8", in: 0, want: 0},
	test_int8{fn: mul_int8_0, fnname: "mul_int8_0", in: 0, want: 0},
	test_int8{fn: mul_0_int8, fnname: "mul_0_int8", in: 1, want: 0},
	test_int8{fn: mul_int8_0, fnname: "mul_int8_0", in: 1, want: 0},
	test_int8{fn: mul_0_int8, fnname: "mul_0_int8", in: 126, want: 0},
	test_int8{fn: mul_int8_0, fnname: "mul_int8_0", in: 126, want: 0},
	test_int8{fn: mul_0_int8, fnname: "mul_0_int8", in: 127, want: 0},
	test_int8{fn: mul_int8_0, fnname: "mul_int8_0", in: 127, want: 0},
	test_int8{fn: mul_1_int8, fnname: "mul_1_int8", in: -128, want: -128},
	test_int8{fn: mul_int8_1, fnname: "mul_int8_1", in: -128, want: -128},
	test_int8{fn: mul_1_int8, fnname: "mul_1_int8", in: -127, want: -127},
	test_int8{fn: mul_int8_1, fnname: "mul_int8_1", in: -127, want: -127},
	test_int8{fn: mul_1_int8, fnname: "mul_1_int8", in: -1, want: -1},
	test_int8{fn: mul_int8_1, fnname: "mul_int8_1", in: -1, want: -1},
	test_int8{fn: mul_1_int8, fnname: "mul_1_int8", in: 0, want: 0},
	test_int8{fn: mul_int8_1, fnname: "mul_int8_1", in: 0, want: 0},
	test_int8{fn: mul_1_int8, fnname: "mul_1_int8", in: 1, want: 1},
	test_int8{fn: mul_int8_1, fnname: "mul_int8_1", in: 1, want: 1},
	test_int8{fn: mul_1_int8, fnname: "mul_1_int8", in: 126, want: 126},
	test_int8{fn: mul_int8_1, fnname: "mul_int8_1", in: 126, want: 126},
	test_int8{fn: mul_1_int8, fnname: "mul_1_int8", in: 127, want: 127},
	test_int8{fn: mul_int8_1, fnname: "mul_int8_1", in: 127, want: 127},
	test_int8{fn: mul_126_int8, fnname: "mul_126_int8", in: -128, want: 0},
	test_int8{fn: mul_int8_126, fnname: "mul_int8_126", in: -128, want: 0},
	test_int8{fn: mul_126_int8, fnname: "mul_126_int8", in: -127, want: 126},
	test_int8{fn: mul_int8_126, fnname: "mul_int8_126", in: -127, want: 126},
	test_int8{fn: mul_126_int8, fnname: "mul_126_int8", in: -1, want: -126},
	test_int8{fn: mul_int8_126, fnname: "mul_int8_126", in: -1, want: -126},
	test_int8{fn: mul_126_int8, fnname: "mul_126_int8", in: 0, want: 0},
	test_int8{fn: mul_int8_126, fnname: "mul_int8_126", in: 0, want: 0},
	test_int8{fn: mul_126_int8, fnname: "mul_126_int8", in: 1, want: 126},
	test_int8{fn: mul_int8_126, fnname: "mul_int8_126", in: 1, want: 126},
	test_int8{fn: mul_126_int8, fnname: "mul_126_int8", in: 126, want: 4},
	test_int8{fn: mul_int8_126, fnname: "mul_int8_126", in: 126, want: 4},
	test_int8{fn: mul_126_int8, fnname: "mul_126_int8", in: 127, want: -126},
	test_int8{fn: mul_int8_126, fnname: "mul_int8_126", in: 127, want: -126},
	test_int8{fn: mul_127_int8, fnname: "mul_127_int8", in: -128, want: -128},
	test_int8{fn: mul_int8_127, fnname: "mul_int8_127", in: -128, want: -128},
	test_int8{fn: mul_127_int8, fnname: "mul_127_int8", in: -127, want: -1},
	test_int8{fn: mul_int8_127, fnname: "mul_int8_127", in: -127, want: -1},
	test_int8{fn: mul_127_int8, fnname: "mul_127_int8", in: -1, want: -127},
	test_int8{fn: mul_int8_127, fnname: "mul_int8_127", in: -1, want: -127},
	test_int8{fn: mul_127_int8, fnname: "mul_127_int8", in: 0, want: 0},
	test_int8{fn: mul_int8_127, fnname: "mul_int8_127", in: 0, want: 0},
	test_int8{fn: mul_127_int8, fnname: "mul_127_int8", in: 1, want: 127},
	test_int8{fn: mul_int8_127, fnname: "mul_int8_127", in: 1, want: 127},
	test_int8{fn: mul_127_int8, fnname: "mul_127_int8", in: 126, want: -126},
	test_int8{fn: mul_int8_127, fnname: "mul_int8_127", in: 126, want: -126},
	test_int8{fn: mul_127_int8, fnname: "mul_127_int8", in: 127, want: 1},
	test_int8{fn: mul_int8_127, fnname: "mul_int8_127", in: 127, want: 1},
	test_int8{fn: mod_Neg128_int8, fnname: "mod_Neg128_int8", in: -128, want: 0},
	test_int8{fn: mod_int8_Neg128, fnname: "mod_int8_Neg128", in: -128, want: 0},
	test_int8{fn: mod_Neg128_int8, fnname: "mod_Neg128_int8", in: -127, want: -1},
	test_int8{fn: mod_int8_Neg128, fnname: "mod_int8_Neg128", in: -127, want: -127},
	test_int8{fn: mod_Neg128_int8, fnname: "mod_Neg128_int8", in: -1, want: 0},
	test_int8{fn: mod_int8_Neg128, fnname: "mod_int8_Neg128", in: -1, want: -1},
	test_int8{fn: mod_int8_Neg128, fnname: "mod_int8_Neg128", in: 0, want: 0},
	test_int8{fn: mod_Neg128_int8, fnname: "mod_Neg128_int8", in: 1, want: 0},
	test_int8{fn: mod_int8_Neg128, fnname: "mod_int8_Neg128", in: 1, want: 1},
	test_int8{fn: mod_Neg128_int8, fnname: "mod_Neg128_int8", in: 126, want: -2},
	test_int8{fn: mod_int8_Neg128, fnname: "mod_int8_Neg128", in: 126, want: 126},
	test_int8{fn: mod_Neg128_int8, fnname: "mod_Neg128_int8", in: 127, want: -1},
	test_int8{fn: mod_int8_Neg128, fnname: "mod_int8_Neg128", in: 127, want: 127},
	test_int8{fn: mod_Neg127_int8, fnname: "mod_Neg127_int8", in: -128, want: -127},
	test_int8{fn: mod_int8_Neg127, fnname: "mod_int8_Neg127", in: -128, want: -1},
	test_int8{fn: mod_Neg127_int8, fnname: "mod_Neg127_int8", in: -127, want: 0},
	test_int8{fn: mod_int8_Neg127, fnname: "mod_int8_Neg127", in: -127, want: 0},
	test_int8{fn: mod_Neg127_int8, fnname: "mod_Neg127_int8", in: -1, want: 0},
	test_int8{fn: mod_int8_Neg127, fnname: "mod_int8_Neg127", in: -1, want: -1},
	test_int8{fn: mod_int8_Neg127, fnname: "mod_int8_Neg127", in: 0, want: 0},
	test_int8{fn: mod_Neg127_int8, fnname: "mod_Neg127_int8", in: 1, want: 0},
	test_int8{fn: mod_int8_Neg127, fnname: "mod_int8_Neg127", in: 1, want: 1},
	test_int8{fn: mod_Neg127_int8, fnname: "mod_Neg127_int8", in: 126, want: -1},
	test_int8{fn: mod_int8_Neg127, fnname: "mod_int8_Neg127", in: 126, want: 126},
	test_int8{fn: mod_Neg127_int8, fnname: "mod_Neg127_int8", in: 127, want: 0},
	test_int8{fn: mod_int8_Neg127, fnname: "mod_int8_Neg127", in: 127, want: 0},
	test_int8{fn: mod_Neg1_int8, fnname: "mod_Neg1_int8", in: -128, want: -1},
	test_int8{fn: mod_int8_Neg1, fnname: "mod_int8_Neg1", in: -128, want: 0},
	test_int8{fn: mod_Neg1_int8, fnname: "mod_Neg1_int8", in: -127, want: -1},
	test_int8{fn: mod_int8_Neg1, fnname: "mod_int8_Neg1", in: -127, want: 0},
	test_int8{fn: mod_Neg1_int8, fnname: "mod_Neg1_int8", in: -1, want: 0},
	test_int8{fn: mod_int8_Neg1, fnname: "mod_int8_Neg1", in: -1, want: 0},
	test_int8{fn: mod_int8_Neg1, fnname: "mod_int8_Neg1", in: 0, want: 0},
	test_int8{fn: mod_Neg1_int8, fnname: "mod_Neg1_int8", in: 1, want: 0},
	test_int8{fn: mod_int8_Neg1, fnname: "mod_int8_Neg1", in: 1, want: 0},
	test_int8{fn: mod_Neg1_int8, fnname: "mod_Neg1_int8", in: 126, want: -1},
	test_int8{fn: mod_int8_Neg1, fnname: "mod_int8_Neg1", in: 126, want: 0},
	test_int8{fn: mod_Neg1_int8, fnname: "mod_Neg1_int8", in: 127, want: -1},
	test_int8{fn: mod_int8_Neg1, fnname: "mod_int8_Neg1", in: 127, want: 0},
	test_int8{fn: mod_0_int8, fnname: "mod_0_int8", in: -128, want: 0},
	test_int8{fn: mod_0_int8, fnname: "mod_0_int8", in: -127, want: 0},
	test_int8{fn: mod_0_int8, fnname: "mod_0_int8", in: -1, want: 0},
	test_int8{fn: mod_0_int8, fnname: "mod_0_int8", in: 1, want: 0},
	test_int8{fn: mod_0_int8, fnname: "mod_0_int8", in: 126, want: 0},
	test_int8{fn: mod_0_int8, fnname: "mod_0_int8", in: 127, want: 0},
	test_int8{fn: mod_1_int8, fnname: "mod_1_int8", in: -128, want: 1},
	test_int8{fn: mod_int8_1, fnname: "mod_int8_1", in: -128, want: 0},
	test_int8{fn: mod_1_int8, fnname: "mod_1_int8", in: -127, want: 1},
	test_int8{fn: mod_int8_1, fnname: "mod_int8_1", in: -127, want: 0},
	test_int8{fn: mod_1_int8, fnname: "mod_1_int8", in: -1, want: 0},
	test_int8{fn: mod_int8_1, fnname: "mod_int8_1", in: -1, want: 0},
	test_int8{fn: mod_int8_1, fnname: "mod_int8_1", in: 0, want: 0},
	test_int8{fn: mod_1_int8, fnname: "mod_1_int8", in: 1, want: 0},
	test_int8{fn: mod_int8_1, fnname: "mod_int8_1", in: 1, want: 0},
	test_int8{fn: mod_1_int8, fnname: "mod_1_int8", in: 126, want: 1},
	test_int8{fn: mod_int8_1, fnname: "mod_int8_1", in: 126, want: 0},
	test_int8{fn: mod_1_int8, fnname: "mod_1_int8", in: 127, want: 1},
	test_int8{fn: mod_int8_1, fnname: "mod_int8_1", in: 127, want: 0},
	test_int8{fn: mod_126_int8, fnname: "mod_126_int8", in: -128, want: 126},
	test_int8{fn: mod_int8_126, fnname: "mod_int8_126", in: -128, want: -2},
	test_int8{fn: mod_126_int8, fnname: "mod_126_int8", in: -127, want: 126},
	test_int8{fn: mod_int8_126, fnname: "mod_int8_126", in: -127, want: -1},
	test_int8{fn: mod_126_int8, fnname: "mod_126_int8", in: -1, want: 0},
	test_int8{fn: mod_int8_126, fnname: "mod_int8_126", in: -1, want: -1},
	test_int8{fn: mod_int8_126, fnname: "mod_int8_126", in: 0, want: 0},
	test_int8{fn: mod_126_int8, fnname: "mod_126_int8", in: 1, want: 0},
	test_int8{fn: mod_int8_126, fnname: "mod_int8_126", in: 1, want: 1},
	test_int8{fn: mod_126_int8, fnname: "mod_126_int8", in: 126, want: 0},
	test_int8{fn: mod_int8_126, fnname: "mod_int8_126", in: 126, want: 0},
	test_int8{fn: mod_126_int8, fnname: "mod_126_int8", in: 127, want: 126},
	test_int8{fn: mod_int8_126, fnname: "mod_int8_126", in: 127, want: 1},
	test_int8{fn: mod_127_int8, fnname: "mod_127_int8", in: -128, want: 127},
	test_int8{fn: mod_int8_127, fnname: "mod_int8_127", in: -128, want: -1},
	test_int8{fn: mod_127_int8, fnname: "mod_127_int8", in: -127, want: 0},
	test_int8{fn: mod_int8_127, fnname: "mod_int8_127", in: -127, want: 0},
	test_int8{fn: mod_127_int8, fnname: "mod_127_int8", in: -1, want: 0},
	test_int8{fn: mod_int8_127, fnname: "mod_int8_127", in: -1, want: -1},
	test_int8{fn: mod_int8_127, fnname: "mod_int8_127", in: 0, want: 0},
	test_int8{fn: mod_127_int8, fnname: "mod_127_int8", in: 1, want: 0},
	test_int8{fn: mod_int8_127, fnname: "mod_int8_127", in: 1, want: 1},
	test_int8{fn: mod_127_int8, fnname: "mod_127_int8", in: 126, want: 1},
	test_int8{fn: mod_int8_127, fnname: "mod_int8_127", in: 126, want: 126},
	test_int8{fn: mod_127_int8, fnname: "mod_127_int8", in: 127, want: 0},
	test_int8{fn: mod_int8_127, fnname: "mod_int8_127", in: 127, want: 0},
	test_int8{fn: and_Neg128_int8, fnname: "and_Neg128_int8", in: -128, want: -128},
	test_int8{fn: and_int8_Neg128, fnname: "and_int8_Neg128", in: -128, want: -128},
	test_int8{fn: and_Neg128_int8, fnname: "and_Neg128_int8", in: -127, want: -128},
	test_int8{fn: and_int8_Neg128, fnname: "and_int8_Neg128", in: -127, want: -128},
	test_int8{fn: and_Neg128_int8, fnname: "and_Neg128_int8", in: -1, want: -128},
	test_int8{fn: and_int8_Neg128, fnname: "and_int8_Neg128", in: -1, want: -128},
	test_int8{fn: and_Neg128_int8, fnname: "and_Neg128_int8", in: 0, want: 0},
	test_int8{fn: and_int8_Neg128, fnname: "and_int8_Neg128", in: 0, want: 0},
	test_int8{fn: and_Neg128_int8, fnname: "and_Neg128_int8", in: 1, want: 0},
	test_int8{fn: and_int8_Neg128, fnname: "and_int8_Neg128", in: 1, want: 0},
	test_int8{fn: and_Neg128_int8, fnname: "and_Neg128_int8", in: 126, want: 0},
	test_int8{fn: and_int8_Neg128, fnname: "and_int8_Neg128", in: 126, want: 0},
	test_int8{fn: and_Neg128_int8, fnname: "and_Neg128_int8", in: 127, want: 0},
	test_int8{fn: and_int8_Neg128, fnname: "and_int8_Neg128", in: 127, want: 0},
	test_int8{fn: and_Neg127_int8, fnname: "and_Neg127_int8", in: -128, want: -128},
	test_int8{fn: and_int8_Neg127, fnname: "and_int8_Neg127", in: -128, want: -128},
	test_int8{fn: and_Neg127_int8, fnname: "and_Neg127_int8", in: -127, want: -127},
	test_int8{fn: and_int8_Neg127, fnname: "and_int8_Neg127", in: -127, want: -127},
	test_int8{fn: and_Neg127_int8, fnname: "and_Neg127_int8", in: -1, want: -127},
	test_int8{fn: and_int8_Neg127, fnname: "and_int8_Neg127", in: -1, want: -127},
	test_int8{fn: and_Neg127_int8, fnname: "and_Neg127_int8", in: 0, want: 0},
	test_int8{fn: and_int8_Neg127, fnname: "and_int8_Neg127", in: 0, want: 0},
	test_int8{fn: and_Neg127_int8, fnname: "and_Neg127_int8", in: 1, want: 1},
	test_int8{fn: and_int8_Neg127, fnname: "and_int8_Neg127", in: 1, want: 1},
	test_int8{fn: and_Neg127_int8, fnname: "and_Neg127_int8", in: 126, want: 0},
	test_int8{fn: and_int8_Neg127, fnname: "and_int8_Neg127", in: 126, want: 0},
	test_int8{fn: and_Neg127_int8, fnname: "and_Neg127_int8", in: 127, want: 1},
	test_int8{fn: and_int8_Neg127, fnname: "and_int8_Neg127", in: 127, want: 1},
	test_int8{fn: and_Neg1_int8, fnname: "and_Neg1_int8", in: -128, want: -128},
	test_int8{fn: and_int8_Neg1, fnname: "and_int8_Neg1", in: -128, want: -128},
	test_int8{fn: and_Neg1_int8, fnname: "and_Neg1_int8", in: -127, want: -127},
	test_int8{fn: and_int8_Neg1, fnname: "and_int8_Neg1", in: -127, want: -127},
	test_int8{fn: and_Neg1_int8, fnname: "and_Neg1_int8", in: -1, want: -1},
	test_int8{fn: and_int8_Neg1, fnname: "and_int8_Neg1", in: -1, want: -1},
	test_int8{fn: and_Neg1_int8, fnname: "and_Neg1_int8", in: 0, want: 0},
	test_int8{fn: and_int8_Neg1, fnname: "and_int8_Neg1", in: 0, want: 0},
	test_int8{fn: and_Neg1_int8, fnname: "and_Neg1_int8", in: 1, want: 1},
	test_int8{fn: and_int8_Neg1, fnname: "and_int8_Neg1", in: 1, want: 1},
	test_int8{fn: and_Neg1_int8, fnname: "and_Neg1_int8", in: 126, want: 126},
	test_int8{fn: and_int8_Neg1, fnname: "and_int8_Neg1", in: 126, want: 126},
	test_int8{fn: and_Neg1_int8, fnname: "and_Neg1_int8", in: 127, want: 127},
	test_int8{fn: and_int8_Neg1, fnname: "and_int8_Neg1", in: 127, want: 127},
	test_int8{fn: and_0_int8, fnname: "and_0_int8", in: -128, want: 0},
	test_int8{fn: and_int8_0, fnname: "and_int8_0", in: -128, want: 0},
	test_int8{fn: and_0_int8, fnname: "and_0_int8", in: -127, want: 0},
	test_int8{fn: and_int8_0, fnname: "and_int8_0", in: -127, want: 0},
	test_int8{fn: and_0_int8, fnname: "and_0_int8", in: -1, want: 0},
	test_int8{fn: and_int8_0, fnname: "and_int8_0", in: -1, want: 0},
	test_int8{fn: and_0_int8, fnname: "and_0_int8", in: 0, want: 0},
	test_int8{fn: and_int8_0, fnname: "and_int8_0", in: 0, want: 0},
	test_int8{fn: and_0_int8, fnname: "and_0_int8", in: 1, want: 0},
	test_int8{fn: and_int8_0, fnname: "and_int8_0", in: 1, want: 0},
	test_int8{fn: and_0_int8, fnname: "and_0_int8", in: 126, want: 0},
	test_int8{fn: and_int8_0, fnname: "and_int8_0", in: 126, want: 0},
	test_int8{fn: and_0_int8, fnname: "and_0_int8", in: 127, want: 0},
	test_int8{fn: and_int8_0, fnname: "and_int8_0", in: 127, want: 0},
	test_int8{fn: and_1_int8, fnname: "and_1_int8", in: -128, want: 0},
	test_int8{fn: and_int8_1, fnname: "and_int8_1", in: -128, want: 0},
	test_int8{fn: and_1_int8, fnname: "and_1_int8", in: -127, want: 1},
	test_int8{fn: and_int8_1, fnname: "and_int8_1", in: -127, want: 1},
	test_int8{fn: and_1_int8, fnname: "and_1_int8", in: -1, want: 1},
	test_int8{fn: and_int8_1, fnname: "and_int8_1", in: -1, want: 1},
	test_int8{fn: and_1_int8, fnname: "and_1_int8", in: 0, want: 0},
	test_int8{fn: and_int8_1, fnname: "and_int8_1", in: 0, want: 0},
	test_int8{fn: and_1_int8, fnname: "and_1_int8", in: 1, want: 1},
	test_int8{fn: and_int8_1, fnname: "and_int8_1", in: 1, want: 1},
	test_int8{fn: and_1_int8, fnname: "and_1_int8", in: 126, want: 0},
	test_int8{fn: and_int8_1, fnname: "and_int8_1", in: 126, want: 0},
	test_int8{fn: and_1_int8, fnname: "and_1_int8", in: 127, want: 1},
	test_int8{fn: and_int8_1, fnname: "and_int8_1", in: 127, want: 1},
	test_int8{fn: and_126_int8, fnname: "and_126_int8", in: -128, want: 0},
	test_int8{fn: and_int8_126, fnname: "and_int8_126", in: -128, want: 0},
	test_int8{fn: and_126_int8, fnname: "and_126_int8", in: -127, want: 0},
	test_int8{fn: and_int8_126, fnname: "and_int8_126", in: -127, want: 0},
	test_int8{fn: and_126_int8, fnname: "and_126_int8", in: -1, want: 126},
	test_int8{fn: and_int8_126, fnname: "and_int8_126", in: -1, want: 126},
	test_int8{fn: and_126_int8, fnname: "and_126_int8", in: 0, want: 0},
	test_int8{fn: and_int8_126, fnname: "and_int8_126", in: 0, want: 0},
	test_int8{fn: and_126_int8, fnname: "and_126_int8", in: 1, want: 0},
	test_int8{fn: and_int8_126, fnname: "and_int8_126", in: 1, want: 0},
	test_int8{fn: and_126_int8, fnname: "and_126_int8", in: 126, want: 126},
	test_int8{fn: and_int8_126, fnname: "and_int8_126", in: 126, want: 126},
	test_int8{fn: and_126_int8, fnname: "and_126_int8", in: 127, want: 126},
	test_int8{fn: and_int8_126, fnname: "and_int8_126", in: 127, want: 126},
	test_int8{fn: and_127_int8, fnname: "and_127_int8", in: -128, want: 0},
	test_int8{fn: and_int8_127, fnname: "and_int8_127", in: -128, want: 0},
	test_int8{fn: and_127_int8, fnname: "and_127_int8", in: -127, want: 1},
	test_int8{fn: and_int8_127, fnname: "and_int8_127", in: -127, want: 1},
	test_int8{fn: and_127_int8, fnname: "and_127_int8", in: -1, want: 127},
	test_int8{fn: and_int8_127, fnname: "and_int8_127", in: -1, want: 127},
	test_int8{fn: and_127_int8, fnname: "and_127_int8", in: 0, want: 0},
	test_int8{fn: and_int8_127, fnname: "and_int8_127", in: 0, want: 0},
	test_int8{fn: and_127_int8, fnname: "and_127_int8", in: 1, want: 1},
	test_int8{fn: and_int8_127, fnname: "and_int8_127", in: 1, want: 1},
	test_int8{fn: and_127_int8, fnname: "and_127_int8", in: 126, want: 126},
	test_int8{fn: and_int8_127, fnname: "and_int8_127", in: 126, want: 126},
	test_int8{fn: and_127_int8, fnname: "and_127_int8", in: 127, want: 127},
	test_int8{fn: and_int8_127, fnname: "and_int8_127", in: 127, want: 127},
	test_int8{fn: or_Neg128_int8, fnname: "or_Neg128_int8", in: -128, want: -128},
	test_int8{fn: or_int8_Neg128, fnname: "or_int8_Neg128", in: -128, want: -128},
	test_int8{fn: or_Neg128_int8, fnname: "or_Neg128_int8", in: -127, want: -127},
	test_int8{fn: or_int8_Neg128, fnname: "or_int8_Neg128", in: -127, want: -127},
	test_int8{fn: or_Neg128_int8, fnname: "or_Neg128_int8", in: -1, want: -1},
	test_int8{fn: or_int8_Neg128, fnname: "or_int8_Neg128", in: -1, want: -1},
	test_int8{fn: or_Neg128_int8, fnname: "or_Neg128_int8", in: 0, want: -128},
	test_int8{fn: or_int8_Neg128, fnname: "or_int8_Neg128", in: 0, want: -128},
	test_int8{fn: or_Neg128_int8, fnname: "or_Neg128_int8", in: 1, want: -127},
	test_int8{fn: or_int8_Neg128, fnname: "or_int8_Neg128", in: 1, want: -127},
	test_int8{fn: or_Neg128_int8, fnname: "or_Neg128_int8", in: 126, want: -2},
	test_int8{fn: or_int8_Neg128, fnname: "or_int8_Neg128", in: 126, want: -2},
	test_int8{fn: or_Neg128_int8, fnname: "or_Neg128_int8", in: 127, want: -1},
	test_int8{fn: or_int8_Neg128, fnname: "or_int8_Neg128", in: 127, want: -1},
	test_int8{fn: or_Neg127_int8, fnname: "or_Neg127_int8", in: -128, want: -127},
	test_int8{fn: or_int8_Neg127, fnname: "or_int8_Neg127", in: -128, want: -127},
	test_int8{fn: or_Neg127_int8, fnname: "or_Neg127_int8", in: -127, want: -127},
	test_int8{fn: or_int8_Neg127, fnname: "or_int8_Neg127", in: -127, want: -127},
	test_int8{fn: or_Neg127_int8, fnname: "or_Neg127_int8", in: -1, want: -1},
	test_int8{fn: or_int8_Neg127, fnname: "or_int8_Neg127", in: -1, want: -1},
	test_int8{fn: or_Neg127_int8, fnname: "or_Neg127_int8", in: 0, want: -127},
	test_int8{fn: or_int8_Neg127, fnname: "or_int8_Neg127", in: 0, want: -127},
	test_int8{fn: or_Neg127_int8, fnname: "or_Neg127_int8", in: 1, want: -127},
	test_int8{fn: or_int8_Neg127, fnname: "or_int8_Neg127", in: 1, want: -127},
	test_int8{fn: or_Neg127_int8, fnname: "or_Neg127_int8", in: 126, want: -1},
	test_int8{fn: or_int8_Neg127, fnname: "or_int8_Neg127", in: 126, want: -1},
	test_int8{fn: or_Neg127_int8, fnname: "or_Neg127_int8", in: 127, want: -1},
	test_int8{fn: or_int8_Neg127, fnname: "or_int8_Neg127", in: 127, want: -1},
	test_int8{fn: or_Neg1_int8, fnname: "or_Neg1_int8", in: -128, want: -1},
	test_int8{fn: or_int8_Neg1, fnname: "or_int8_Neg1", in: -128, want: -1},
	test_int8{fn: or_Neg1_int8, fnname: "or_Neg1_int8", in: -127, want: -1},
	test_int8{fn: or_int8_Neg1, fnname: "or_int8_Neg1", in: -127, want: -1},
	test_int8{fn: or_Neg1_int8, fnname: "or_Neg1_int8", in: -1, want: -1},
	test_int8{fn: or_int8_Neg1, fnname: "or_int8_Neg1", in: -1, want: -1},
	test_int8{fn: or_Neg1_int8, fnname: "or_Neg1_int8", in: 0, want: -1},
	test_int8{fn: or_int8_Neg1, fnname: "or_int8_Neg1", in: 0, want: -1},
	test_int8{fn: or_Neg1_int8, fnname: "or_Neg1_int8", in: 1, want: -1},
	test_int8{fn: or_int8_Neg1, fnname: "or_int8_Neg1", in: 1, want: -1},
	test_int8{fn: or_Neg1_int8, fnname: "or_Neg1_int8", in: 126, want: -1},
	test_int8{fn: or_int8_Neg1, fnname: "or_int8_Neg1", in: 126, want: -1},
	test_int8{fn: or_Neg1_int8, fnname: "or_Neg1_int8", in: 127, want: -1},
	test_int8{fn: or_int8_Neg1, fnname: "or_int8_Neg1", in: 127, want: -1},
	test_int8{fn: or_0_int8, fnname: "or_0_int8", in: -128, want: -128},
	test_int8{fn: or_int8_0, fnname: "or_int8_0", in: -128, want: -128},
	test_int8{fn: or_0_int8, fnname: "or_0_int8", in: -127, want: -127},
	test_int8{fn: or_int8_0, fnname: "or_int8_0", in: -127, want: -127},
	test_int8{fn: or_0_int8, fnname: "or_0_int8", in: -1, want: -1},
	test_int8{fn: or_int8_0, fnname: "or_int8_0", in: -1, want: -1},
	test_int8{fn: or_0_int8, fnname: "or_0_int8", in: 0, want: 0},
	test_int8{fn: or_int8_0, fnname: "or_int8_0", in: 0, want: 0},
	test_int8{fn: or_0_int8, fnname: "or_0_int8", in: 1, want: 1},
	test_int8{fn: or_int8_0, fnname: "or_int8_0", in: 1, want: 1},
	test_int8{fn: or_0_int8, fnname: "or_0_int8", in: 126, want: 126},
	test_int8{fn: or_int8_0, fnname: "or_int8_0", in: 126, want: 126},
	test_int8{fn: or_0_int8, fnname: "or_0_int8", in: 127, want: 127},
	test_int8{fn: or_int8_0, fnname: "or_int8_0", in: 127, want: 127},
	test_int8{fn: or_1_int8, fnname: "or_1_int8", in: -128, want: -127},
	test_int8{fn: or_int8_1, fnname: "or_int8_1", in: -128, want: -127},
	test_int8{fn: or_1_int8, fnname: "or_1_int8", in: -127, want: -127},
	test_int8{fn: or_int8_1, fnname: "or_int8_1", in: -127, want: -127},
	test_int8{fn: or_1_int8, fnname: "or_1_int8", in: -1, want: -1},
	test_int8{fn: or_int8_1, fnname: "or_int8_1", in: -1, want: -1},
	test_int8{fn: or_1_int8, fnname: "or_1_int8", in: 0, want: 1},
	test_int8{fn: or_int8_1, fnname: "or_int8_1", in: 0, want: 1},
	test_int8{fn: or_1_int8, fnname: "or_1_int8", in: 1, want: 1},
	test_int8{fn: or_int8_1, fnname: "or_int8_1", in: 1, want: 1},
	test_int8{fn: or_1_int8, fnname: "or_1_int8", in: 126, want: 127},
	test_int8{fn: or_int8_1, fnname: "or_int8_1", in: 126, want: 127},
	test_int8{fn: or_1_int8, fnname: "or_1_int8", in: 127, want: 127},
	test_int8{fn: or_int8_1, fnname: "or_int8_1", in: 127, want: 127},
	test_int8{fn: or_126_int8, fnname: "or_126_int8", in: -128, want: -2},
	test_int8{fn: or_int8_126, fnname: "or_int8_126", in: -128, want: -2},
	test_int8{fn: or_126_int8, fnname: "or_126_int8", in: -127, want: -1},
	test_int8{fn: or_int8_126, fnname: "or_int8_126", in: -127, want: -1},
	test_int8{fn: or_126_int8, fnname: "or_126_int8", in: -1, want: -1},
	test_int8{fn: or_int8_126, fnname: "or_int8_126", in: -1, want: -1},
	test_int8{fn: or_126_int8, fnname: "or_126_int8", in: 0, want: 126},
	test_int8{fn: or_int8_126, fnname: "or_int8_126", in: 0, want: 126},
	test_int8{fn: or_126_int8, fnname: "or_126_int8", in: 1, want: 127},
	test_int8{fn: or_int8_126, fnname: "or_int8_126", in: 1, want: 127},
	test_int8{fn: or_126_int8, fnname: "or_126_int8", in: 126, want: 126},
	test_int8{fn: or_int8_126, fnname: "or_int8_126", in: 126, want: 126},
	test_int8{fn: or_126_int8, fnname: "or_126_int8", in: 127, want: 127},
	test_int8{fn: or_int8_126, fnname: "or_int8_126", in: 127, want: 127},
	test_int8{fn: or_127_int8, fnname: "or_127_int8", in: -128, want: -1},
	test_int8{fn: or_int8_127, fnname: "or_int8_127", in: -128, want: -1},
	test_int8{fn: or_127_int8, fnname: "or_127_int8", in: -127, want: -1},
	test_int8{fn: or_int8_127, fnname: "or_int8_127", in: -127, want: -1},
	test_int8{fn: or_127_int8, fnname: "or_127_int8", in: -1, want: -1},
	test_int8{fn: or_int8_127, fnname: "or_int8_127", in: -1, want: -1},
	test_int8{fn: or_127_int8, fnname: "or_127_int8", in: 0, want: 127},
	test_int8{fn: or_int8_127, fnname: "or_int8_127", in: 0, want: 127},
	test_int8{fn: or_127_int8, fnname: "or_127_int8", in: 1, want: 127},
	test_int8{fn: or_int8_127, fnname: "or_int8_127", in: 1, want: 127},
	test_int8{fn: or_127_int8, fnname: "or_127_int8", in: 126, want: 127},
	test_int8{fn: or_int8_127, fnname: "or_int8_127", in: 126, want: 127},
	test_int8{fn: or_127_int8, fnname: "or_127_int8", in: 127, want: 127},
	test_int8{fn: or_int8_127, fnname: "or_int8_127", in: 127, want: 127},
	test_int8{fn: xor_Neg128_int8, fnname: "xor_Neg128_int8", in: -128, want: 0},
	test_int8{fn: xor_int8_Neg128, fnname: "xor_int8_Neg128", in: -128, want: 0},
	test_int8{fn: xor_Neg128_int8, fnname: "xor_Neg128_int8", in: -127, want: 1},
	test_int8{fn: xor_int8_Neg128, fnname: "xor_int8_Neg128", in: -127, want: 1},
	test_int8{fn: xor_Neg128_int8, fnname: "xor_Neg128_int8", in: -1, want: 127},
	test_int8{fn: xor_int8_Neg128, fnname: "xor_int8_Neg128", in: -1, want: 127},
	test_int8{fn: xor_Neg128_int8, fnname: "xor_Neg128_int8", in: 0, want: -128},
	test_int8{fn: xor_int8_Neg128, fnname: "xor_int8_Neg128", in: 0, want: -128},
	test_int8{fn: xor_Neg128_int8, fnname: "xor_Neg128_int8", in: 1, want: -127},
	test_int8{fn: xor_int8_Neg128, fnname: "xor_int8_Neg128", in: 1, want: -127},
	test_int8{fn: xor_Neg128_int8, fnname: "xor_Neg128_int8", in: 126, want: -2},
	test_int8{fn: xor_int8_Neg128, fnname: "xor_int8_Neg128", in: 126, want: -2},
	test_int8{fn: xor_Neg128_int8, fnname: "xor_Neg128_int8", in: 127, want: -1},
	test_int8{fn: xor_int8_Neg128, fnname: "xor_int8_Neg128", in: 127, want: -1},
	test_int8{fn: xor_Neg127_int8, fnname: "xor_Neg127_int8", in: -128, want: 1},
	test_int8{fn: xor_int8_Neg127, fnname: "xor_int8_Neg127", in: -128, want: 1},
	test_int8{fn: xor_Neg127_int8, fnname: "xor_Neg127_int8", in: -127, want: 0},
	test_int8{fn: xor_int8_Neg127, fnname: "xor_int8_Neg127", in: -127, want: 0},
	test_int8{fn: xor_Neg127_int8, fnname: "xor_Neg127_int8", in: -1, want: 126},
	test_int8{fn: xor_int8_Neg127, fnname: "xor_int8_Neg127", in: -1, want: 126},
	test_int8{fn: xor_Neg127_int8, fnname: "xor_Neg127_int8", in: 0, want: -127},
	test_int8{fn: xor_int8_Neg127, fnname: "xor_int8_Neg127", in: 0, want: -127},
	test_int8{fn: xor_Neg127_int8, fnname: "xor_Neg127_int8", in: 1, want: -128},
	test_int8{fn: xor_int8_Neg127, fnname: "xor_int8_Neg127", in: 1, want: -128},
	test_int8{fn: xor_Neg127_int8, fnname: "xor_Neg127_int8", in: 126, want: -1},
	test_int8{fn: xor_int8_Neg127, fnname: "xor_int8_Neg127", in: 126, want: -1},
	test_int8{fn: xor_Neg127_int8, fnname: "xor_Neg127_int8", in: 127, want: -2},
	test_int8{fn: xor_int8_Neg127, fnname: "xor_int8_Neg127", in: 127, want: -2},
	test_int8{fn: xor_Neg1_int8, fnname: "xor_Neg1_int8", in: -128, want: 127},
	test_int8{fn: xor_int8_Neg1, fnname: "xor_int8_Neg1", in: -128, want: 127},
	test_int8{fn: xor_Neg1_int8, fnname: "xor_Neg1_int8", in: -127, want: 126},
	test_int8{fn: xor_int8_Neg1, fnname: "xor_int8_Neg1", in: -127, want: 126},
	test_int8{fn: xor_Neg1_int8, fnname: "xor_Neg1_int8", in: -1, want: 0},
	test_int8{fn: xor_int8_Neg1, fnname: "xor_int8_Neg1", in: -1, want: 0},
	test_int8{fn: xor_Neg1_int8, fnname: "xor_Neg1_int8", in: 0, want: -1},
	test_int8{fn: xor_int8_Neg1, fnname: "xor_int8_Neg1", in: 0, want: -1},
	test_int8{fn: xor_Neg1_int8, fnname: "xor_Neg1_int8", in: 1, want: -2},
	test_int8{fn: xor_int8_Neg1, fnname: "xor_int8_Neg1", in: 1, want: -2},
	test_int8{fn: xor_Neg1_int8, fnname: "xor_Neg1_int8", in: 126, want: -127},
	test_int8{fn: xor_int8_Neg1, fnname: "xor_int8_Neg1", in: 126, want: -127},
	test_int8{fn: xor_Neg1_int8, fnname: "xor_Neg1_int8", in: 127, want: -128},
	test_int8{fn: xor_int8_Neg1, fnname: "xor_int8_Neg1", in: 127, want: -128},
	test_int8{fn: xor_0_int8, fnname: "xor_0_int8", in: -128, want: -128},
	test_int8{fn: xor_int8_0, fnname: "xor_int8_0", in: -128, want: -128},
	test_int8{fn: xor_0_int8, fnname: "xor_0_int8", in: -127, want: -127},
	test_int8{fn: xor_int8_0, fnname: "xor_int8_0", in: -127, want: -127},
	test_int8{fn: xor_0_int8, fnname: "xor_0_int8", in: -1, want: -1},
	test_int8{fn: xor_int8_0, fnname: "xor_int8_0", in: -1, want: -1},
	test_int8{fn: xor_0_int8, fnname: "xor_0_int8", in: 0, want: 0},
	test_int8{fn: xor_int8_0, fnname: "xor_int8_0", in: 0, want: 0},
	test_int8{fn: xor_0_int8, fnname: "xor_0_int8", in: 1, want: 1},
	test_int8{fn: xor_int8_0, fnname: "xor_int8_0", in: 1, want: 1},
	test_int8{fn: xor_0_int8, fnname: "xor_0_int8", in: 126, want: 126},
	test_int8{fn: xor_int8_0, fnname: "xor_int8_0", in: 126, want: 126},
	test_int8{fn: xor_0_int8, fnname: "xor_0_int8", in: 127, want: 127},
	test_int8{fn: xor_int8_0, fnname: "xor_int8_0", in: 127, want: 127},
	test_int8{fn: xor_1_int8, fnname: "xor_1_int8", in: -128, want: -127},
	test_int8{fn: xor_int8_1, fnname: "xor_int8_1", in: -128, want: -127},
	test_int8{fn: xor_1_int8, fnname: "xor_1_int8", in: -127, want: -128},
	test_int8{fn: xor_int8_1, fnname: "xor_int8_1", in: -127, want: -128},
	test_int8{fn: xor_1_int8, fnname: "xor_1_int8", in: -1, want: -2},
	test_int8{fn: xor_int8_1, fnname: "xor_int8_1", in: -1, want: -2},
	test_int8{fn: xor_1_int8, fnname: "xor_1_int8", in: 0, want: 1},
	test_int8{fn: xor_int8_1, fnname: "xor_int8_1", in: 0, want: 1},
	test_int8{fn: xor_1_int8, fnname: "xor_1_int8", in: 1, want: 0},
	test_int8{fn: xor_int8_1, fnname: "xor_int8_1", in: 1, want: 0},
	test_int8{fn: xor_1_int8, fnname: "xor_1_int8", in: 126, want: 127},
	test_int8{fn: xor_int8_1, fnname: "xor_int8_1", in: 126, want: 127},
	test_int8{fn: xor_1_int8, fnname: "xor_1_int8", in: 127, want: 126},
	test_int8{fn: xor_int8_1, fnname: "xor_int8_1", in: 127, want: 126},
	test_int8{fn: xor_126_int8, fnname: "xor_126_int8", in: -128, want: -2},
	test_int8{fn: xor_int8_126, fnname: "xor_int8_126", in: -128, want: -2},
	test_int8{fn: xor_126_int8, fnname: "xor_126_int8", in: -127, want: -1},
	test_int8{fn: xor_int8_126, fnname: "xor_int8_126", in: -127, want: -1},
	test_int8{fn: xor_126_int8, fnname: "xor_126_int8", in: -1, want: -127},
	test_int8{fn: xor_int8_126, fnname: "xor_int8_126", in: -1, want: -127},
	test_int8{fn: xor_126_int8, fnname: "xor_126_int8", in: 0, want: 126},
	test_int8{fn: xor_int8_126, fnname: "xor_int8_126", in: 0, want: 126},
	test_int8{fn: xor_126_int8, fnname: "xor_126_int8", in: 1, want: 127},
	test_int8{fn: xor_int8_126, fnname: "xor_int8_126", in: 1, want: 127},
	test_int8{fn: xor_126_int8, fnname: "xor_126_int8", in: 126, want: 0},
	test_int8{fn: xor_int8_126, fnname: "xor_int8_126", in: 126, want: 0},
	test_int8{fn: xor_126_int8, fnname: "xor_126_int8", in: 127, want: 1},
	test_int8{fn: xor_int8_126, fnname: "xor_int8_126", in: 127, want: 1},
	test_int8{fn: xor_127_int8, fnname: "xor_127_int8", in: -128, want: -1},
	test_int8{fn: xor_int8_127, fnname: "xor_int8_127", in: -128, want: -1},
	test_int8{fn: xor_127_int8, fnname: "xor_127_int8", in: -127, want: -2},
	test_int8{fn: xor_int8_127, fnname: "xor_int8_127", in: -127, want: -2},
	test_int8{fn: xor_127_int8, fnname: "xor_127_int8", in: -1, want: -128},
	test_int8{fn: xor_int8_127, fnname: "xor_int8_127", in: -1, want: -128},
	test_int8{fn: xor_127_int8, fnname: "xor_127_int8", in: 0, want: 127},
	test_int8{fn: xor_int8_127, fnname: "xor_int8_127", in: 0, want: 127},
	test_int8{fn: xor_127_int8, fnname: "xor_127_int8", in: 1, want: 126},
	test_int8{fn: xor_int8_127, fnname: "xor_int8_127", in: 1, want: 126},
	test_int8{fn: xor_127_int8, fnname: "xor_127_int8", in: 126, want: 1},
	test_int8{fn: xor_int8_127, fnname: "xor_int8_127", in: 126, want: 1},
	test_int8{fn: xor_127_int8, fnname: "xor_127_int8", in: 127, want: 0},
	test_int8{fn: xor_int8_127, fnname: "xor_int8_127", in: 127, want: 0}}

var failed bool

func main() {
	for _, test := range tests_uint64 {
		if got := test.fn(test.in); got != test.want {
			fmt.Printf("%s(%d) = %d, want %d\n", test.fnname, test.in, got, test.want)
			failed = true
		}
	}
	for _, test := range tests_int64 {
		if got := test.fn(test.in); got != test.want {
			fmt.Printf("%s(%d) = %d, want %d\n", test.fnname, test.in, got, test.want)
			failed = true
		}
	}
	for _, test := range tests_uint32 {
		if got := test.fn(test.in); got != test.want {
			fmt.Printf("%s(%d) = %d, want %d\n", test.fnname, test.in, got, test.want)
			failed = true
		}
	}
	for _, test := range tests_int32 {
		if got := test.fn(test.in); got != test.want {
			fmt.Printf("%s(%d) = %d, want %d\n", test.fnname, test.in, got, test.want)
			failed = true
		}
	}
	for _, test := range tests_uint16 {
		if got := test.fn(test.in); got != test.want {
			fmt.Printf("%s(%d) = %d, want %d\n", test.fnname, test.in, got, test.want)
			failed = true
		}
	}
	for _, test := range tests_int16 {
		if got := test.fn(test.in); got != test.want {
			fmt.Printf("%s(%d) = %d, want %d\n", test.fnname, test.in, got, test.want)
			failed = true
		}
	}
	for _, test := range tests_uint8 {
		if got := test.fn(test.in); got != test.want {
			fmt.Printf("%s(%d) = %d, want %d\n", test.fnname, test.in, got, test.want)
			failed = true
		}
	}
	for _, test := range tests_int8 {
		if got := test.fn(test.in); got != test.want {
			fmt.Printf("%s(%d) = %d, want %d\n", test.fnname, test.in, got, test.want)
			failed = true
		}
	}

	if failed {
		os.Exit(1)
	}
}
